
【前端应该和后端一样的思路，自己完整搭建一次，把每个细节搞清楚】
【一旦突破后，最重要的问题立马转换为：如何接项目、2个demo项目、深度学习。只要做5个高质量的项目，市场立马能永久打开】

用敏捷的方式来提升计划性和成功率
用软件工程的DevOps方法来提升效率和规范性
了解华为云的持续集成

【周末】开涛的书不能停

不能急躁，还是要读读别人的门户代码，然后再做自己的产品

======================================================================================================================

【晚上】把OAuth2.0授权服务器看一下，了解一下
今天看一下NIO，再确认/重构我的上传功能
【把definitionMap和 doAuthrization 获取角色的，这2个地方抽成函数】

现在为啥不启动es，程序还跑不起来了？

【十一升Java 17，java 17只需要花3天到一周，主要精力还是在解释器上】
【如果对自己的技术有信心】1.搞技术也能赚钱，找更有钱的工作；2.也是创业，达成团队目标

【基础设施还差一个sys_dictionary表，晚上搞一下建表、DAO层】：
	https://blog.csdn.net/chengjing5728/article/details/100832639
	https://blog.csdn.net/weixin_39520869/article/details/113600272

级别的那个问题：部门最高级别以及对应的职务级别之间可以松耦合。
考虑这样一个问题如何解决：如何获取每个部门的leader？（不用考虑复杂，就先假设有10个平级部门，并且老大的部门有和老大一样级别的员工）可以加一个字段。如何获取部门的
一把手、二把手？

【一步步来】
    （把现在auth_user表的locked字段改成status字段）`status` tinyint(3) NOT NULL DEFAULT '1' COMMENT '用户的状态 1 ：正常  0：冻结 2：删除',
    【一个重要的问题：sys_user_department和sys_position之间的关联。每一个level的部门对应的职位的级别是有限的，要设计好精妙的关联防止出错】
    加3个表的DAO、Service、controller层：sys_user_department、sys_position、sys_user_position
    目标：要能看清组织结构及所有人员的管理结构。最后再看哪些关联表可以依附到已有的表中（不用独立出来）
    通过这个搞清楚主管的设置，如果设置了主管，如何在工作流中使用主管信息达到一级级审批？

【文件上传以及分片上传也是基础设施】分片上传中，NIO是一个非常好的场景。看看曾亮宇这个文件拷贝应该怎么做。自带的大文件上传，如何保证上传不失败及进度、续传？
NIO是基础设施(和epoll一起学习，潜龙勿用)

webSocket需要再完整搞一轮
// todo 把 synchronized 和CopyOnWriteArraySet再看一下
// todo WebSocket写好后确认要能实现下列3项功能：1.聊天；2.定时推送数据；3.消息中心
// todo 需要一个注册机制，需要一段对消息类型进行统一管理的代码

看看还有哪些基础设施缺失【你必须得有自己的一套逻辑】
前端：1.前端单独的基础设施；2.对应后端基础设施补充内容；
【名字叫foundation】加个服务，搞定时任务、规则引擎、工作流这些基础设施

shiro isPermitted 再写一版，用这个关键字把搜出来的内容都处理掉
新问题：1.登录会报错
【最大的问题已经变成】如何挣到更多的钱

getPageList这种方法，适合写在xml里面吗？在家试一下

【公司里面的FileStream NIO要看】
【公司里面的Scheduler的流程要看一遍】
QUARTZ流程
sw_sched_job与syncJob的流程搞清楚
几种trigger及区别搞清楚
misfiredtrigger
限信息表（qrtz_locks）：CALENDAR_ACCESS JOB_ACCESS MISFIRE_ACCESS STATE_ACCESS TRIGGER_ACCESS
job_data：一个blob字段，存放持久化job对象
【注意一下线程策略】#线程数量 org.quartz.threadPool.threadCount = 10
分布式定时任务调度系统技术选型(elastic-job\xxl-job\quartz\Saturn\opencron\antares):https://zhuanlan.zhihu.com/p/129055463
动态配置springboot定时任务的开关(@ConditionalOnProperty)【还应该更进一步，如何在程序中动态控制？可以考虑用反射来实现吗？】：
	https://blog.csdn.net/love4amanda/article/details/111692405
	https://blog.csdn.net/enthan809882/article/details/104172856
动态修改定时规则：https://blog.csdn.net/wuyongde_0922/article/details/82790149
quartz的原理及源码分析才是重要的，定时任务的重要性可能超过我的想象，需要进一步理解
springboot中使用quartz进行定时任务操作【先把每一个配置读懂】：https://blog.csdn.net/qq_37804737/article/details/84335880
@Scheduled只适合处理简单的计划任务，不能处理分布式计划任务：https://www.cnblogs.com/jing99/p/11546559.html
SpringBoot集成Quartz动态定时任务：https://blog.csdn.net/l18848956739/article/details/86597709
Quartz数据库表分析：https://www.jianshu.com/p/36329ed4a085
quartz原理揭秘和源码解读：https://www.jianshu.com/p/bab8e4e32952
quartz的基础你真的了解吗：https://zhuanlan.zhihu.com/p/359957139
Quartz集群原理以及配置应用的方法详解：https://zhuanlan.zhihu.com/p/90590154
Quartz框架（五）— 有状态的job和无状态job：https://www.jianshu.com/p/687a7b7e5954

我的model上为啥没有注解？

【ES】把多条件查询、文本模糊匹配等继续写通。测一下关掉后数据还在不在（应该是在的）
ElasticSearch原理：
	https://zhuanlan.zhihu.com/p/336889554
	https://zhuanlan.zhihu.com/p/94915597
	https://zhuanlan.zhihu.com/p/74234766
	https://zhuanlan.zhihu.com/p/62892586
ElasticSearch 亿级数据检索深度优化：https://mp.weixin.qq.com/s/w7BdHMynblwUsTGsKiZ3Mw
ElasticSearch的plugin以及分词器还得再看看
Elasticsearch6.x和7.x版本常用插件汇总：https://www.cnblogs.com/yobit/p/11376453.html
Elasticsearch 配置用户名和密码：
    https://blog.csdn.net/weixin_43315211/article/details/99677072
    https://blog.csdn.net/qq_35349114/article/details/100096115
把es的场景和底层数据结构关联起来，彻底搞清楚
ES性能调优、ES与大数据
RestHighLevelClient批量删除满足某些条件的数据：https://blog.csdn.net/john1337/article/details/103146692
es-RestHighLevelClient增删改查：https://www.cnblogs.com/javallh/p/13790486.html
基于SpringBoot通过RestHighLevelClient进行CRUD：https://blog.csdn.net/hellow0rd/article/details/107963453
RestHighLevelClient查询es【CRUD都搞一遍】：https://www.cnblogs.com/wangrudong003/p/10959525.html
elasticsearch查看所有index：https://blog.csdn.net/u012307002/article/details/52837724
RestHighLevelClient 使用方法及封装工具：https://blog.csdn.net/weixin_30736301/article/details/94941441
springboot elasticsearch整合实践（RestHighLevelClient）：https://blog.csdn.net/u014532775/article/details/93335827
SpringBoot调用ElasticSearch的RestHighLevelClient的功能详解：https://zhuanlan.zhihu.com/p/143786937
Cerebro，这个是一款Elasticsearch监控工具，下载地址：https://github.com/lmenezes/cerebro/releases
Elasticsearch&JDK版本要求：https://blog.csdn.net/chentyit/article/details/101193838
Elasticsearch搜索过程详解：https://segmentfault.com/a/1190000019577908
analyzer、search_analyzer

Spring Authorization Server：
    https://blog.csdn.net/qq_16063307/article/details/113972486
    https://www.baeldung.com/spring-security-oauth-auth-server
【极度重要，这个是打通企业各应用的关键】OAuth 2.0【先自己搭建server，然后自己连接认证】 spring gateway OAuth2
Spring Cloud Gateway+Oauth2 实现统一认证和鉴权【nimbus】：https://blog.csdn.net/weixin_33716865/article/details/112339860
Run your own OAuth2 Server：https://www.ory.sh/run-oauth2-server-open-source-api-security/
OAuth 2.0单元测试解决方案【之前既没想到搭server，又没想到单元测试，所以三方登录一直没做起来】：
	https://zhuanlan.zhihu.com/p/264371358
	https://zhuanlan.zhihu.com/p/265015515
OAuth 2：
	https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2
	https://www.tutorialspoint.com/oauth2.0/index.htm
Spring Authorization Server：https://blog.csdn.net/qq_16063307/article/details/113972486
10张流程图+部署图，讲透单点登录原理与简单实现！https://mp.weixin.qq.com/s/a7FIvU98jOP6OLiue78qug
Spring Authorization Server：https://blog.csdn.net/qq_16063307/article/details/113972486
3月已至，请问spring security oauth2停止维护后，需要不需要什么替代方案呢？https://www.zhihu.com/question/376047683/answer/1304840967
Spring官方宣布：新的Spring OAuth2.0授权服务器已经来了：https://zhuanlan.zhihu.com/p/195069540
OAuth2.0认证和授权机制讲解：https://zhuanlan.zhihu.com/p/20913727
shiro中OAuth2 集成【本地肯定是可以做实验的，只是麻烦一点，做一下】：https://www.cnblogs.com/yuluoxingkong/p/8268094.html

【把分布式锁搞成基础设施：(目标)好使用、好理解】对于“审核到一半，数据被删除”这种问题，可以考虑用分布式锁。问题是：在什么场景下比基于数据库、redis、zookeeper的分布式锁更简洁易用？怎么做好封装？怎么让代码更清晰？【对于这个问题，只能说我先把分布式锁的场景找到了】
分布式锁的知识：
	https://www.zhihu.com/search?type=content&q=%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%20%E4%BC%98%E5%8A%A3
	https://www.cnblogs.com/MrSaver/p/11567997.html

Grafana和Prometheus是基础设施
质量和效率相关的基础设施：sonarcube和jenkins弄好。jenkins与powershell？
sonarcube【sonarcube和jenkins有可比性吗？】：
    https://www.sonarqube.org/downloads/
    https://www.zhihu.com/question/277480517/answer/394089344
（4）idea安装checkstyle
https://note.youdao.com/ynoteshare1/index.html?id=9e352092ab2e17c7c095b9c46e67bf48&type=note#/
（5）idea安装pmd
https://note.youdao.com/ynoteshare1/index.html?id=13814eb462473fa3fd8dfbd8394405d5&type=note#/

二维码也是我自己的项目的基础设施【这一两年我都是从基础设施的角度来思考问题，看看这样能做起来不】
把二维码的代码，移植到我自己的项目中(前端二维码)


做一个MQTT+RabbitMQ的demo出来【可以先用单元测试来做，或者用树莓派做MQTT】
    https://dzone.com/articles/capture-iot-sensors-data-mqtt-protocol-rabbitmq-as
    https://funprojects.blog/2018/12/07/rabbitmq-for-iot/
MQTT Plugin：https://www.rabbitmq.com/mqtt.html
RabbitMQ Web MQTT Plugin：https://www.rabbitmq.com/web-mqtt.html
MQTTBOX使用：https://www.jianshu.com/p/055c0e35c7f6
RabbitMQ MQTT协议和AMQP协议：https://www.cnblogs.com/bclshuai/p/8607517.html
消息协议（MQTT、AMQP、XMPP、WAMP、STOMP）之间的区别和应用：https://blog.csdn.net/gyshun/article/details/83036987
MQTTBOX、Mosquitto MQTT publisher（rabbitmq-plugins enable rabbitmq_mqtt）
Top 10 Criteria for Selecting a MQTT Broker：https://dzone.com/articles/top-10-criteria-for-selecting-a-mqtt-broker-1

RabbitMQ 服务的SimpleMessageListenerContainer和DirectMessageListenerContainer：
	https://cn-blogs.cn/archives/9341.html
	https://blog.csdn.net/yingziisme/article/details/86418580
RabbitMq：SimpleMessageListenerContainer和ChannelAwareMessageListener的配合使用：https://www.cnblogs.com/lyd447113735/p/14808758.html
【在我的代码中把手动的basicAck和basicNack写通】Nack的语义是：这个消息，我无法处理，丢弃或者请让别的消费者处理
7.rabbitmq-消息的拒绝：https://www.jianshu.com/p/49f7c25f6d4d
channel的basicRecover：https://blog.csdn.net/fly_leopard/article/details/102821776
rabbitMQTemplate.setConfirmCallback、rabbitMQTemplate.setReturnCallback：https://www.jianshu.com/p/3d746fd110e3
RabbitMQ提供了transaction、confirm两种消息确认机制：https://blog.csdn.net/azhegps/article/details/53815201
rabbitmq-死信交换机和死信队列【自己实现延时队列】：https://www.jianshu.com/p/3c90a6d1cdb7
目标：mq在test里面继续写通channel等逻辑，不要污染业务逻辑
RabbitMQ channel【代码层面】(com.rabbitmq.client.Channel)：
	https://juejin.cn/post/6844904015508029453
	https://blog.csdn.net/weixin_38380858/article/details/84258507
	https://www.likecs.com/show-68586.html
Spring RabbitMQ Channel理解：https://juejin.cn/post/6844904015508029453
Springboot Rabbitmq UML图：https://blog.csdn.net/qq_39470742/article/details/87973487
MessageListenerAdapter：https://www.jianshu.com/p/d21bafe3b9fd
自定义交换机类型是什么操作？场景合适吗？
Spring封装AmqpAdmin、AmqpTemplate，RabbitAdmin、RabbitTemplate，SimpleMessageListenerContainer
一个RabbitTemplate对象，一个AmqpAdmin对象以及一个RabbitMessageTemplate对象：https://blog.csdn.net/u011126891/article/details/54376179
AmqpAdmin管理组件的使用：https://blog.csdn.net/Leon_Jinhai_Sun/article/details/99692190
对于延迟队列不管是 AMQP 协议或者 RabbitMQ 本身是不支持的，之前有介绍过如何使用 RabbitMQ 死信队列（DLX） + TTL 的方式来模拟实现延迟队列：https://www.imooc.com/article/302628
一文带你搞定RabbitMQ延迟队列：https://www.cnblogs.com/mfrank/p/11260355.html
 rabbitmq实现延迟队列用了rabbitmq-delayed-message-exchange插件,需要提前安装,并启用：https://www.cnblogs.com/chrischennx/p/7274556.html
RabbitMQ arguments中可以设置的队列的常见参数如下：https://os.51cto.com/art/202001/609404.htm?pc
经过我们的封装后，Message设置contentType那些都被隐藏了【看看我们封装的contentType】
RabbitMQ with Spring AMQP and Spring Boot：https://jstobigdata.com/rabbitmq/rabbitmq-with-spring-amqp-and-spring-boot/
发布端、消费端、消息路由、消息生命周期和身份认证标识等模块参数的设置
RabbitMQ队列（queue）的各个参数：https://www.cnblogs.com/leeego-123/p/11240201.html
Headers Exchanges：性能差，基本不会用
RabbitMQ的ChannelAwareMessageListener与MessageListener：https://blog.csdn.net/zhousenshan/article/details/78798088
我的理解：ChannelAwareMessageListener可以感知到channel然后进行basicAck和basicNAck、basicReject
spring-rabbit消费过程解析及AcknowledgeMode选择【很复杂】：https://blog.csdn.net/weixin_38380858/article/details/84963944
RabbitMQ的消息确认ACK机制：
	https://www.cnblogs.com/gyjx2016/p/13704504.html
	https://www.cnblogs.com/biehongli/p/11789098.html
	https://blog.csdn.net/weixin_43689480/article/details/98031003
A message MUST NOT be acknowledged more than once：
    https://www.pianshen.com/article/43811532214/
    https://blog.csdn.net/sbin456/article/details/109237192
RabbitMQ：消息发送确认 与 消息接收确认（ACK）：https://www.jianshu.com/p/2c5eebfd0e95
rabbitmq中的consumerTag和deliveryTag分别是干啥的，有什么用？https://blog.csdn.net/weixin_34185364/article/details/91931926
RabbitMQ中channel.basicAck的第二参数代表是否为多消息
rabbitMQ basicQos和basicAck作用和关系：https://blog.csdn.net/irabbit0708/article/details/88693435
vhost的配置
1.fanout测试【用家里的代码测把，积累一些代码】；
channel.exchangeDeclare、channel.basicPublish：https://www.jianshu.com/p/15871e3dbb27
深入剖析 RabbitMQ —— Spring 框架下实现 AMQP 高级消息队列协议：https://www.cnblogs.com/leslies2/p/11238859.html
黄学山的能力：对于一些东西研究的更广，例如MQ还用到ConnectionFactory、ChannelAwareMessageListener、DirectMessageListenerContainer、containerFactory。
我首先要举一反三，对应到kafka等，搞懂这些基础结构，然后再思考学习一门这样的技术时怎么入手看清全貌
RabbitMQ 3.9.0 正式发布，该版本主要围绕 Streams、支持 Erlang 24、Kubernetes、JOSN 日志记录、包获取、Erlang/OTP 兼容笔记这几大方面进行了更新与完善。
RabbitMQ 3.9.0 节点可以与 3.8.x 节点一起运行。然而，3.8.16+以及 3.9.x 两者都需要 Erlang 23.2 或更高版本支持（和支持24）。3.9.x 系列只有当集群中的所有节点都升级到 3.9.0 或该系列中的任何其他补丁版本时，才能使特定功能可用。更多详情可以查看发布说明：https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.9.0
Rabbitmq插件下载：
	https://www.rabbitmq.com/community-plugins.html
	https://blog.csdn.net/youjin/article/details/82586888
延迟消费写出来
Kafka vs. RabbitMQ: Architecture, Performance & Use Cases：https://www.upsolver.com/blog/kafka-versus-rabbitmq-architecture-performance-use-case

【非常重要】每个 CS 模式程序，尤其是高并发的网络服务端程序都有自己的网络异步事件处理库，Redis不例外。Redis 基于 Reactor 模型 封装了自己的事件驱动模型库。
为什么作者不使用已有的成熟的相关库，比如 Libevent 或 Libev？下面从源码入手介绍下 Redis 中封装的 ae 库：https://segmentfault.com/a/1190000016062999
Redis 事件机制详解：
    https://blog.csdn.net/Dome_/article/details/99713312
    https://www.cnblogs.com/tangxuliang/p/10659439.html
    https://blog.csdn.net/qq_37334135/article/details/77717248
RedisExpiredListener：
    https://www.cnblogs.com/owenma/p/10419896.html
    https://blog.csdn.net/cainiao1412/article/details/98881997
    https://blog.csdn.net/oeSeven/article/details/106359816

把shiro放到infrastructure包下面去。再思考一下我的单体式代码管理【这是一个新问题】
【规则引擎和scheduler是否搞成基础设施需要再调研】

eureka和gateway是基础设施：
    我们的eureka里面只配了一个@EnableWebSecurity，WebSecurityConfig extends WebSecurityConfigurerAdapter
    EnableWebSecurity注解有两个作用,1: 加载了WebSecurityConfiguration配置类, 配置安全认证策略。2: 加载了AuthenticationConfiguration, 配置了认证信息：https://blog.csdn.net/weixin_42849689/article/details/89953107
    WebSecurityConfigurerAdapter：
        https://blog.csdn.net/weixin_42849689/article/details/89957823
        https://blog.csdn.net/u012702547/article/details/107655180
    eureka配置项：
        https://www.cnblogs.com/zyon/p/11023750.html
        https://www.cnblogs.com/april-chen/p/10617066.html
    gateway里面可以配动态路由
    gateway的文章（gateway还是很强大的，有Hystrix断路器集成、请求速率限制等，可以通过filter完成很多功能）：
        https://spring.io/guides/gs/gateway/
        https://www.cnblogs.com/h--d/p/12733498.html
        https://www.cnblogs.com/h--d/p/12735381.html
        https://blog.csdn.net/ifrozen/article/details/80016566
    gateway在uri的schema协议部分为自定义的lb:类型，表示从微服务注册中心（如Eureka）订阅服务：https://www.cnblogs.com/crazymakercircle/p/11704077.html

凡是遇到template的地方，思考3个问题：1.是否有对应的注解；2.是否需要2次封装；3.可以用Bean的方式设置一些属性：https://www.cnblogs.com/zheaven/p/11906416.html

https是基础设施，现在对https的理解【那这样看来nginx也是基础设施】：
    1.前端nginx需要配置，读取静态资源文件；
    2.前端调用的后端服务要用到，否则从客户浏览器将是http协议发请求给后端；
    3.证书：生产的证书是crt和key文件（前端nginx配置这2个），用openssl生成p12文件给后端用。
瑞鹿云之所以nginx中配了https，微服务里面还配，是因为相当于有多个项目，没有统一走网关。考虑在nginx中统一配置。

pdf、office是基础设施。首先看一下poi等office库的英文对比文章
springboot与pdf：
    https://www.codejava.net/frameworks/spring-boot/pdf-export-example
    https://zetcode.com/articles/springbootpdfreport/
    https://kreepcode.com/spring-boot-and-angular-open-pdf-link-browser/
    https://zetcode.com/springboot/servepdf/

2021把后端技术巩固代码库完善，前端勉强能用；2022把找项目解决；2023把前端解决

家里代码，如果机器配置不够或者中间件在windows下没有，可以用江西3台大数据服务器【现在遇到的也就是redis版本比较低】
我的model的注释不全

家里代码swagger以及权限配好

对比我的代码返回值有没有泛型：ResultBean<T>。公司代码的Result.error等没有具体化，导致产生了一堆告警
【要能显示部门、部门主要负责人/职位、虚拟组织，就可以了】我的代码里面还差个机构信息，以及用户和机构/部门的关联【这一块得思考一下，然后到人人都是产品经理里面搜一下】。有管理层的时候，表怎么设计？
用户表与部门表设计：https://segmentfault.com/q/1010000037599084

京东猎户座发布开源，配置化一键生成cms系统【看看会对我的项目造成什么冲击。或许是我多虑了，思考有没有冲击的可能】：https://tianyalei.blog.csdn.net/article/details/115752780

【家里机器不再用java8，以后只下载java 17，从11开始特性用起】

Spring Boot 2 + Angular 11 + Preview PDF File：https://frontbackend.com/spring-boot/spring-boot-2-angular-11-preview-pdf-file
把D3.js、three.js搞懂，把pdf预览、word/excel导出及预览搞熟，这些才是赚钱的核心
傅里叶分析一定要看
The Role of Software in Business(站在很高的视角来看待这一问题)：https://www.internetvibes.net/2021/05/03/the-role-of-software-in-business/
【物联网要看2天，这是吃饭的家伙】
掂量一下：以我现在的实力和能力搞关系能搞到什么程度，具体步骤是什么
在家可以对各个部分单独推进：1.前端；2.cassandra、mongodb等nosql数据库（包括海量数据查询）；3.流式计算；4.图数据库、机器学习算法及引擎。

【推进不动了，找20个问题，搞完后转PL】
    把SecurityManager相关的笔记都搞完
    怎么把shiro的鉴权移到网关？再思考网关功能
    加jwt代码
    2.把ShiroConfig里面的无用代码过一遍后干掉
    理解JS里面generator的原理
    generator：https://javascript.info/generators
    JS里面的generator可以产生一个无穷数组（Using async generators一节看一下）：https://www.geeksforgeeks.org/javascript-generator/
    generator与async、await的语法糖关系？
    yield和协程的关系是：用yield实现协程
    体会EventBus的抽象【可以先对比guava。现在还看不懂这个，证明我没理解】：
    public interface EventBus {:https://blog.csdn.net/xiang_shuo/article/details/80250164
        void publish(Object var1);
        void register(Object var1);
        void unregister(Object var1);
    }
    guava eventbus源码解析：https://my.oschina.net/u/3775437/blog/1841898
    使用Guava RateLimiter限流以及源码解析：https://cloud.tencent.com/developer/article/1625114
    shiro里面有CacheManagerAware和EventBusAware、PermissionResolverAware、RolePermissionResolverAware
    把凯涛shiro教材缓存那一章的aware也搞懂
    CachingSessionDAO extends AbstractSessionDAO implements CacheManagerAware
    3.aware的问题[shiro里面的几个aware是怎么获取到容器相关信息的？]
    Shiro - 缓存管理与CacheManagerAware接口：https://blog.csdn.net/J080624/article/details/83788196
    Shiro 提供了 CachingRealm，其实现了 CacheManagerAware 接口，提供了缓存的一些基础 实现；另外 AuthenticatingRealm 及 AuthorizingRealm 分别提供了对 AuthenticationInfo 和 AuthorizationInfo 信息的缓存。
    LogoutAware
    【这种代码的类自己可能一个都写不出来，要多学习】
    Shiro ThreadContext简单介绍：
    https://blog.csdn.net/Entodie/article/details/100526765
    https://www.iteye.com/blog/suichangkele-2276897
    SecurityUtils与ThreadLocal？
    一人或者多人登陆的问题
    并发登录人数控制自己做很简单，先看看别人的：https://www.cnblogs.com/lyh421/p/7099541.html
    【自己写 MultiRequestBody】

1.加了ComponentScan后，没有加的可能扫描不到，有坑，例如我的@ServerEndpoint；
2.@ComponentScan包名加.*和不加的区别：https://blog.csdn.net/weixin_43950568/article/details/104196017


【工作、task.txt(几个项目的源码分析、分布式那个课程把知识拉开)、scheme三管齐下。分布式的优先级最低】
【晚上先把资料准备好】【家里干文档的顺序不对，应该先干前两年的那2个】
MIT 6.824：
    https://www.zhihu.com/question/29597104
    网站：https://pdos.csail.mit.edu/6.824/schedule.html
    视频：
    作业完成：

Shiro与spring session
Spring web
Spring batch提供了什么抽象？
Spring XD是大数据相关的

mybatis的一级缓存SqlSession默认开启？在我的电脑上测一下

引用的log（lombok、@slf4j）对象标红了，是因为java 14的影响吗？

看MultiRequestBodyResolver完全看懂（并看更多参数resolver代码）

当前有些表没有字段注释，没有creator_id和updator_id

一般继承AuthorizingRealm（授权）即可；其继承了AuthenticatingRealm（即身份验证），而且也间接继承了 CachingRealm（带有缓存实现）。剩下的问题是：继承或者实现其他几个层级的接口、类会有什么区别？
Shiro里面有AdviceFilter，看看spring里面Advice相关的类，是不是都跟AOP有关？
1.分析SqlSession和shiro、servlet的session接口有没有相似的地方和设计思路；
https://blog.csdn.net/zhangbohun/article/details/85123523
shiro根据是否登录确认能否评论
【shiro到1.7.0了，看看有没有新的文档】有没有增加SSO、OAuth 2等新功能？

分析@RequestBody原理，把MultiRequestBody搞清楚（正是实战分析源码、提升的机会）【基础设置】（先用map实现功能，后续搜Map<String, Object>再改造@MultiRequestBody）
我的ResultUtils应该改名，这个严格来说不能叫工具类

读懂Slf4jImpl的代码，然后就清楚了【LoggerFactory.getLogger(clazz);在使用mybatis-plus时传进来的参数是字符串：“com.baomidou.mybatisplus.core.toolkit.GlobalConfigUtils”；Slf4jLocationAwareLoggerImpl】：https://blog.csdn.net/hou_ge/article/details/100556022
哪里是找真正实现类的代码？
GlobalConfigUtils传入：
    public static Logger getLogger(String name) {
        ILoggerFactory iLoggerFactory = getILoggerFactory();
        return iLoggerFactory.getLogger(name);
    }
最终搞懂，为什么传的是GlobalConfigUtils
反射不仅用于框架，在日志模块里面也发挥了重要作用

调试任务：1.把mysql-connector-java注掉，找到报错地方的DataSource代码；2.自己思考（Druid）注册DataSource原理

看mybatis源码，然后是日志框架源码，然后是guava源码
阅读mybatis日志模块代码（mybatis代码不多，暴力法也能全部看下来，值得一看）：org.mybatis:mybatis，org.apache.ibatis.logging。看LogFactory，private static Constructor<? extends Log> logConstructor; 【实际上只需要两步：1.确认日志怎么打的；2.看LogFactory怎么生成Log对象】
myBatis中的插件机制：https://www.jianshu.com/p/bcea7adb3135

shiro不适合于网关？（无稽之谈）

isPermitted方法跟踪【是不是可以把代码和WildcardPermission整合一下】：
    1.进入ModularRealmAuthorizer的public boolean isPermitted(PrincipalCollection principals, String permission) 方法；
    2.最终进入了CustomRealm里面的isPermitted方法；
    3.根据AuthorizingRealm和SimpleAccountRealm里面的isPermitted方法确认是否由必要自定义PermissionResolver？
    4.【重点】先看怎么把字符串解析成Permission对象(AuthorizingRealm里面的isPermitted方法)，然后再看WildcardPermission中的isPermitted(Permission permission, AuthorizationInfo info)方法，
    从这个里面得知，如果要直接使用WildcardPermission及对应的默认implies、isPermitted方法，需要在CustomRealm里面的AuthorizationInfo里面需要把permission先set；
    5.默认的是怎么比较的？
    6.在对比CustomRealm里面的其他方法和AuthorizingRealm、SimpleAccountRealm里面同名方法的实现；

看AllPermission、WildcardPermission、WildcardPermissionResolver【如何与前端写通形成一个完美的设计？】
    https://blog.csdn.net/sharetop/article/details/50250651
    https://www.baeldung.com/apache-shiro-access-control
PermissionResolver用于解析权限字符串到Permission实例，RolePermissionResolver用于根据角色解析相应的权限集合：
    https://blog.csdn.net/yifanSJ/article/details/77344427（根据这篇文章的分析：1.可以自定义PermissionResolver和RolePermissionResolver，然后注入Authrizor）
Shiro WildCardPermission 扩展实现自定义权限校验：http://www.huzd.info/article/3
自定义RolePermissionResolver：https://blog.csdn.net/weixin_45492007/article/details/101986790

shiro-spring中，除了shiro-core的核心功能外，有什么spring相关的功能？自行分析这个包的代码

把前端的checkPermission多调用一次后端方法干掉，这个可以filter里面实现
首先：如果把权限精确到CRUD，前端如何设计？如何保持一致性？（网页各元素与“资源”的对应关系）
是否把网址和资源解耦？

1.【继续看桥接】slf4j中有典型适配器模式，不看一看？https://hello.blog.csdn.net/article/details/110676556
2.再看mybatis是怎么打日志的，它自己实现了一套，用的接口呢？
	https://zhuanlan.zhihu.com/p/88103007
	https://www.cnblogs.com/yinjw/p/11757433.html
	https://www.yisu.com/zixun/199958.html
	https://blog.csdn.net/qq_29860591/article/details/113875476
	https://www.cnblogs.com/lys-lyy/p/11497591.html
3.slf4j-api 的源码解析与一个简单实现：https://zhuanlan.zhihu.com/p/42685877
1.slf4j-api LoggerFactory类里面先引入了StaticLoggerBinder（org.slf4j.impl.StaticLoggerBinder），这个是在slf4j-api打包的时候用了一个假的，可以在slf4j-api的pom里面看到Removing slf4j-api's dummy StaticLoggerBinder and StaticMarkerBinder：https://blog.csdn.net/zheng0518/article/details/75528398
2.slf4j-log4j里面真正的StaticMarkerBinder通过classLoader动态加载：https://blog.csdn.net/jpf254/article/details/80757041
引入多个包，有相同的package，编译的时候会分门别类一起存放吗？
slf4j的使用(shiro是怎么适配slf4j接口的？)：https://www.tutorialspoint.com/slf4j/index.htm
【下一步尝试直接看代码看懂，Slf4jLoggerImpl】：https://blog.csdn.net/qq_29860591/article/details/113875476
log4j源码学习---加载Logger：https://www.cnblogs.com/zeng-wei/archive/2012/08/28/2660363.html
logger(二)logback简介及其实现原理：https://www.cnblogs.com/pjfmeng/p/11274436.html
spring-jcl 日志源码分析：
	https://blog.csdn.net/small_to_large/article/details/86668346
	https://www.jianshu.com/p/e254c4783a5d

shiro的cookie再复述一遍【搞大数据的这几个月linux、shiro等东西都需要学而时习之】
CachingRealm 抽象类是Shiro中唯一一个直接实现Realm接口的类。同时它还实现了LogoutAware接口：https://www.jianshu.com/p/df8d7c888401
（CustomRealm是不是里面的逻辑是不是应该再次封装到RolePermissionResolver里面去？）
shiro Authorizer权限校验【（前端没必要单独发一次请求鉴权，把checkPermission做到filter里面去，调用isPermitted方法）。这一点懂了之后，随之而来一个新问题：】：
	https://www.jianshu.com/p/35b89d5502b8（里面提到了授权流程以及Permission等类）
	https://www.cnblogs.com/BINGJJFLY/p/8968046.html
	https://www.cnblogs.com/nuccch/p/6776352.html
Shiro 中的 AuthenticationToken：https://www.jianshu.com/p/9ac577427b44

ehcache涉及到offheap memory、bigmemory等概念
springboot缓存框架是如何既支持ehcache2又支持ehcache3的？
keyclock、sa-token
ehcache 2 vs. ehcache 3：
	1.JSR-107标准（这些标准是不是只提供接口？通过看javax.cache:cache-api:1.0.0把JSR的解决问题方式彻底理解）：
		https://dzone.com/articles/introduction-jcache-jsr-107
		https://dzone.com/articles/spring-boot-with-ehcache-3-and-jsr-107
		https://howtodoinjava.com/spring-boot2/ehcache3-config-example/
		https://www.jfokus.se/jfokus12/preso/jf12_JSR107-TheNewJavaCachingStandard.pdf
	2.ehcache3本身的文档：https://www.ehcache.org/
	3.比较ehcache 2和ehcache 3：version 3 was missing some features, including clustering. This is why Spring-Boot embed both. It should in fact be faster. It is also type-safe and JSR107 (JCache) compatible.
https://myshittycode.com/2017/04/11/spring-ehcache-xml-less-spring-configuration-for-ehcache-2-x-vs-ehcache-3-x/

ehcache3里面的listener

深入探讨在集群环境中使用 EhCache 缓存系统：https://developer.ibm.com/zh/articles/j-lo-ehcache/
defaultCache:默认的缓存配置信息，cache:为指定名称的对象进行缓存的特殊配置（最简配置只要有defaultCache就够了）：https://www.cnblogs.com/sdream/p/5966668.html
Springboot Ehcache 2.x vs Ehcache 3.x的不同配置：https://myshittycode.com/2017/04/11/spring-ehcache-xml-less-spring-configuration-for-ehcache-2-x-vs-ehcache-3-x/

为了加MultiRequestBodyResolver，引入了fastjson和commons-io两个包，想办法删掉。一定要在大量使用，并且不能绕开的时候再引入包。

=================================================================================================

看 spring-boot-starter-test

经验证： subject.hasRole("admin");进入了doGetAuthorizationInfo
重载isPermitted【待验证，isPermitted代码要写就写好，不写就删掉】：
https://www.jianshu.com/p/d9175f23c22a
用户授权isPermitted过程：https://blog.51cto.com/luchunli/1830643(https://blog.csdn.net/weixin_33724046/article/details/93057613)
shiro:hasPermission 标签 ：验证当前用户是否拥有指定权限【人家这个里面还对菜单设置了parentId】：https://blog.csdn.net/dxyzhbb/article/details/102500997
isPermitted看懂后，再看permission的写法：system:role:add：
https://blog.csdn.net/tragedyxd/article/details/52958008
试一下这2个：PermissionResolver 用于解析权限字符串得到 Permission 实例；RolePermissionResolver 用于根据角色解析相应的权限集合：
shiro看到：Authorizer、PermissionResolver 及 RolePermissionResolver了。看看我是怎么设置Authrizer的（再搞一次）
PermissionResolver 用于解析权限字符串得到 Permission 实例；RolePermissionResolver 用于根据角色解析相应的权限集合：
https://blog.csdn.net/weixin_38121659/article/details/78715454
自定义权限解析器和角色解析器(PermissionResolver、RolePermissionResolver)等：
    https://blog.csdn.net/lw_power/article/details/52562754
    https://blog.csdn.net/Jack_Yin/article/details/84569443
【我的代码应该是用得上RolePermissionResolver的】该RolePermissionResolver用于将角色字符串转换成该角色所包含的Permission的集合。

和doGetAuthorizationInfo是什么关系？
isPermitted重载的有问题，应该是权限而不是角色相关的【可以先debug一下】
Subject需要分析的方法(DelegatingSubject，Subject接口的实现类DelegatingSubject是怎么加载的？)：
    <V> V execute(Callable<V> var1) throws ExecutionException;
    void execute(Runnable var1);
    <V> Callable<V> associateWith(Callable<V> var1);
        https://blog.csdn.net/xuanfeng623/article/details/40892469/
        https://www.cnblogs.com/telwanggs/p/7608242.html
        浅析Java中通过ThreadLocal实现线程绑定来传递参数：https://blog.csdn.net/Geeker_Yan/article/details/78778050
    Runnable associateWith(Runnable var1);
DelegatingSubject的代码值得读一遍:
    https://blog.csdn.net/qq_21046665/article/details/79735922
【看代码】2.用户退出登录时，Shiro用户必须执行logout()，必须要注销Session信息，避免影响下一次用户认证和授权。
“细说shiro”系列：https://www.cnblogs.com/nuccch/p/6775855.html
Shiro实现授权，在应用中用户可以访问的任何东西都称为资源【我是把每一个后端API地址作为了一项资源】：https://blog.csdn.net/shitianhang123/article/details/84942117
加一个user_permission表即可实现用户级授权

基础组件完善的今天，如何通过业务组件提效？https://developer.51cto.com/art/202102/647354.htm

EhCacheManager的整合原理再看一下

【下一个可以搞的】
    CustomRealm的缓存测试(CacheManagerAware怎么把CacheManager注入进去再看一遍)
    CacheManagerAware（Shiro内部相应的组件（DefaultSecurityManager）会自动检测相应的对象（如Realm）是否实现了CacheManagerAware并自动注入相应的CacheManager）：
        https://www.vxzsk.com/1172.html
        https://shiro.apache.org/static/1.7.1/apidocs/org/apache/shiro/cache/CacheManagerAware.html
        http://shiro.apache.org/static/1.2.4/apidocs/org/apache/shiro/cache/class-use/CacheManagerAware.html

【第一个问题：如何自定义SessionManager，把session放入缓存管理？从DefaultWebSecurityManager作为突破口（先看怎么继承实现，然后看SessionManager文章。从这个过程中提升能力）】

jwt、Subject、Session、SessionManager、Realm、缓存
Subject有获取Session的接口
shiro里面的Session是否需要与Tomcat的Session互转？
shiro源码分析（二）Subject和Session：https://blog.csdn.net/hxpjava1/article/details/77917106
shiro源码分析（二）Subject和Session：https://yq.aliyun.com/articles/38553
Shiro源码分析之两种Session的方式：https://blog.csdn.net/xh199110/article/details/47029533
Subject.login()登录成功后用户的认证信息实际上是保存在HttpSession中的。如果此时Web应用程序部署了多实例，必须要进行Session同步【重要的应该不是有没有用jwt把，而是各种情况都要能Session同步】
Session共享、Spring Session与jwt【Session是下一个难点】DefaultWebSecurityManager值得好好研究
细说shiro之六：session管理【对着把时序图完全理解，能讲解时序图。尝试用时序图分析代码，并理解时序图的力量】：https://www.cnblogs.com/nuccch/p/7911423.html
细说shiro之六：session管理：http://www.mamicode.com/info-detail-2105821.html
session的缓存和sessionDAO：
https://blog.csdn.net/river472242652/article/details/79182008
https://blog.csdn.net/dgh112233/article/details/100019711
可以开始对缓存接口打断点了，从ShiroConfig里面的东西开始摸索
现在我加的EnterpriseCacheSessionDAO还是没有找到一个好的验证方式。怎么验证默认用的是什么sessionDao（MemorySessionDAO？），怎么注入的？
CachingSessionDAO、EnterpriseCacheSessionDAO
目标：要能看到ehcache里面的session

【重要，怎么分析这个问题】看一下我的CacheManager是不是配多了，测一下（把测试方式总结写到test里面）Shiro-Subject 分析【值得精读的代码】：https://blog.csdn.net/u012881904/article/details/53726407/
更改用户名怎么样更新subject中的principal（与更改密码不是同一个问题）：https://blog.csdn.net/qq_33029793/article/details/93477572
使用shiro拦截器链实现权限管理：https://blog.csdn.net/Ybt_c_index/article/details/78707531
shiro 自定义拦截器配置多个权限实现：https://blog.csdn.net/why154285/article/details/82223689
controller方法参数中的userId可以从subject里面获取。主要是MenuController和UserController。但是这样做之后切换权限系统改动大不大，得看看spring security才知道。而且我目前主要用到权限系统的认证、授权、会话保持，因此这样做到必要性也不是特别大
SubjectDAO那些代码还是要看
如果自己返回set-Cookie字段，需要理解cookie结构
如何防止cookie伪造？
1.shiro的DefaultWebSessionManager设置了httponly为true，导致客户端不能使用document.cookie获取值：https://www.cnblogs.com/onlymate/p/9151010.html
调试Session session = subject.getSession();是怎么获取session的。对比session.getId();和返回的session
session.getTimeout();session.setTimeout(毫秒); // 只要调用这些方法，动态调试观察就方便了
当 Subject.logout()时会自动调用 stop 方法来销毁会话
Subject.login()的时序图：https://www.cnblogs.com/nuccch/p/7911423.html
DefaultSessionManager里面默认用的是MemorySessionDAO
MemorySessionDAO用到concurrentMap，看看这个数据结构
SessionListener用法？
SessionDAO【是怎么存储管理session的】与Session共享：
https://blog.csdn.net/changudeng1992/article/details/81914628
（为什么EnterpriseCacheSessionDAO里面的4个方法要声明为protected？看使用方式）
https://blog.csdn.net/acmman/article/details/78955730
https://www.jianshu.com/p/f7d5a9ecfd3a
https://www.jianshu.com/p/f85e50f41100
https://baijiahao.baidu.com/s?id=1618275433856874538&wfr=spider&for=pc
https://www.cnblogs.com/youzhibing/archive/2018/10/30/9749427.html
记一下Shiro重构之RedisSessionDAO（继承EnterpriseCacheSessionDAO）：https://blog.csdn.net/njpkhuan/article/details/100563389
shiro-redis实现session存储到redis：https://www.cnblogs.com/qlqwjy/p/10392268.html
Subject的方法好好看一下。包括login方法【直接调试跟踪代码】
Token的接口及实现类族、Subject的接口及实现类族
3.Subject.login方法的全流程需要好好看几遍，里面对RememberMe、Cache、Session等都有涉及
如：当前类路径下有 Mybatis 这个 JAR 包，MybatisAutoConfiguration 注解就能根据相关参数来配置 Mybatis 的各个 Spring Bean
流程的理解：：当我们调用subject.login(token)的时候，首先这次身份认证会委托给Security Manager，而Security Manager又会委托给Authenticator，
接着Authenticator会把传过来的token再交给我们自己注入的Realm进行数据匹配从而完成整个认证。如果不太了解这个流程建议再仔细读一下官方提供的
Authentication说明文档：http://shiro.apache.org/authentication.html
AbstractSessionDAO implements SessionDAO：从这段代码来看，抽象类可以不完全实现接口中的方法
【ValidatingSession】是个啥？https://blog.csdn.net/javarrr/article/details/83188163
【如何切换的？】（在非web、非EJB的情况下，Shiro自动使用自带session；如果是web或者EJB应用，则Shiro自动使用HttpSession，不需要人为改变。）

KickoutSessionControlFilter extends AccessControlFilter
【看到Advice，很自然想到切面环绕编程，一般有pre、post、after几个方法】
把AdviceFilter和Spring中的通知（Advice）和顾问（Advisor）的概念对比学习：
https://www.cnblogs.com/zhangzongle/p/5944906.html
https://www.cnblogs.com/cslgzl/p/10533335.html
如何继承AdviceFilter并控制切面行为？
Spring中的5种通知（advice）
Spring @ControllerAdvice与@RestControllerAdvice注解：
https://blog.csdn.net/fang_qiming/article/details/79907979
https://baijiahao.baidu.com/s?id=1613899474131869768&wfr=spider&for=pc

springboot的CacheManager接口实现的自定义bean:https://dzone.com/articles/quickstart-how-to-use-spring-cache-on-redis
【我最终关心的问题是shiro的CacheManager接口底层使用redis的缓存实现，甚至springboot的CacheManager接口都可以绕开】

ehcache2：在代码中用到的cache名字必须都在ehcache.xml里面配置name相同的cache节点，否则会报空指针。在定位空指针时发现，
EhCacheCacheManager和AbstractCacheManager的继承关系也很有意思，例如getMissingCache被调用的方式
Spring boot ehcache 2 example：https://howtodoinjava.com/spring-boot/ehcache2-config-example/
Ehcache Configuration Guide：https://www.ehcache.org/generated/2.9.0/pdf/Ehcache_Configuration_Guide.pdf
Spring Boot Ehcache Example(ehcache 3)：https://www.baeldung.com/spring-boot-ehcache
EhCache集群方案（RMI等）：
    https://www.cnblogs.com/duwanjiang/p/6230113.html
    https://blog.csdn.net/wangshijie1234567/article/details/47724853
【先用ehcache、ehcache3测，配置简单一些，并且也是必须的】
DefaultWebSessionManager的配置再看一下【主要是结合shiro缓存的配置了解一下shiro缓存需要配几次】
https://blog.csdn.net/liuchuanhong1/article/details/76638911?utm_source=blogxgwz0

2.几个方面逐个确认缓存配置：认证、授权、session(严格来说不算缓存)、CredentialsMatcher(严格来说也不算缓存)
【观察EhCacheManager是怎么实现shiro的CacheManager接口的，对比我写的】spring-ehcache可以简化ehcache缓存配置，但是：
    1.如何升版本？
    2.会破坏整体缓存配置结构，不利于切换
    3.自己完全看懂后确定是否把这个包删掉
    4.彻底搞定shiro-spring的功能
// todo
    2.再次确认ShiroCacheManagerImpl
    【这几个问题搞定后测试一遍就搞定了】
// todo 0.使用如下方式解决cache问题：https://blog.csdn.net/lianjie_c/article/details/100584843
// todo 1.看EhCachemanager 源码验证上述结论，要分析怎么读取配置怎么autowired的

1.看一下每次请求是怎么验证session的；2.看spring session；

// todo 0.使用如下方式解决问题：https://blog.csdn.net/lianjie_c/article/details/100584843
// todo 1.看EhCachemanager 源码验证上述结论，要分析怎么读取配置怎么autowired的
// todo 2.沿1的思考考虑如何写redis对应的RedisCacheManager(shiro-redis)：https://blog.csdn.net/liuchuanhong1/article/details/76638911?utm_source=blogxgwz0
// todo 3.看spring与ehcache、redis的整合

3.ShiroConfig可以仿造现有的redis的写法，升到EhCache 3.0【先把ehcache看懂】
对比redis和ehcache的配置文件
ehcache：如何观察CacheManager中的值？【必须把这个搞懂，然后再切换redis。ehcache3可以先不管】
到了搞清楚spring的cache体系的时候了，看看与ehcache、redis的整合(看那个starter)，然后学习ehcache教程
SpringBoot | 第三十六章：集成多CacheManager：https://www.cnblogs.com/okong/p/springboot-thirty-six.html
现在我有的地方用的redis，有的地方用的ehcache
ehcache2支持java的cache规范吗？（不要稀里糊涂使用）
ehcache2没有在xml里面配置的cache会报空指针
自己实现一个ShiroEhcacheSessionDAO（对比redis那个）
用redis管理shiro session【配通了第一种方法，把第二种方法也看一下】：https://www.jianshu.com/p/4643715d1563
我Matcher里面的EhcacheU相关的几个方法怎么写成可以快速切换缓存的？
CacheManager之间的转换

1.干todo，继续发现问题。认证、授权等环节如果还有缺少cache的地方，再单独手动配置应该也不麻烦
2.现在我的自定义shiro类都搞成@Component了（为了方便引入CacheManager），但是有些配置是在类的方法里面，有些在ShiroConfig里面，怎么统一起来，是否需要统一起来
3.把jwt、单点登录等搞完，就彻底搞定了。
5.把代码里面数据库相关的依赖整一下

CacheManager的8种实现(有点过时)：https://www.cnblogs.com/okong/p/springboot-thirty-six.html
RedisCacheManager：https://www.jianshu.com/p/ad168cc3603e

我看别人引了shiro-spring-boot-web-starter就解决了shiro的依赖，看看里面有些什么东西

针对shiro的每个方面设计测试套

======================================================================================================================

Jedis是Redis官方推荐的面向Java的操作Redis的客户端，而RedisTemplate是SpringDataRedis中对JedisApi的高度封装。
Spring-data-redis提供了在spring应用中通过简单的配置访问redis服务，对reids底层开发包(Jedis,  JRedis, and RJC)进行了高度封装
SpringDataRedis相对于Jedis来说可以方便地更换Redis的Java客户端，比Jedis多了自动管理连接池的特性，方便与其他Spring框架进行搭配使用如：SpringCache。
Spring提供了spring-data-redis对Jedis、lettuce进行封装，提供了一些操作Redis数据库的接口。同时提供了spring-boot-starter-data-redis包，在SpringBoot项目中使用会更加方便。spring-boot-starter-data-redis的2.0底层是基于lettuce的：https://blog.csdn.net/ThirdFloor/article/details/80970311
Spring-boot-starter-data-Redis的pom.xml。可以清晰的看到，它里面包含了Spring-data-redis，所以两者的关系是包含与被包含的关系：https://blog.csdn.net/qq_38584262/article/details/98114390
spring-data-redis的基本使用：https://blog.csdn.net/weixin_42333583/article/details/82624169
springboot整合jedis(utils也搞成@Component没什么大不了)：https://www.cnblogs.com/L-Wirepuller/p/11150742.html
redisson是“基于Redis的一个分布式锁”，用redisson-spring-boot-starter配置：https://blog.csdn.net/vistaed/article/details/107026758

从这个角度思考【结合我的代码】：use @Bean for adding third-party classes to the context. And @Component if it is just inside your single application.
只需要观察到，我引入的@Bean最终是在哪里通过什么方式被autowired的【-spring相关的包里面】。是不是在bean方法的第一行打断点就可以了？
@Bean修饰的方法参数的注入方式【对象和普通类型】：https://blog.csdn.net/wenwenliuyunabcd/article/details/100291597
@Component和@Bean的区别：
https://codeboje.de/difference-spring-bean-component/
https://springbootdev.com/2017/08/02/spring-framework-component-vs-bean-annotations/

把注解和配置TransactionManager再看一遍看懂：
    因为没掌握注解，所以对springboot的掌握程度很低
    How spring boot annotations work? https://springhow.com/how-spring-boot-annotations-work/
    https://stackoverflow.com/questions/57386896/how-field-injection-in-spring-boot-works-internally
    https://stackoverflow.com/questions/46224199/how-does-conditional-annotation-works-in-spring-boot
    Custom Annotation in Spring Boot：https://www.mindbowser.com/custom-annotation-in-spring-boot/
    How Spring Web MVC Really Works：https://stackify.com/spring-mvc/
    SpringFramework5.0 @Indexed注解 简单解析(和@Controller同级的注解)：https://www.cnblogs.com/aflyun/p/11992101.html
    【搜Annotation*Processor】
    @Conditional、@ConditionalOnBean、@ConditionalOnMissingBean、@ConditionalOnWebApplication、@ConditionalOnClass
    @Qualifier和@Primary，我的理解一个主动的一个被动的：
    https://www.cnblogs.com/whhjava/p/10599799.html
    https://www.cnblogs.com/h-c-g/p/11043716.html
    mybatis-plus多数据源注解@DS("slave")：
    	https://mp.baomidou.com/guide/dynamic-datasource.html#%E6%96%87%E6%A1%A3-documentation
    	https://blog.csdn.net/dawangxiaowang/article/details/105097191
    	https://blog.csdn.net/wardenjohn/article/details/100134457
    @KafkaListener注解的实现
    @OnMessage注解的实现
    @RabbitListener起作用的原理：https://blog.csdn.net/zidongxiangxi/article/details/100623548
    @Transactional实现原理（DataSourceTransactionManager）【看别人的分析过程】：https://www.cnblogs.com/wlwl/p/10092494.html
    spring注解之@Import注解的三种使用方式：
    https://www.cnblogs.com/yichunguo/p/12122598.html
    https://blog.csdn.net/mamamalululu00000000/article/details/86711079
    分析一个场景，搞清楚注解之间的关系，加深理解：@RabbitListener为什么要放在IoC容器的注解里面（@Component等）？
    分析每一个注解都应该关注的2个问题：
    	1.谁来扫描；2.与spring容器的关系

再次思考ConcurrentHashMap：public static Map<String, Session> clients = new ConcurrentHashMap<>();【在webSocket、kafka消息传递等领域都可以用到】
1.通过代码比较HashMap与ConcurrentHashMap的代表
2.ConcurrentHashMap使用场景？
https://www.zhihu.com/question/28516433/answer/490921378

【实验一下】也可以反过来弄：
    (1)把@Service在@Configuration里面再@Bean一次；
    (2)@Service注解压根就不加，直接在@Configuration里面配，然后再@Autowired【理论上来说，@Component、@Service可以都不加，都在@Configuration里面配，
    只加@Controller，看看@Controller详解】https://dzone.com/articles/spring-framework-restcontroller-vs-controller

【把config目录下的内容梳理一遍，好多用不上的】
注意：spring-boot-autoconfigure.jar
感觉Shiro没用上AutoConfiguration（是不是配置比较麻烦所以用手动？）
Redis AutoConfiguration：https://blog.csdn.net/andy_zhang2007/article/details/96843886
spring-boot-starter-data-redis：https://blog.csdn.net/yeyinglingfeng/article/details/87790700
当使用spring-boot-configuration-processor库时会默认打开RabbitAutoConfiguration,它会自动创建一个 CachingConnectionFactory对象，
了解了AutoConfiguration，可以看SqlSessionTemplate、JdbcTemplate、RedisTemplate等xxxTemplate了，从启动流程分析。

分析一个starter：jdbc-starter
在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，框架会自动默认分别注入DataSourceTransactionManager
或JpaTransactionManager【看一下是怎么帮我们做的】【这个文档还教了怎么看注入的是某个接口的哪个实现】：https://www.cnblogs.com/weiwuxian-95/p/10429538.html
分析DataSourceTransactionManager的代码，有了它@Transactional注解才能发挥作用
多数据源：
https://laptrinhx.com/springboot-implements-multiple-data-source-configuration-927917669/（同时启用双数据源：主数据源用mybatis、次数据源用jdbcTemplate）
https://springframework.guru/how-to-configure-multiple-data-sources-in-a-spring-boot-application/
【使用Spring Boot时，默认情况下，配置DataSource非常容易。Spring Boot会自动为我们配置好一个DataSource】了解默认的注入代码
【mybatis如何同时启用多数据源？】【自己先思考，然后看如下文档】：
https://programmer.group/spring-boot-mybatis-multiple-data-sources.html
https://programmer.group/spring-boot-mybatis-create-multi-data-source-connection.html
https://www.fatalerrors.org/a/springboot-db-series-mybatis-multi-data-source-configuration-and-use.html
https://laptrinhx.com/springboot-integrates-mybatis-to-configure-multiple-data-sources-to-operate-mysql-database-3110290717/
What is spring-boot-starter-parent in Spring-Boot pom.xml file? http://www.java2novice.com/spring-boot/spring-boot-starter-parent/
JdbcTemplate 和 mybatis 的对比（可以再看一次了）：
https://www.cnblogs.com/scmath/p/11297006.html
https://blog.csdn.net/weixin_30662539/article/details/101573061
阅读mybatis-plus-boot-starter代码
深入SpringBoot注解原理及使用【一个现实的问题，我的mybatis-plus、Kafka注解是怎么发挥作用的】：https://www.cnblogs.com/jing99/p/11504113.html
Mybatis中的一级缓存、二级缓存【读代码】：
    https://tech.meituan.com/2018/01/19/mybatis-cache.html
    https://blog.csdn.net/luanlouis/article/details/41280959
    https://blog.csdn.net/weixin_37139197/article/details/82908377
    https://segmentfault.com/a/1190000024469451?utm_source=sf-related
具体选择哪个日志实现工具由MyBatis的内置日志工厂确定。它会使用最先找到的，如果一个都未找到，日志功能就会被禁用：https://www.cnblogs.com/aoshicangqiong/p/7651569.html
看看mybatis的SqlSession的生命周期，这个涉及到一级缓存
mysql-connector-java的版本是怎么指定8.0.22的？
Mybatis源码解析——Executor：
    https://www.pianshen.com/article/79411165391/
    https://artisan.blog.csdn.net/article/details/106560762
    https://www.jianshu.com/p/53cc886067b1
我写的Mapper也是可以兼容用上的，确认一下
mybatis看mapper里面具体缓存写法/用法
MyBatis 通用 Mapper 实现原理：
	https://blog.csdn.net/isea533/article/details/78493852
	https://www.jb51.net/article/149170.htm
mysql-connector-java 为什么scope是runtime：
	https://blog.csdn.net/jupiter_888/article/details/103853023
	https://www.jianshu.com/p/50015526460a
Mybatis-Redis二级缓存分布式实现：https://blog.csdn.net/luo15242208310/article/details/88634095
Mybatis二级缓存的槽点和亮点：https://blog.csdn.net/weixin_43832689/article/details/106968135
看mapper里面缓存写法【搞完后再把pom还原，mybatis-spring-boot-starter注掉。官方也有mysql starter把，这个starter与spingboot官方的mysql starter对比呢？】
mybatis-redis：redis做二级缓存
mybatis-spring-boot-starter：
    http://www.mybatis.cn/archives/861.html
mybatis二级缓存的实现（看Configuration类）：https://blog.csdn.net/qq_36118179/article/details/114004183
还是得从mybatis、mybatis-plus、slf4j原理彻底弄清楚，不能急躁和跳跃

Spring 为什么要使用三级缓存来解决循环依赖：https://blog.csdn.net/qq_35457078/article/details/112409302
springboot在Utils工具类中读取配置文件：https://my.oschina.net/lijinzhao/blog/3030144
SpringBoot中获取spring.profiles.active的值【学习别人的方法】：
https://www.cnblogs.com/linzhanfly/p/9056722.html
https://blog.csdn.net/zhangzehai2234/article/details/99187823

当前组织POJO的方式【用在自己的项目和公司的项目，实践几个完整的项目】：
https://www.zhihu.com/question/39651928/answer/369889819
兼顾折衷方案：https://zhuanlan.zhihu.com/p/150463059
1.Query：由前向后传递
2.Vo：有后向前传递。不要偷懒在某些地方用PO代替
3.PO：数据库持久化对象
4.BO：业务逻辑对象。是否封装方法？用好BO是一个难点
问题：AO怎么用？
要保存的信息，放在POJO的哪个分类里面？https://blog.csdn.net/haiyoung/article/details/97397073
感觉最开始分为query、VO、DO 3个类别就够用了，因为业务逻辑不复杂，所以do封装数据够用了
DTO（ Data Transfer Object）与BO（ Business Object）的区别？AO（ Application Object）的方向？【如果不好分，其他统统放到DTO或者BO里面】
【后续，直接针对每个表创建DO和操作的方法（这样才好垂直分割业务把？），把我的Mapper层用上，能否抽到MybatisPlus的高度？】是不是压根就不应该传入table名称（抽象程度太低了）？而应该把每个表的信息抽到单个的文件里面去？（思考一下有没有需要动态创建表的场景，有场景才需要保留这种代码）

1.webSocket；【既利用http双工又tcp长连接，值得从这个角度对比学习】：
https://www.cnblogs.com/h--d/p/11492437.html
https://www.runoob.com/html/html5-websocket.html
webSocket在线测试：http://coolaf.com/tool/chattest
SpringBoot集成WebSocket【session失效连接自动断开？】：
https://www.cnblogs.com/xuwenjin/p/12664650.html
https://docs.spring.io/spring-session/docs/current/reference/html5/guides/boot-websocket.html
【webSocket抓包学习】
webSocket的session和http session的异同？

【近期推进事项】
0.session与jwt；
1.shiro缓存彻底弄好；
2.mybatis及shiro集成；
自定义一下DAOException和ServiceException
DAOException 和ServiceException：https://blog.csdn.net/ymyss4/article/details/6996991

3.前端的几个问题
把菜单数据从localStorage、sessionStorage里面拿走，至少可以先放到内存里面，增强安全性

FEBS-Shiro是一款简单高效的后台权限管理系统，使用Spring Boot，Shiro和Layui构建【更有信心了】：https://github.com/febsteam/FEBS-Shiro

SpringBoot设置debug=true

=====================================================================================

下一抓手：通过彻底搞清楚Filter运作机制，来搞清楚和session的关系
【欲速则不达】上述搞完后五一到十一搞搞解释器
然后搞数据库那个项目，搞基础知识

【jwt配置应该关注的是以下几点】【3月应该可以把jwt搞好，把现有代码的测试完成】
    1.返回jwt token（已做）；
    2.对带过来的token进行验证（替代原有cookie的验证，如果带了token的话，或者两者共存）
    [1.每请求一次登录一次(这种方式确实不需要session。与问题6过期问题协同思考)，见：https://www.jianshu.com/p/3c51832f1051 https://www.jianshu.com/p/3b48ea215990；2.直接从jwt token中获取有用信息：怎么做？安全性如何？]；
    【保证了上面2点，后端session等保存方式一致，才能保证Subject等对象行为正确（我的推测，待验证）】
    3.再看SessionStorageEvaluator的作用；看session与subject的关系(Subject是如何保存到Session中的）
    4.原有的cookie是怎么验证的？
    5.两者兼容，多个realm；
    6.jwt过期等的策略怎么做？

可以看英文的jwt文章了：
https://www.novatec-gmbh.de/en/blog/json-web-token-apache-shiro/(这个里面只简单比对了用户名，不会有伪造问题吗？)（可以用这个策略，再看一下jwt过期策略就OK了，勾选和不勾选保存密码选项）
http://www.andrew-programming.com/2019/01/23/springboot-integrate-with-jwt-and-apache-shiro/
https://github.com/Smith-Cruise/Spring-Boot-Shiro
Shiro 中的 SessionStorageEvaluator【验证：即使不存Subject到Session中，刚刚登录也是可以用Subject的】：https://www.jianshu.com/p/3b48ea215990
从Authenticator、SessionStorageEvaluator的角度来做shiro集成JWT（禁session）：https://www.jianshu.com/p/0b1131be7ace
从代码层面分析这一句对流程的影响：sessionStorageEvaluator.setSessionStorageEnabled(false);
对sessionStorageEvaluator.setSessionStorageEnabled(false);的理解：我的理解是如果不设为false，会自动走鉴权那一套，当然还是以代码为准【这是
createAuthFilter（JwtAuthFilter）、createRolesFilter
根据开涛的第20章“无状态Web应用集成”应该是可以自己写出来的：file:///D:/gao/%E7%94%B5%E5%AD%90%E4%B9%A6/%E8%B7%9F%E6%88%91%E5%AD%A6shiro.pdf
SpringBoot中使用Shiro和JWT做认证和鉴权：https://www.jianshu.com/p/0b1131be7ace
Shiro步步为营--如何优雅地与JWT集成【这种方法配置会不会导致Subject用不了？】：https://blog.csdn.net/pengjunlee/article/details/95600843

网络应用中session和token本质是一样的吗，有什么区别？【再思考一遍】：https://www.zhihu.com/question/51759560/answer/1774829688

【对比如下知识点】Shiro 中的 SessionManager【是不是用jwt时重写getSessionId方法把token转成sessionId就和不用jwt的版本一致/兼容了？】：
             https://www.jianshu.com/p/9cb19bc2057a
先搞清楚ShiroFilterFactoryBean和Filter的关联，为理解jwt配置做准备
【我没有用到FilterRegistrationBean，我用了ShiroFilterFactoryBean，再了解一下这两者】
看jwt的时候再看filter及作用。BasicHttpAuthenticationFilter干了些啥？(搞清楚有token、没有token的两条路径)
Filter与Session有什么联系？应该是Filter使用Session。看看BasicHttpAuthenticationFilter怎么用Session，JwtFilter用不用/怎么用Session
session应用--采用filter和session实现简单用户权限控制：http://www.cuiyongzhi.com/post/33.html
shiro的会话管理器SessionManager：http://www.voidcn.com/article/p-difpzhuc-bpq.html

理解这9大内置过滤器，才算是精通Shiro：https://zhuanlan.zhihu.com/p/140454269
再看一下UserFilter，对比使用JwtFilter
Filter代码中2个很NB的细节：
    1.DefaultFilter枚举中用到反射；
    2.OncePerRequestFilter中doFilterInternal抽象方法的使用第一次见识
【怎么自定义filter并加入FilterChain？】【在springboot下，拦截是如何发挥作用的？】shiro内置过滤器研究：
https://www.cnblogs.com/koal/p/5152671.html
https://www.cnblogs.com/modyuan/p/12403605.html
SpringBoot 整合Shiro实现动态权限加载更新+Session共享+单Authenticator点登录【看一下单点登录部分】：https://zhuanlan.zhihu.com/p/171516210
非常重要必须要看的一环，从发送请求如何根据session鉴权。既是理解代码，又是彻底搞懂JWT的基础】
LogoutFilter是怎么起作用的：https://www.cnblogs.com/vieta/p/11140164.html
shiro 自定义过滤器，拦截过期session的请求，并且以ajax形式返回：https://www.cnblogs.com/leechenxiang/p/7070229.html
Shiro中的Session管理，如何把Session放入redis？
Shiro SessionManager会话管理器设计概念：https://www.cnblogs.com/BINGJJFLY/p/9139348.html
使用JWT后为什么要关闭Session？
JWT再看一轮（这次要结合SSO）。使用JWT后，要保证仍然使用尽可能多的shiro的认证、授权、session管理功能，我的初步想法是至少要集成session相关的，先思考一下
把session的解析过程搞清楚。自己实现一个权限系统的话，是不是就是session难一点？【其实自己写session也是通过filter或者servlet来获取】其他部分呢？再熟悉之后再回过头来看。
ShiroFilter为什么要用FactoryBean的方式加载？
看AbstractShiroFilter，关键是搞懂filter的作用机制。以这里为入口分析源码看看shiro是如何发挥总用的
private static final class SpringShiroFilter extends AbstractShiroFilter
从SpringShiroFilter到AbstractShiroFilter到Filter，看整个继承关系。别人分析的是返回了【要能调试看清楚这个过程】：
https://blog.csdn.net/wangjun5159/article/details/89873842
https://blog.csdn.net/u013995395/article/details/90715272
StatelessAuthcFilter extends AccessControlFilter：从哪一级、哪里开始继承是我需要思考的。2.怎么从源码知道要改这里呢？
Filter过滤器：
https://www.jianshu.com/p/054c925cd45d
https://cloud.tencent.com/developer/article/1376558
http://www.360doc.com/content/17/1227/15/16915_716741886.shtml
https://www.cnblogs.com/ljdblog/p/6237683.html
看代码确认：如果是 Web 应用，每次进入 ShiroFilter 都会自动调用 session.touch()来更新最后访问时间。
BasicHttpAuthenticationFilter 与 FormAuthenticationFilter 等的区别
DefaultFilter 枚举类原理值得仔细分析
Spring Boot Shiro权限管理--扩展FormAuthenticationFilter实现动态改变LoginUrl：https://blog.csdn.net/u010361786/article/details/80138201
cookie和session的关系：
https://www.cnblogs.com/joean/p/4609253.html【这个文章说：“以后此客户端再发送请求给服务器的时候，就会在请求request中携带cookie”。
如果不携带呢？cookie机制的根基就被动摇了？携带后，shiro的filter是怎么解析和检查cookie的？】
https://www.jianshu.com/p/2bb0f368f631
https://www.cnblogs.com/jing99/p/7826550.html
Filter从这个入口看：DefaultFilter
Shiro 内置了很多默认的拦截器，比如身份验证、授权等相关的。默认拦截器可以参考 org.apache.shiro.web.filter.mgt.DefaultFilter 中的枚举拦截器
看看默认拦截器列表，拦截器的包名：org.apache.shiro.web.filter
表单拦截器FormAuthenticationFilter：
https://blog.csdn.net/u014203449/article/details/80689268
https://blog.csdn.net/u014695188/article/details/52357379
DefaultFilter：package org.apache.shiro.web.filter.mgt.DefaultFilter
Shiro几大拦截器：https://blog.csdn.net/fenglixiong123/article/details/77119857
https://www.cnblogs.com/nick-huang/p/9509004.html
shirFilter，注意这个filter与SpringMVC Filter的关联和区别
Shiro中自定义Realm的作用(FormAuthenticationFilter和PermissionAuthorizationFilter)以及源码解析：
https://www.geek-share.com/detail/2698157954.html
分析，为什么：在程序中任何地方都可以通过SecurityUtils.getSubject()获取到当前的subject
session有跨域攻击的问题

shiro 同一账号多人同时登陆强制下线【默认就是这样的把？用2个浏览器测一下】：
https://blog.csdn.net/lht931942788/article/details/79179410
https://blog.csdn.net/qq_39069111/article/details/81156527
https://www.cnblogs.com/wang-qiang/p/9470527.html
shiro的重复登录问题：
https://blog.csdn.net/sunsgne_ac/article/details/79289770
https://blog.csdn.net/wdsafmy468619/article/details/47041467
https://www.cnblogs.com/zhanying999666/p/8392592.html

【应该把重点放在redis配置以及看懂shiro加载shiroConfig的过程】
shiro-redis插件包还有必要看吗？

可以看shiro的启动加载了：shiro-spring
1.要搞清除包里面的bean是怎么被自动扫描的；
2.找到入口类去分析
3.只有搞清楚这个，才能更加理解ShiroConfig里面的类是怎么替换的，RedisConfig也就触类旁通了

把run as看了：
runas一个不优雅的实现方式：将被代理者的用户名、密码放在数据库中，一旦发现有runas关系，可以读取到自动登录一次。
思考、看runAs原理
这行代码如何定制？@RequiresPermissions(value={"log:manage:*"})
八个类逐一看源码：https://www.cnblogs.com/nuccch/p/6776352.html
shiro-aspectj这个包是干啥的？
如果连默认的MemoryConstrainedCacheManager都没传，代码的行为是什么样的？判空确认是否在缓存中存取数据？
不论是集中式缓存还是本地缓存方案，我们都需要考虑这样一个问题：如果使用了shiro框架的服务端进行了多实例部署，首先需要对session进行同步，
因为shiro的认证信息是存放在session中的；其次，当前端操作在某个实例上修改了权限时，需要通知后端服务的多个实例重新获取最新的权限数据。
那么有哪些方案可以实现通知到后端服务的多个实例呢？https://www.cnblogs.com/nuccch/p/8044226.html

权限之数据权限【字段的配置具体怎么做？】：
https://www.jianshu.com/p/1b27d2c8a080
https://www.cnblogs.com/jpfss/p/11045258.html
https://www.cnblogs.com/jpfss/p/11677430.html
https://www.jianshu.com/p/31af99a42658

学习RabbitTemplate的思路应该是和学习RedisTemplate一样的，除了学习它还要学习Springboot自带的消息队列框架

规范：在SecurityManager中定义缓存管理器，方便SessionDAO等多个地方使用
shiro缓存管理：https://www.cnblogs.com/deityjian/p/10778501.html
realm的缓存还是用cacheManager的方式会更加优雅，再看看
if (realm instanceof CacheManagerAware) {
    ((CacheManagerAware) realm).setCacheManager(cacheManager);//CacheManagerAware接口主要是用来设置缓存管理器的，它里面只有这一个方法
}
我的自定义realm和Matcher能否实现CacheManagerAware来自动获得CacheManager？
Shiro - 缓存管理与CacheManagerAware接口【为啥我没看到缓存的信息？】：https://blog.csdn.net/J080624/article/details/83788196
【先看aware接口本身里面有什么方法】spring4.1.8扩展实战之二：Aware接口揭秘：https://blog.csdn.net/boling_cavalry/article/details/81611426

SessionsSecurityManager（是啥？）里面的代码：
protected void applyEventBusToSessionManager() {
    EventBus eventBus = this.getEventBus();
    if (eventBus != null && this.sessionManager instanceof EventBusAware) {
        ((EventBusAware)this.sessionManager).setEventBus(eventBus);
    }
}

CachingSecurityManager、CachingReam，注意这些类的协同关系
shiro + memcached实现session共享：https://blog.csdn.net/weixin_42396189/article/details/89713065

看懂从DefaultWebSecurityManager到CachingSecurityManager的继承关系，看懂这种抽象的合理性和每一层加了什么功能（或许应该从上往下看）
shiro动态授权：https://my.oschina.net/jiansin/blog/3024398
再次思考整合的问题之一：要保证所有需要的class都被初始化出来【不一定所有的框架都满足这一点把，思考shiro和mybatis为何满足，满足这一要求会不会给框架的开发带来很大限制和困难】
多种注入方式，正是保证了代码灵活性把？例如ShiroConfig某些对象依赖的对象既可以注入也可以在@Bean方法里面set进去
既然securityManager指定了CustomRealm，realm里面有doGetAuthorizationInfo，那么SecurityManager里面再指定authrizer会重复吗，他们之间的关系是什么？
SpringBoot 整合Shiro实现动态权限加载更新+Session共享+单点登录：https://www.cnblogs.com/javazhiyin/p/11398374.html
// getfilterChainDefinitionMap()也可以用bean的方式，见：https://www.jianshu.com/p/0b1131be7ace
securityManager可以setAuthenticator、setAuthorizer，这3者之间realm的关联？

一直在用的 Spring，你知道它的加载原理吗？https://zhuanlan.zhihu.com/p/166354956

===========================================================

jwt与token+redis，哪种方案更好用？【先自己思考】：https://www.zhihu.com/question/274566992/answer/1696761067

Single Sign On (SSO) Example with JSON Web Token (JWT) and Spring Boot：
https://hellokoding.com/hello-single-sign-on-sso-with-json-web-token-jwt-spring-boot/

Apache Shiro 用户指南：
https://segmentfault.com/a/1190000010791103
https://github.com/waylau/apache-shiro-1.2.x-reference

shiro SSO：
https://bbs.huaweicloud.com/blogs/154161
https://www.cnblogs.com/shenyixin/p/11757309.html
https://blog.csdn.net/ccmedu/article/details/83311624
https://www.jianshu.com/p/6e99451408ce
https://www.cnblogs.com/atai/p/11200033.html
https://my.oschina.net/u/1782542/blog/1925940【这个方法并没有完全用上shiro的能力，思考会有哪些问题，然后再思考怎么用shiro】
https://blog.csdn.net/fromatozhappy/article/details/100121260
单点登录的第一个问题：如何多个网站都能发送token？可以使用JWT，并且放入local或者sessionStorage

Shiro + OAuth2（Oltu）：
https://blog.csdn.net/sJzao/article/details/87721836
https://github.com/monkeyk/oauth2-shiro
https://www.cnblogs.com/yuluoxingkong/p/8268094.html
https://www.cnblogs.com/wxy540843763/p/7675946.html
scribejava/scribejava：一个简单的 Java 实现的 OAuth/OAuth2 库：https://github.com/scribejava/scribejava
oltu-oauth2-example：https://github.com/ameizi/oltu-oauth2-example
现在用的比较多的单点登录技术是什么？https://www.zhihu.com/question/342103776/answer/806983636
面试必问的4种单点登录的实现方式，你知道几个？
https://zhuanlan.zhihu.com/p/84441372
https://zhuanlan.zhihu.com/p/94622931
https://zhuanlan.zhihu.com/p/51040315
https://zhuanlan.zhihu.com/p/93128956
https://zhuanlan.zhihu.com/p/122482859
CAS的细节？CAS与OAuth2（Oltu）?
CAS SSO With Spring Security：
https://www.baeldung.com/spring-security-cas-sso#:~:text=%20%20%201%20Overview%0AIn%20this%20tutorial%2C%20we%27ll,It%27ll%20have%20Web%2C%20Security%2C...%204%20Conclusion%20More%20
shiro-cas：https://shiro.apache.org/cas.html
CAS的单点登录和OAuth2的最大区别：https://www.cnblogs.com/flying607/p/7652537.html
【终极】OAuth2的单点登录【思考清楚怎么整合】：https://www.cnblogs.com/cjsblog/p/10548022.html

shiro的流程：
https://blog.csdn.net/mine_song/article/details/61616259
https://blog.csdn.net/YANGYU1079075086/article/details/78969983?utm_source=blogxgwz0

把mybatis-plus升到最高的3.4.3会报错，要么直接解决报错，要么先把spring-boot-starter-parent升到最高版

=========================================================================================

近期：
1.ng-alain；
2.B站门户网站视频、hugo继续；

继续：搜索如何读代码的文章，再读shiro代码。结合UML图，例如：https://www.cnblogs.com/smilond/p/10490906.html

把redis版的配好，现在从其他方向有点突破不了了

为啥我的@Slf4j log标红了？
先搞懂realm缓存是咋回事，然后把realm缓存调通【现在的代码怎么看到缓存的值？】
Shiro 中的 Realm：https://www.jianshu.com/p/df8d7c888401
【下一步】
为啥CustomCachedSessionDAO不像EnterpriseCacheSessionDAO一样直接 extends CachingSessionDAO。是因为CachingSessionDAO里面的内容太过冗余？
EnterpriseCacheSessionDAO是默认注入的吗？（1）调试；（2）看代码；
3.看CachingSessionDAO extends AbstractSessionDAO implements CacheManagerAware：是不是通过aware给没有注解的类引入CacheManager？
4.EnterpriseCacheSessionDAO使用的是MapCache做缓存的？
https://blog.csdn.net/acmman/article/details/78955730
https://www.cnblogs.com/sunshine-2015/p/5686750.html
5.我对MemorySessionDAO和CachingSessionDAO的理解：前者用的是ConcurrentMap，后者用的是cache结构。再看一下实现细节

======================================================================

【做项目和学知识两条线并行】

下周工作事项：
2.以湖北省招标网为例，思考抓取策略。把三十多个省的招标网站都纳入进去；
3.把门户网站技术思考清楚；
4.把我以前的简洁模板下载下来；
5.爬虫做到能抓取文章的程度
6.爬虫的bloomfilter配起来；

各省市县人民政府网站

======================================================================

【周末】
2.把这段时间的股票疑问梳理一下；

RedisTemplate是spring-redis相关的东西。怎么注入的？
CacheManager与cache@注解的关系

再次思考一下我现在用到的shiro功能，如果自己实现难度有多大
spring security和shiro的异同：
https://blog.51cto.com/14150615/2356958
https://www.cnblogs.com/zzpblogs/p/8520818.html
https://www.jianshu.com/p/0891b2279c65
https://www.cnblogs.com/zoli/p/11236799.html

晚上两件事：
2.把crawler4j引入项目，找第一批10个招标网站
3.开始写通知模块，前端继续进入

进一步深入：
1.把ShiriConfig里面每一个配置点都看一下是如何切换的；
2.shiro的分析分两部分：1.shiro本身的源码（再次结合开涛的书）；2.整合spring的原理

【上面一个搞完后，继续从集成的入口往下进一步深入】
Shiro在Spring session管理：https://www.cnblogs.com/jtlgb/p/9577617.html
为啥AuthorizingRealm extends AuthenticatingRealm

1.ehcache3需要单独学习，功能很强大，而且缓存是系统的关键【为什么学ehcache时遇到这么多配置，学redis时就淡化一些？】：
https://blog.csdn.net/nainaiqiuwencun/article/details/92445127
https://springframework.guru/using-ehcache-3-in-spring-boot/
https://dzone.com/articles/spring-boot-with-ehcache-3-and-jsr-107
EhCacheManager与EhCacheCacheManager
在我的缓存配置策略下，可以删掉shiro-ehcache依赖。看完shiro-ehcache后（再确认有没有ehcache 3版本，并且还是要把代码逐个文件阅读一下），注解升级到ehcahce3
1.pom里的shiro-ehcache可以注释掉；2.还得看看ehcache怎么跟spring cache整合的
完全可以参考shiro-ehcache1.7.0很快实现出ehcache3的版本
看shiro-ehcache、shiro-redis
对shiro-ehcache包的理解：
1.EhCacheManager类是shiro-core包里面CacheManager接口的实现：EhCacheManager implements CacheManager, Initializable, Destroyable
对shiro-ehcache包的理解：这个包用ehcache这种具体的缓存实现了shiro里面缓存相关的接口。类似的实现还有shiro-redis。
shiro与spring共用一个CacheManger，使用redis：https://blog.csdn.net/lianjie_c/article/details/100584843
自动装配细节
2.搞清楚shiro-cache和shiro-ehcache的关系；
3.由EhCacheManager的setCacheManager方法参数是net.sf.ehcache.CacheManager类型来看，shiro-ehcache只能配合ehcache2版本；
4.由3可知，shiro-ehcache应该对ehcache进行了provided的依赖，思考这样设计的理由，想想是怎么打包的；看一下它的pom里面<relativePath>../pom.xml</relativePath>是什么意思
只有看源码，才能看出别人是怎么编译的。除了看spring-redis、spring-ehcache、mybatis整合外，可以在mvnrepository里面找spring开头的包
2.把ShiroConfig里面多余的缓存配置干掉
3.把EhcacheUtil搞成component（不用读取配置文件位置，直接autowire）；https://blog.csdn.net/dreamhai/article/details/80642010
还是得花时间从根本上搞懂ehcache和springboot的集成，这是首要的
springboot②最正确的集成shiro并使用ehcache缓存：
https://blog.csdn.net/tanleijin/java/article/details/81118963
https://gitee.com/xieke90/common-admin/blob/SpringBoot2.X_EhCache/src/main/java/com/xieke/admin/config/ShiroConfig.java
1.先把ehcache彻底搞懂，包括session
（1）springboot里面的ehcacheUtil已经调通了，下一步配通shiro的cache、配通session的cache，搞懂两个cacheManager的异同
关于Ehcache缓存中timeToLiveSeconds和timeToIdleSeconds区别：https://blog.csdn.net/fiwrc/article/details/54909868
2.缓存先完成如下3步：
（1）吧用户名的缓存搞好；
（2）把session缓存搞好
（3）整站的缓存
（4）再看一次token的方案

彻底搞懂mybatis、redis等与spring的整合至关重要，要能打断点观察启动过程

根据下面两句话看代码，在代码中断点调试：”Shiro的用户认证是没有提供缓冲机制的，shiro的授权缓存是默认开启的“：https://www.jianshu.com/p/94028ce76efb

【先配好缓存，再看原理】
shiro的启动过程【现在的知识结构来说最关键的一步需要理解的。能否打断点跟踪？】：
https://blog.csdn.net/weixin_41920291/article/details/94916369
https://blog.csdn.net/weixin_38312719/article/details/95936994
https://www.cnblogs.com/step-and-step/p/13330550.html【搞清楚springboot与web.xml的封装对应关系】
https://blog.csdn.net/zknxx/article/details/79572387
1.看现有的shiro配置，回忆一下；
2.看shiro-spring；
4.看shiro-redis，配通
5.RetryLimitHashedCredentialsMatcher里面用缓存和给shiro配缓存不是一码事把？先把shiro自身缓存搞定。HashedCredentialsMatcher自身是不是也有配缓存的选项？
再次回忆mybatis、shiro的初始化
逐个bean看shiro里面的bean的默认值
看看shiro是如何autowire进去声明的bean的

找几个公司的前端控件看看，应该没那么难

什么时候可以把session清除？

shiro-redis的官方文档：https://www.cnblogs.com/qlqwjy/p/10392268.html

autowired members must be defined in valid spring bean
Spring依赖注入（DI）的三种方式【搞清楚注解对应的形式，尤其是接口注入方式】：
https://www.cnblogs.com/ycq-qiang/p/11161941.html
https://www.cnblogs.com/ooo0/p/10962360.html
【下一步搞懂：1.接口注入；2.基于注解的依赖注入（构造器、setter）】
autowired自动装配原理搞懂（底层实现），两种装配方式：https://blog.csdn.net/u010512429/article/details/80455971
Spring为什么@Autowired注入的是接口：https://www.cnblogs.com/zhoading/p/11763426.html
RetryLimitHashedCredentialsMatcher的@Autowired用getBean替换写通
@Bean的name用法：https://blog.csdn.net/qq_35981283/article/details/80002611
@Bean的参数实际上就是@Autowired的
@Autowired自动装配的三种方式：https://blog.csdn.net/inflaRunAs/article/details/92839204

spring项目中获取ApplicationContext对象【注意springboot方式的变化，以及对aware的理解】：
http://blog.cangzhitao.com/post/java/springboot-applicationcontext.htm
https://blog.csdn.net/ex_tang/article/details/82749844
https://blog.csdn.net/weixin_38361347/article/details/89304414
3、写一个工具类 比如BaseHolder 实现ApplicationContextAware接口：https://blog.csdn.net/ex_tang/article/details/82749844
关于TransactionAwareDataSourceProxy：https://summerhome.iteye.com/blog/2383585
Spring：利用ApplicationContextAware装配Bean：
https://www.cnblogs.com/tflowingcloud/p/8443010.html
https://www.jianshu.com/p/22e7fba07ce7
https://blog.csdn.net/mdq11111/article/details/79050280
https://blog.csdn.net/bailinbbc/article/details/76446594
spring源码之Aware：https://www.cnblogs.com/lucas2/p/9432934.html
Spring中的Aware：
https://www.cnblogs.com/Jarris/p/10125980.html
https://blog.csdn.net/bailinbbc/article/details/76446594
https://blog.csdn.net/jinhaijing/article/details/83933573

搞懂这种文化：@Resource(javax.annotation.Resource)这个注解是javax扩展包中注解规范的一种，而spring对这一注解提供了支持

1.搞懂CustomSchedulingConfigurer的源码；
2.把下载和上传彻底写好【基础设施】【比较现有的代码，然后整合一个好用的】
3.把doc、excel的utils弄好
4.图片预览

1.https及http/2的配置（nginx、springcloud gateway的配置。前后端分离的单体服务又是不一样的，要考虑清楚）；
https://zhuanlan.zhihu.com/p/95038188
https://cloud.spring.io/spring-cloud-gateway/multi/multi__tls_ssl.html
2.看MQ或者little java；
过一遍公司代码中的util、前端控件
测一下我的ZipUtil（速度）
1.启用https；2.配置HTTP/2：
https://www.callicoder.com/configuring-spring-boot-application/
https://stackoverflow.com/questions/38612704/enable-http2-with-tomcat-in-spring-boot
Add Login to Your Spring Boot App in 10 Mins：https://dzone.com/articles/add-login-to-your-spring-boot-app-in-10-mins
把字符串省略的directive搞过来：stringAbbreviation（把http里面公司的代码干掉）
把现在封装的大写Post移植到我的代码（this.http.Post()）

第一天：
 如何利用反射实现Autowired注解
 一招教你如何手撕SpringIOC源码
 Spring程序是如何启动的？
 Spring是如何加载配置文件到应用程序的？
 掌握核心接口BeanDefinitionReader
 掌握核心接口BeanFactory
 彻底搞懂Spring的refresh方法
 BeanPostProcessor接口的作用及实现
 BeanFactoryPostProcessor接口的作用及实现
第二天：
 Spring Bean有没有必要实现Aware接口
 Spring Bean的实例化过程大揭密
 Spring Bean的初始化到底干了什么
 彻底理解FactoryBean接口
 完美解析Spring Bean的生命周期
 Spring的Environment接口有什么作用？
 为什么产生循环依赖问题
 循环依赖在Spring中是如何解决的


Apache Shiro Java反序列化漏洞分析：
https://www.cnblogs.com/loong-hon/p/10619616.html
https://www.cnblogs.com/paperpen/p/11312671.html
https://zhuanlan.zhihu.com/p/115257685
Shiro权限管理框架详解：https://www.cnblogs.com/jpfss/p/8352031.html


选择excel、word操作库的几个方面：
1.速度；2.内存；3.代码是否干净（易用性）；4.功能是否强大（支持完善度）；5.生态：例如POI还有ppt的、是否依赖office库（最好选独立的），office的不同版本
Excel：
    easyexcel是快速、简单避免OOM的java处理Excel工具：https://github.com/alibaba/easyexcel
    Apache POI、EasyExcel、jxl、excelPOI(到底是easyPOI还是这个)
    jxl与poi对比：https://blog.csdn.net/baidu_15873551/article/details/91157689
Java-------操作word工具的选择：https://blog.csdn.net/lq18894033018/article/details/97934901
java导出word大致有6种解决方案：https://www.cnblogs.com/lcngu/p/5247179.html
POI各Jar包的作用：https://www.cnblogs.com/zhangchengbing/p/6340036.html
jxls2.3-简明教程【比较、并入我的知识库】：https://www.cnblogs.com/klguang/p/6425422.html
【指导思想】
    1.默认使用Apache POI来操作word、excel、ppt（是否依赖office的安装？）；
    2.只支持office 2007以上版本（xml格式）；
    3.如果POI处理大数据量excel遇到内存问题，考虑是否对于excel单独使用easyExcel作为补充（网上说poi-ooxml的SXSSHWorkbook也适用于处理大量数据）；
    4.用Itext操作pdf文档及转换word，例如都转换成pdf预览。

字典表放入缓存，是一个好的实践，要配起来
设计一个好的临时目录的机制

后端框架搭好后，下一步工作方向：
1.前端框架及组件（依托工作）；
2.scheme及解释器、数值符号计算继续；
3.后端IoC、bloomfilter等练习，零散练习以及框架代码阅读。5亿整数的大文件，来排个序【用50万个就OK了】
bloomfilter：
    https://www.baeldung.com/guava-bloom-filter
    https://www.javamex.com/tutorials/collections/bloom_filter_java.shtml
    https://dzone.com/articles/redis-based-bloom-filter-for-java
    https://www.interviewcake.com/concept/java/bloom-filter
    https://blog.locut.us/2008/01/12/a-decent-stand-alone-java-bloom-filter-implementation/

Spring Boot: Excel, Csv and Pdf view example：https://aboullaite.me/spring-boot-excel-csv-and-pdf-view-example/
pdf预览的两种方式【office预览就只能用方法2了把】：
  1.后端response把pdf写入流，并且根据http协议设置http头告诉浏览器文件类型和直接打开的操作；
  2.前端使用pdf组件，例如ng2-pdf-viewer、pdf.js、simple-pdf-viewer。这种方式相比第一种，是不是控制更加精细？是不是更精美？较大的文件能不能边下边预览？怎么接收文件？怎么根据pdf协议解析流？【要会对前后端数据】
office文件预览：
  https://www.pdftron.com/blog/ms-office-sdk/office-viewer-angular/
  https://github.com/Marcelh1983/angular-document-viewer
  https://www.c-sharpcorner.com/article/read-data-from-excel-with-preview-in-asp-net-mvc-using-angular/

========================================================================================================================

【连接kafka的代码可以写了】
SchedulingConfigurer 的原理还没搞清楚，看源码
接入ShardingSphere

把springboot admin、actuator等这些先加上，为后续升级springboot、加完整的监控（zabbix、grafana等）做准备

@TestComponent注解：https://www.jianshu.com/p/72b19e24a602
@Bean 和 @Component的区别：https://www.cnblogs.com/just-for-beyond/p/12783889.html
Spring三级缓存解决循环依赖：https://www.cnblogs.com/longy2012/articles/12834762.html

Spring Web Flow：
https://www.cnblogs.com/chenjl001/articles/12833382.html
https://www.cnblogs.com/limeiky/p/5275303.html

Java项目构建基础：统一结果，统一异常，统一日志：https://zhuanlan.zhihu.com/p/127134464

再加上缓存、ES、RabbitMQ，一个系统雏形不就有了嘛？【为什么我的redis还没配和测试？】

读、写、预览、上传、下载

【mybatis配置有所突破，可以继续搞一轮】
1.mysql再看一轮，对每个机制分析涉及到的底层技术
2.mybatis的教程，缓存等高级特性、测试各项配置
3.mybatis源码分析（设计模式等）
4.connector、datasource、mybatis的关系看清楚
MybatisPlus实现多租户架构(Multi-tenancy)：https://blog.csdn.net/qq_35250752/article/details/99842499
使用 @Mapper，最终 Mybatis 会有一个拦截器，会自动的把 @Mapper 注解的接口生成动态代理类。这点可以在 MapperRegistry 类中的源代码中查看

对缓存的理解：该看SpringDataRedis了：https://blog.csdn.net/weixin_41987908/article/details/90897421
整合redis缓存的几个方面问题：
1.比较和原生用法的差别，能简化多少（例如RedisTemplate的方式）；
2.JSR-107：https://www.cnblogs.com/MagicAsa/p/10756331.html
3.确定注解方式是通的【看懂整合细节】；
3.SpringDataRedis（是不是和SpringDataJpa一样可用可不用？）
在SpringBoot中 @Configuration类中 @Autowired 不能注入的问题：
https://blog.csdn.net/qq_35064246/article/details/80677164
https://www.it1352.com/1841433.html

嵌套事务、挂起事务，Spring 是怎样给事务又实现传播特性的？https://www.jianshu.com/p/e8d3131ece67

SpringDataJPA的出现是为了简化现有的持久化开发工作和整合ORM技术。结束各个ORM框架各自为营的局面：https://www.cnblogs.com/wadmwz/p/10313495.html

使用Objects.requireNonNull(h);简化代码

前端上传的文件是怎么被转化为MultiPartFile的？【spring源码层面的学习】

每年升级一次pom

安装使用一个时序数据库、图数据库，看看IoT数据库别人的选择
考虑使用influxDB、HBase、Kafka【一旦上IoT数据库，就开始拆服务，加gateway和eureke服务】
IoT实时数据可视化方案：Grafana+InfluxDB+Telegraf+MQTT协议+Windows 10：https://segmentfault.com/a/1190000012514865
通过消息队列、ES、redis分析这些中间件难在哪儿，分别涉及到哪些技术

我现在包的划分还有提升的空间

Spring框架大量注解会影响性能吗？怎样优雅地使用注解？
https://www.zhihu.com/question/36486629/answer/68063702
https://www.zhihu.com/question/272055204/answer/365679479
https://www.zhihu.com/question/47449512/answer/658228092

网页如何实现session过期前端自动跳转？https://www.zhihu.com/question/356798836

shiro的ThreadContext简单介绍：
https://blog.csdn.net/Entodie/article/details/100526765
https://blog.csdn.net/zch1990s/article/details/83379483

shiro源码篇 - shiro的session创建，你值得拥有：https://www.cnblogs.com/youzhibing/p/9679134.html

Spring FactoryBean应用：https://www.jianshu.com/p/6f0a59623090
3.搞懂这个签名：@Bean public ProcessEngineFactoryBean processEngine
Shiro是如何拦截未登录请求的(一)：https://www.jianshu.com/p/511d3adf95e9
【非常重要】在EhCache、Shiro、Activiti的配置里面都有一个FactoryBean，factoryBean得自己使用一把
Shiro过滤器配置(ShiroFilterFactoryBean)：https://blog.csdn.net/qq_36850813/article/details/88913552
FactoryBean如果实在看不懂就看源码分析（shiro、cache、mybatis、activiti）：https://www.cnblogs.com/xwy6/p/11279518.html
为什么要用FactoryBean，非用不可吗？
ShiroFilterFactoryBean源码及拦截原理深入分析：
https://blog.csdn.net/u012345283/article/details/44199791
https://blog.csdn.net/lqzkcx3/article/details/78776555FactoryBean：通过使用FactoryBean，我们可以得到不同类型的对象实例。这也就是我们在AOP中通过设置calss为ProxyFactoryBean可以返回不同类型的业务对象的原理：https://www.cnblogs.com/quanyongan/p/4133724.html
ShiroFilterFactoryBean implements FactoryBean, BeanPostProcessor
如果大家有看过Mybatis的SessionFactoryBean和Activiti初始化引擎的ProcessEngineFactoryBean两个类就应该了解FactoryBean的具体使用：
https://www.cnblogs.com/quanyongan/p/4133724.html
ShiroFilterFactoryBean是怎么加载和替换默认的的？【看一下这个bean怎么被使用的】【如果可以看容器里面的对象，可以进去之前看看，之后再看看】
shiroFilterFactoryBean：
https://blog.csdn.net/u012345283/article/details/44199791
https://blog.csdn.net/lqzkcx3/article/details/78776555
BeanFactory 和FactoryBean的区别（亲手使用一下FactoryBean）：https://www.cnblogs.com/wangzhongqiu/p/6608103.html
FactoryBean：
https://blog.51cto.com/4247649/2118353（这个需要反复看）
http://www.cnblogs.com/aspirant/p/9082858.html
https://blog.csdn.net/baidu_19473529/article/details/80558996
为什么有的Bean带参数有的又直接在函数内部里面弄对象？
如何知道引入的一个组件要加载哪些bean？怎样看定义了哪些bean？例如mybatis。当然idea下面的spring标签有了名字可以查询。

多种鉴权方式（如数据库、OpenID、LDAP、OAuth、REMOTE_USER 等）

【shiro配置文章大集合】
看属性注入，学会判断哪些是可以注入（定制）的

shiro、spring整合原理：
https://blog.csdn.net/wangjun5159/article/details/89873842
https://blog.csdn.net/u013995395/article/details/90715272

关于shiro cache【重要】：
2.搞清楚shiro代码里面哪些地方用到CacheManager及缓存方法（开涛的教程）；
3.看看shiro-redis高版本有没有报错；
4.自行实现CacheManager、Cache等接口
熟悉一项配置，要从spring框架自身开始，例如缓存先从搞清楚@EnableCaching注解开始
@EnableCaching背后的动作（“这样的话，启动类启动时会去启动缓存启动器”）。由于CacheConfig会被扫描，所以@EnableCaching放这里也是可以的
Spring Boot缓存实战 默认Cache（ConcurrentMapCacheManager）：https://www.jianshu.com/p/f1c1b7ce5249
springboot使用cache缓存：https://www.jianshu.com/p/e9b40acb2993
缓存注解原理：
https://blog.csdn.net/qq_39470742/article/details/83310481
https://blog.csdn.net/qq_32447301/article/details/83963206
https://blog.csdn.net/weixin_38405253/article/details/90375003
springboot整合EhCache 3.x：
https://techblogstation.com/spring-boot/spring-boot-ehcache/
https://www.baeldung.com/spring-boot-ehcache
springboot整合ehcache：彻底搞明白
https://www.jianshu.com/p/9e4eb5e5bc1b
https://blog.csdn.net/qq_28988969/article/details/78210873
ehCache使用注解和不使用注解的2种使用方式【搜一下】
ehcache的单独使用，看官网：
http://www.ehcache.org/
https://www.baeldung.com/ehcache
EHCache的3.x版本与2.x版本的使用方式区别还是很大的，类的包名都改了，你说差别能不大吗：https://my.oschina.net/u/2608182/blog/890239?utm_source=debugrun&utm_medium=referral
超出maxEntriesLocalHeap的保存在哪儿？
https://stackoverflow.com/questions/22892170/how-to-configure-maxentrieslocalheap-in-ehcache
https://www.iteye.com/blog/elim-2116749

<groupId>javax.cache</groupId><artifactId>cache-api</artifactId>提供的是“Java缓存新标准（javax.cache）”：
https://www.ituring.com.cn/article/699
https://blog.csdn.net/caomiao2006/article/details/51934326
https://blog.csdn.net/boonya/article/details/54632129

Spring Tutorial：https://www.tutorialspoint.com/spring/index.htm
其实真正没明白的是@Autowired注解？
@Component VS @Bean：
https://codeboje.de/difference-spring-bean-component/
https://www.danvega.dev/blog/2017/05/17/spring-component-vs-bean/
反过来，理解了@Bean才能理解@Configuration注解类的左右
想要让一个普通类接受 Spring 容器管理的4种方法（含@Bean、@Import注解）：https://www.jianshu.com/p/afd2c49394c2
查看Import注解源码及讲解：https://blog.csdn.net/panchao888888/article/details/82882279
springboot属性注入的四种方式【配置多个数据源的理解。没有使用这种方式时，DataSource是怎么注入的？】：https://blog.csdn.net/Ru_yin_hai/article/details/98939615
springboot声明bean的六种方式：https://www.jianshu.com/p/ed99d6111d46
源码怎么分析？1.要有源码；2.要懂通用的源码分析方法并结合起来分析。如何结合教程看？如何debug？
1.把IoC容器搞清楚；2.把@Autowired、@Bean注解原理搞清楚
@Bean：https://docs.spring.io/spring-javaconfig/docs/1.0.0.M4/reference/html/ch02s02.html
@Autowired：https://www.tutorialspoint.com/spring/spring_autowired_annotation.htm
【还要读源码】用英文再看一次@Bean、@Autowired，看配置。不要过段时间后端又看不懂了：
@Bean：声明在方法上，将方法的返回值加入Bean容器，代替<bean>标签
https://blog.csdn.net/weixin_34452850/article/details/90544868
Bean name用法【从注入和装配两条线来理解】：https://blog.csdn.net/qq_35981283/article/details/80002611
@Bean的加载时机，@Autowired的加载时机
@Bean注解修饰带参数方法时的参数取值：
https://blog.csdn.net/ncuzengxiebo/article/details/80805786
https://www.cnblogs.com/eoooxy/p/6438109.html
从我们代码里面spring整合activiti我对bean又有了更多理解，再次确认我在shiro里面的用法有没有问题：
1.保持返回值和@Bean注解的函数名一致（函数名第一字母小写）；
2.参数是怎么加载的？
https://www.cnblogs.com/demodashi/p/8509895.html
@Bean用于已经定义好的类，配置选项，@Component用于定义类，并搞成bean
用@Bean的方式才能动态设置选项
如果没有声明bean，默认的对象是怎么加载的？找到并看看初始化代码，把config相关的初始化代码都看一下
spring获取加载的所有bean及bean的加载过程：
https://blog.csdn.net/long243416336/article/details/80590032
https://blog.csdn.net/dc282614966/article/details/81480002
https://www.cnblogs.com/leftthen/p/5440107.html
https://www.jianshu.com/p/210115d5a4aa
在Spring容器中，我们手工注解 @Bean 将被优先加载，框架不会重新实例化其他的 PlatformTransactionManager 实现类
ApplicationContext也能autowire？https://www.cnblogs.com/trekxu/p/9094860.html
@bean和@component：
https://blog.csdn.net/u011263417/article/details/79781686
https://blog.csdn.net/ztx114/article/details/82665544
http://www.cnblogs.com/shamo89/p/8051350.html

================================================================================================

【mybatis的配置】
1.必须要在application文件里面配spring.datasource；
2.mybatis用xml文件配置选型的方式示例：mybatis.config-location: classpath:mybatis-config-bak.xml。xml文件前面要有classpath，xml文件中可以有中划线，不能有下划线；
3.验证配置成功：(1)没有classpath会报错；(2)xml里面的setting项的value配置为空""会启动报错，证明配置项被读取了；
4.更多验证：(1)根据启动流程，阅读加载配置文件的代码；(2)看我下载的文件，xml里面pooled还配数据库连接的作用是啥，是否需要？(3)再看一次连接超时的问题；(4)再看一遍mybatis教程，测试配置项，打造一个合理的配置文件。
Mybatis与Spring集成时都做了什么？https://www.cnblogs.com/xwy6/p/11279518.html
单独搜DataSource的英文资料，从这里入手
4.spring配置datasource三种方式【要能搞懂原理】：https://www.cnblogs.com/libin6505/p/11001968.html
  搞懂springboot是怎么使用application.properties文件的（才能把配置彻底搞清楚，例如mybatis的配置）：(1)看懂数据源的默认配置；

1.从最初的MybatisAutoConfiguration的@Configuration类讲解：https://blog.csdn.net/weixin_34452850/article/details/90544868
问题1：springboot怎么保证三方库中的@Configuration注解也被扫描到？
2.MapperFactoryBean初始化【可以尝试打断点跟踪启动流程，提升能力】【这个流程一定要非常熟，然后其他的整合也就懂了】：
https://blog.csdn.net/qq_43193797/article/details/85011683
问题2：MapperFactoryBean初始化是怎么初始化的？是被谁调用的？（mapperInterface是怎么初始化的？）
问题3：有没有注解的都要看懂
3.@MapperScanner注解原理：https://blog.csdn.net/Shaun_luotao/article/details/87094700
可以看mybatis怎么跟springboot整合【原理】了，然后看缓存、shiro的整合（又前进一步）：
一 、Spring Boot中Mybatis启动过程概述【自己打断点一步一步看清楚】：https://blog.csdn.net/weixin_33842328/article/details/92645861

来看一下如何使用spring整合mybatis【感觉可以猜一下了】：https://blog.csdn.net/weixin_36977069/article/details/82801419
https://blog.csdn.net/smonkeyking/article/details/82661814

Mybatis十八连环问：https://zhuanlan.zhihu.com/p/108895550
【是不是我用的是mybatis-plus，应该直接配置mybatis-plus的配置文件】
mybatis和mybatis-plus的配置要玩的非常熟：
https://mp.baomidou.com/config/#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE
https://mybatis.org/mybatis-3/zh/configuration.html
有没有一种可能，是两部分都要配置？（但是又没测通）：https://www.cnblogs.com/bangpenggao/articles/11328923.html
Mybatis使用的设计模式：
https://blog.csdn.net/u014401141/article/details/86920900【1.比较装饰模式与继承；2.再思考一下filter的责任链模式；3.其他的再看】
https://blog.csdn.net/emprere/article/details/100190638
https://blog.csdn.net/youanyyou/article/details/89368772
@Mapper注解都没整明白
Mapper(DAO层)接口如何实例化【先思考，从哪个方向去分析代码，提升解决问题的能力，这一点非常关键】：
https://blog.csdn.net/tanqidong1992/article/details/48026491
https://www.cnblogs.com/to-be-continue/p/8260080.html
https://www.cnblogs.com/handsomeBoys/p/7602084.html
https://www.cnblogs.com/grasp/p/11813674.html
用的是mybatisplus的IPage/Page，看一下mybatis分页插件PageHelper
下一步搞懂3个问题：
3.Mybatis与Spring集成时都做了什么？https://www.cnblogs.com/xwy6/p/11279518.html
mybatis-spring这种包是桥梁
为啥不需要写MybatisConfig这种类？

================================================================================================

ORM层自动生成代码还需要练习并形成文档

使用redis作为mybatis内置缓存（二级缓存）【看一下怎么配】：
https://blog.csdn.net/stefwu/article/details/82803116
https://zhuanlan.zhihu.com/p/55109753
https://www.cnblogs.com/shuangyueliao/p/11504604.html
MyBatis默认是支持一级缓存和二级缓存,他自身的实现是通过PerpetualCache：https://blog.csdn.net/yinni11/article/details/80054547

shiro的授权缓存是默认开启的：https://cloud.tencent.com/developer/article/1329729
细说shiro之七：缓存：https://www.cnblogs.com/nuccch/p/8044226.html（Shiro支持在2个地方定义缓存管理器，既可以在SecurityManager中定义，也可以在Realm中定义。
搞清楚一个地方定义后，另一个地方是怎么获取的）
真正使用CacheManager的组件是Realm：是给默认realm使用的把？自定义realm自己加缓存后，是不是就不用cacheManager了？
还是要看cacheManager用到的地方。跟踪获取角色、获取权限的函数，如果都没用到cachemanager，那么就可以放心大胆的不配置；另一方面，用默认的内存缓存在我的应用中也是够的
前后分离springboot2.1集成shiro使用redis做权限认证缓存：https://blog.csdn.net/huiyunfei/article/details/103176940
shiro认证信息和授权信息的缓存【authenticationCachingEnabled，据说认证默认关闭，授权默认打开】【写入是在哪里进行的？】：https://blog.csdn.net/csujiangyu/article/details/49076531
shiro 刷新认证以及权限缓存（略坑）：https://blog.csdn.net/qq_37959142/article/details/80020899
【学习别人分析源码的方式。这个里面提到的本地缓存，能否结合弱引用那些东西看看】https://www.cnblogs.com/nuccch/p/8044226.html
springboot使用redis缓存【和ehcache比较，单独配置与放入spring配置】：https://www.jianshu.com/p/cde7a812743c
整合redis其实就是注入了一个CacheManager进去，那么start还做了啥？
把redisson配好，把事务和分布式锁用起来
1.缓存的使用、更新等细节问题；2.如果不使用shiro提供的Cache接口呢？换句话说，shiro的Cache接口在集成方面有什么优势？
Spring boot shiro session cache ecache redis 共存配置：https://www.jianshu.com/p/f304f77875ed
SpringBoot+Shiro+ehcache实现登录失败超次数锁定帐号：https://blog.csdn.net/qq_33229669/article/details/87945020
spring boot 使用spring cache 整合多级缓存(EhCache,Redis)：https://blog.csdn.net/zhaoyachao123/article/details/79657358
关于ehcache缓存中eternal及timeToLiveSeconds和timeToIdleSeconds的说明：https://blog.csdn.net/xiongzirui/article/details/50820181
CacheConfiguration类实现看一下，然后看看怎么切换redis
1.ehcache并且要能快速降级成没有cache的版本，或者升级成redis；
假如要用ehcache又没人实现CacheManager接口的话，正确的方式就是自己实现了
Ehcache看到这里了：https://blog.csdn.net/qq_32786139/article/details/82658197
Ehcache【要能最接近生产环境测试】【先得搞清楚shiro自己的cache】:
https://www.jianshu.com/p/05f3ede0b389
https://blog.csdn.net/qq_28988969/article/details/78210873
https://blog.csdn.net/qq_28143647/article/details/79789368
开涛的例子中，为啥要使用单例的缓存？
【这个文章有注入缓存管理器的用法】
https://blog.csdn.net/qq_32786139/article/details/82658197
含清楚缓存的写法：https://www.cnblogs.com/yinfengjiujian/p/9083361.html
使用@Cacheable把数据存进缓存：切换为redis后可以这样搞吗？了解这个注解的细节
Spring定义了CacheManager和Cache接口统一不同的缓存技术。其中CacheManager是Spring提供的各种缓存技术的抽象接口【要理解这种设计方式，再思考一下】
ehcache3、javax.cache API（JSR-107）需要搞清楚
Shiro缓存使用Redis、Ehcache、自带的MpCache实现的三种方式实例：https://www.cnblogs.com/zfding/p/8536480.html
shiro 刷新认证以及权限缓存（略坑）：https://blog.csdn.net/qq_37959142/article/details/80020899
解决shiro-redis集成序列化的问题：https://blog.csdn.net/Nightliar/article/details/81282164
springboot+shiro实现登陆过滤、权限认证、shiro密码加密、ehcache缓存（附demo项目）：
https://blog.csdn.net/qq_32786139/article/details/82658197
多实例时：session、权限缓存都需要集中存储
shiro与缓存再看一下，开涛的书要看透（虽然有些章节写的并不好）
细说shiro系列：https://www.cnblogs.com/nuccch/p/6775855.html【调试代码观察认证、授权的缓存状态】
shiro的JSR-107标准
springboot②最正确的集成shiro并使用ehcache缓存【看误区那一段】：https://blog.csdn.net/tanleijin/article/details/81118963
Apache Shiro 配置 LDAP 验证：
https://segmentfault.com/a/1190000018960246?utm_source=tag-newest
https://blog.csdn.net/u011537073/article/details/51777531

EnvironmentCapable：
https://blog.csdn.net/weixin_39165515/article/details/76976685
面试问烂的 Spring AOP 原理、SpringMVC 过程全解答！https://mp.weixin.qq.com/s/9YyrEC2JqZyIEo8oT7U07g
经过过年这段时间的精进，todo应该能搞定一大部分了

shiro的使用2 灵活使用shiro的密码服务模块：https://www.cnblogs.com/imsoft/p/5895905.html
搞Realm和CacheManager的关系【可以通过分析代码、观察数据库日志的方式，判断缓存是否起效】（authorizationCache、authenticationCache）：
https://blog.csdn.net/csujiangyu/article/details/49076531
https://blog.csdn.net/AlbertFly/article/details/52193813
再看Retry的cache能否整合使用CacheManager

测试AuthServiceTest：为啥有shiro相关的报错；

把启动时INFO日志里面注册的bean都看一遍

通用文件上传设计【文件上传根据这个文档搞出来】：https://blog.csdn.net/minaki_/article/details/85163343
分布式文件上传服务架构设计：https://blog.csdn.net/moxiaomomo/article/details/78588082

通知系统设计：
http://www.woshipm.com/pd/32652.html
https://www.jianshu.com/p/a89b61b6944d
http://www.xueui.cn/tutorials/web-course/design-of-web-end-message-center.html
https://www.zhihu.com/question/25459379
https://zhuanlan.zhihu.com/p/22456973

// todo 为啥没加@TableName("auth_user_role")的时候抛异常了没有回滚？再复现一把

shiro-all可以把shiro包一次备齐：https://www.cnblogs.com/jackydapeng/p/10093852.html

【过年期间有空建立起来】
用敏捷的方法来做更精细有效的计划（一定要有时间计划和时间成本估算），使用更好的计划文档。用更严肃的态度去思考计划的定制
用github或者码云带的功能做DevOps，如果不够的话考虑自己搭建持续继承环境

看看别人怎么评价注解的易用性可读性
《深入浅出MyBatis技术原理与实战》用桌面上的这本书来学习源码阅读
ShiroConfig里面的aop配置需要继续看

doGetAuthorizationInfo被调用的3个地方，有了这个，就可以自定义授权了【我没测通】：
https://blog.csdn.net/u010994966/article/details/90374887
https://www.2cto.com/kf/201708/669152.html
【先把我在这个方法上的几个todo干掉】

ResponseResultInterceptor 用来包装返回值，下一步：1.知识点的融会贯通；2.异常处理
如何优雅设计 API 接口，实现统一格式返回？：https://mp.weixin.qq.com/s/AtEzrFmCcMJCdCggL6k-yQ
SpringMVC 中 @ControllerAdvice 注解的三种使用场景！：
https://www.cnblogs.com/lenve/p/10748453.html
https://blog.csdn.net/qq_21492635/article/details/89381204
@ControllerAdvice需要和@ExceptionHandler配合。再思考spring里面的advice（通知是切面的一种实现，可以完成简单的织入功能）：https://www.jianshu.com/p/ddd90a0e340b
在Spring 3.2中，新增了@ControllerAdvice、@RestControllerAdvice 注解，可以用于定义@ExceptionHandler、@InitBinder、@ModelAttribute，并应用到所有@RequestMapping、@PostMapping， @GetMapping注解中。
有人问@ControllerAdvice和HandlerInterceptor的区别。
HandlerInterceptor是一个很方便的拦截器，可以用来做Token校验。需要配合WebMvcConfigurationSupport使用：https://blog.csdn.net/qq_32768743/article/details/88650567

Springboot 15篇：https://yq.aliyun.com/users/hz3zxsd4wosss?spm=a2c4e.11153940.0.0.1fa660e0yUAIFp

浅谈Apache 安全框架Shiro系列文章：https://www.zhihu.com/people/vincent-62-39

shiro的concurrency只有一句话描述，是一个底层机制，这个需要自己去想办法把它看懂【如果没有资料就看源码，并写博客】。看懂了，就真正提升了：
Concurrency：shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去
Apache Shiro开发文档精华版.pdf 92页：https://max.book118.com/html/2017/1203/142550761.shtm

HostAuthenticationToken 的 host 可以用于主机认证或者把用户IP装入保存
要有条理：
1.把完整的二级菜单移到左侧【其中有一个菜单专门用来做demo】

先把Query和Vo建立起来
1.把redis做起来，我已经装了windows版的redis
2.确认我现在能否方便切换到redis，以此来提升代码模块化程度和我的认知
3.确认关闭缓存后，我的代码会受多大影响。如果JVM内存不足的时候，如何砍掉ehcache的内存？进一步学习内存一致性问题
【加一个栏目表，然后把发表文章的功能彻底完善】
把excel的调通一版
权限的修改再试图重构一下：updatePermission，对应前端savePermission

3.shiro的permission的API看一下；
6.编辑文章【angular forms还要再推进一次】
7.重新组织前端文件夹和菜单
8.加样式和前端模板（是否分成2个工程以增强灵活性？）
9.搞2周技术债务，后端再搞2周
10.前端文档再看一周，包括service等
11.写更多基础设施
12.单元测试
思考一下chime用到哪些基础设施【ES、kafka】

周末回到正确的思路：1.休息，不要冲进度；2.哪怕只能解决2个小问题，只要是自己思考，也很有价值，不要冲进度

【本周】
6.【把2017年写的几个controller整合掉，把现有功能都测一下】
4.继续调试剩下的springboot+shiro（要能debug bean的加载顺序，至关重要）
8.【所有配置文件是怎么读取的】
9.必备功能：分享、OAuth2、activiti
周末：1.activiti工程配好
前端timeline组件能否用于工作流？思考工作流最少需要几张表，再看activiti为啥需要那么多表

整理了八个开源的 Spring Boot 学习资源：https://zhuanlan.zhihu.com/p/66125910
给大家推荐8个SpringBoot精选项目：https://cloud.tencent.com/developer/article/1197203
最值得拥有的免费Bootstrap后台管理模板：https://zhuanlan.zhihu.com/p/39945434
web-flash: https://github.com/enilu/web-flash
10个你值得收藏的牛逼开源后台控制面板：https://mp.weixin.qq.com/s?__biz=MzAxODcyNjEzNQ==&mid=2247487067&idx=1&sn=83241fa91f95b54c59468c9fecc4ed72&chksm=9bd0a3c3aca72ad56d7c39708d4b068d900bd7b3a64d066dad54b39c65e2db9ad7b4cfab6b22&scene=21#wechat_redirect
有springboot+vue+shiro的，那angular的呢？自己实现一下

// todo 添加permission的用法是info.addStringPermission(perms)，能否用这个来修改我的授权操作？（比较一下用和不用的区别）
//  https://www.cnblogs.com/116970u/p/10954812.html

边调试边观察内存

发现单元测试很适合EhCache这一类jar包配置的test，并且可以用来存放网上的示例代码

jmeter和Load Runner是对等物：https://howtodoinjava.com/library/jmeter-beginners-tutorial/
jmeter tutorial：
https://www.tutorialspoint.com/jmeter/index.htm
https://www.guru99.com/jmeter-tutorials.html
https://www.toolsqa.com/jmeter-tutorial/
大话jmeter，带你了解jmeter的基础用法：https://zhuanlan.zhihu.com/p/82841445
Apache Jmeter 5.0 websocket插件安装与使用：https://blog.csdn.net/qq_32524177/article/details/85231104
jmeter测试websocket接口：
https://blog.csdn.net/huoyunshen88/article/details/77511788
https://www.cnblogs.com/nanaheidebk/p/10129936.html
【jmeter压测简单的试了一下，后续需要更详尽的使用】

【准备知识】
1.@SendTo 与 @SendToUser 是Spring的STOMP协议中注解的标签：https://blog.csdn.net/fly_leopard/article/details/78664409
2.sockjs、stompjs。采用stomp的方式能传二进制吗？
WebSocket和Stomp协议：https://www.jianshu.com/p/db21502518b9
ServerEndpoint方式的后端webSocket：https://www.pegaxchange.com/2018/01/28/websocket-server-java/
第18章-使用WebSocket和STOMP实现消息功能：https://www.cnblogs.com/myitroad/p/9334141.html
Spring消息之STOMP：https://www.cnblogs.com/jmcui/p/8999998.html
Spring Boot + WebSocket Simple Example(TextWebSocketHandler or BinaryWebSocketHandler)：https://www.javainuse.com/spring/boot-websocket
springboot集成websocket的两种实现方式：https://blog.csdn.net/huiyunfei/article/details/90719351
Using WebSocket to build an interactive web application：https://spring.io/guides/gs/messaging-stomp-websocket/
webSocket：原生方式已调通，继续看原理（阅读代码）
websocket+sockjs+stompjs详解及实例：https://segmentfault.com/a/1190000017204277
https://blog.csdn.net/qq_33594101/article/details/80320762
websocket的升级(upgrade)细节？【从http到升级tcp看看对IP的管理】【升级过程中怎么管理session？】
1.session 的应用（ServerEndpoint的方式）
Interface WebSocketSession：https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/socket/WebSocketSession.html
https://developer.jboss.org/thread/278757?_sscc=t
通过心跳包实现webSocket的掉线重连以及避免session超时（默认连接时长1分钟）：https://www.v2ex.com/amp/t/472034
WebSocket加入心跳包防止自动断开连接：https://yq.aliyun.com/articles/636357
WebSocket Session共享：https://www.jianshu.com/p/2c5c4b0349df
Atmosphere 2.4.1 发布，异步 WebSocket 框架：https://www.oschina.net/news/68451/atmosphere-2-4-1
websocket长链接和短连接：
https://www.cnblogs.com/miaozhihang/p/9518584.html
https://blog.csdn.net/q1312882392/article/details/99621897
WebSocket在线测试工具：http://ws.douqq.com/
@ServerEndpoint是个什么东西？
为什么你的websocket只能建立256个连接？https://zhuanlan.zhihu.com/p/103289590
京东到家基于netty与websocket的实践：https://zhuanlan.zhihu.com/p/100394633
Springboot 集成 Websocket (with Shiro)【从协议层面吃透，几种方式要都能用。用http协议测一把，观察请求的协议】：
https://zhuanlan.zhihu.com/p/75869037
https://blog.csdn.net/qq_34763130/article/details/87709848
https://blog.csdn.net/tanleijin/article/details/82732493
https://blog.csdn.net/zixiao217/article/details/53098700
websocket 单元测试异常（已解决）：
https://www.cnblogs.com/andysd/p/10253747.html
https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-testing


0.快速在真实和mock之间切换，拆分任务；

不把框架搭建彻底突破，做不到敏捷

一文详解 SpringBoot 多数据源中的分布式事务：https://baijiahao.baidu.com/s?id=1652241112018535329&wfr=spider&for=pc

【基础设施类的，在学习时要把功能搞熟并深入到源码级，在使用时要有可以快速复用的代码】
【后端基础设施】
webSocket是基础设施
单点登录、OAuth2是基础设施
上传、下载（含zip）是基础设施
activiti、规则引擎是基础设施
kafka和springbatch等是基础设施
netty是基础设施
定时任务是基础设施
站内搜索是基础设施（需要再突破一轮）、ES/ELK等是基础设施
自动化部署也是关键基础设施，没有这些建立不了优势
日志框架、鉴权框架、ORM框架、springboot框架是基础设施
流式计算及redis缓存、分布式计算是基础设施
基础设施：科学计算库、图计算库：https://www.infoq.cn/article/2018/03/propelml-js-machine-learning
【前端基础设施】
富文本编辑器是基础设置
word、pdf预览是基础设施
https://www.pdftron.com/blog/ms-office-sdk/office-viewer-angular/
这个里面也提到了很多基础设施：https://segmentfault.com/a/1190000011562305
前端setTimeout、setInterval是基础设施
canvas及对应的库是基础设施
标签云（tag云）等技术是基础设施
模板主题是基础设施
数据可视化库 D3.js、three.js、echarts（dashboard、热力图）这些也是基础设施
地图、坐标功能是基础设施（看openlayer和其他的，选型）
按钮、图标、多级菜单管理
图标库【思考我还欠缺的是什么】：https://www.iconfont.cn/home/index
前端theme选型【用列出的这些基础设施选一下】：要有2级菜单、上方有搜索和登入头像登出按钮、有面包屑、弹出框、树控件、消息中心、时间线
好用的前端控件/组件（好用的表格、表单、对话框、tab、面包屑、图片预览、上传组件、图表）
Angular 5+ PDF Viewer：https://www.npmjs.com/package/ng2-pdf-viewer
WebViewer：

======================================================================================================

预防性保护项目，我们需要的是一个大数据的数据库，还是一个flink这样的流式系统？是否需要时序数据库InfluxDB？
flink计算能配hbase这样的数据库吗？示例场景？流式计算存储和hbase这样的存储怎么配合，是不是只用一种就可以了

mybatis plus强大的条件构造器queryWrapper、updateWrapper：https://blog.csdn.net/m0_37034294/article/details/82917234
4.mybatis-plus（搭建成功、源码学习）：https://mp.baomidou.com/guide/quick-start.html#%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B7%A5%E7%A8%8B
配置mybatis-plus的代码生成器：https://segmentfault.com/a/1190000019397149?utm_source=tag-newest
【重要】mybatis-plus的MybatisPlusConfig的原理是啥？如果不配置这个，也能得到结果，但是结果是错的，是全部
MyBatis-Plus 3.0.3 Sql注入器添加,即全局配置Sql注入器,sqlInjector改写：http://www.mamicode.com/info-detail-2472754.html
mybatis-plus批量insert相关的文章：
https://blog.csdn.net/leisure_life/article/details/98976565
https://www.cnblogs.com/chcha1/p/11099876.html
在自增的策略之下，怎么使用saveOrUpdateBatch
【用mybatis-plus改造旧表完成了第一版，后续要改造mapper和干掉无用的方法】
实验证明模型没有用mybatis-plus的注解是可以的，侵入性可以没有那么高
Mybatis-Plus的使用（三）——注解与配置文件：https://blog.csdn.net/ck457897564/article/details/100173959
然后搞AutoGenerator
mybatis-plus-boot-starter代码分析
支持 ActiveRecord 模式
分页插件、性能分析配置
PaginationInterceptor与两种分页方式：https://spldeolin.com/posts/mybatis-plus-page/
配置文件的各项开关
@KeySequence注解
lambdaQuery的用法：https://blog.csdn.net/weixin_38111957/article/details/92415413
自定义模板的实现机制值得学习： AbstractTemplateEngine 类中方法 getObjectMap 返回 objectMap 的所有值都可用
int deleteByMap(@Param(Constants.COLUMN_MAP) Map<String, Object> columnMap);
selectMaps好像作用不大？
这个里面的entityWrapper写的很详细【和LambdaQueryWrapper进行比较。貌似LambdaQueryWrapper就可以实现condition功能？】：
https://blog.csdn.net/BADAO_LIUMANG_QIZHI/article/details/89482201
mybatis-plus源码及doc：https://gitee.com/baomidou
MyBatis动态语句if与choose的区别：https://www.cnblogs.com/jagng951014/p/9462582.html
mybatis-plus：1.model的自动生成；2.参数Wrapper类、LambdaQueryWrapper的用法；
周二：mybatis-plus功能全部过一遍（看看比以前的代码生成器的优势在哪里），把自动生成代码的功能加上去，把多余的代码干掉
把批量插入、取样获取、批量删除、in等的逻辑移植过来（先把plus分页写好）
批量插入和批量更新转化成基础设施【是否有一致性的问题？】：
1.<script>标签的方式；2.provider（看看这个方式是不是更适合跟代码自动生成配合）：
https://www.jianshu.com/p/a749abbdb08d
https://www.cnblogs.com/shuaifing/p/9327465.html
https://blog.csdn.net/zeal9s/article/details/86003225
https://www.jianshu.com/p/041bec8ae6d3
http://www.imooc.com/article/details/id/284701
foreach (在实现 mybatis in 语句查询时特别有用)：
https://blog.csdn.net/haoxin1805487180/article/details/82778991

两次登录失败则显示验证码
网上的captcha库：Spring Boot Starter SimpleCaptcha。Patchca、Kaptcha，jcaptcha太老了
Springboot整合Shiro：集成Kaptcha验证码：https://www.jianshu.com/p/ad0bc0508abd

2.把mock建立起来【先搞自己熟悉的mockito，有空再搞jmockit】；

DAO和POJO包的命名有问题

shiro框架中，各个模块的重要性是不同的，授权模块就没那么重要。倒是登录等模块封装了很多（如果自己写）很麻烦的操作

缓存和mybatis的配置再测一轮，然后搞源码分析

用IDEA的功能重构成泛型。ResultBean搞成泛型的ResuleBean<T>【关键是要看有没有效率、编程方面的提升，除了返回值还有哪里能用到。】，
我们系统里面的返回值ResultBean<?>对应的success等方法根本没用到类型信息，用的object
再整一下包的划分，还可以建的包名：enums、constant、bean
把BaseException用起来，和全局异常处理结合

看一下有没有必要找一个SpringUtil

后台管理系统之权限管理：https://www.jianshu.com/p/be6025875f12

1.前端mock：意义大吗？假数据很好造

HttpServletRequest和ServletRequest，先比较一下方法的差别，然后再深入类型转换【猜测，是不是从tomcat传过来的就是HttpServletRequest，所以转换不会有问题？在知乎上看一下】

看了认证的源码，现在应该知道realm从哪个继承比较合适的问题了把？现在用的是：CustomRealm extends AuthorizingRealm
public boolean supports(AuthenticationToken token) {
    return token != null && this.getAuthenticationTokenClass().isAssignableFrom(token.getClass());
}
看ModularRealmAuthenticator里面的getRealms实现，看看类的实现是怎么被加载的
shiro实现APP、web统一登录认证和权限管理：https://www.cnblogs.com/sunshine-2015/p/5515429.html
Apache Shiro（七篇文章）：https://blog.csdn.net/vae1314chuanchen/article/category/8231465
跟着大宇学Shiro：https://blog.csdn.net/yanluandai1985/column/info/31708
shiro可以再来一次了：https://shiro.apache.org/【真正的文档在reference这个链接：http://shiro.apache.org/reference.html】
Springboot集成Shiro：里面有权限缓存、RememberMe等多个功能：https://www.cnblogs.com/kibana/p/8953566.html
细说Shiro系列文章
我的shiro之旅：https://blog.csdn.net/lhacker/article/details/19341735
对着shiro源码再搞一轮。看源码搞清楚：
1.为啥集成spring很方便；
2.如果能为shiro贡献sso的代码，将会很好

shiro使用LDAP认证：
https://www.cnblogs.com/chn58/p/6991776.html
https://segmentfault.com/a/1190000018960246?utm_source=tag-newest
springboot整合微软的ad域，采用ldap的api来整合，实现用户登录验证：https://www.cnblogs.com/anlegou/p/10511683.html

爬虫先不搞，找现成的

接私活必备的 10 个开源项目！https://blog.csdn.net/sinat_33224091/article/details/100980160

如何打开trace信息？例如ShiroFilterFactoryBean里面就有

张开涛的shiro再看一遍，然后源码分析一次

SpringMVC整合shiro、自定义sessionManager实现前后端分离：
https://blog.csdn.net/ch18255112191/article/details/88710610（这个里面bean的配置是最全的，还有sessionValidationScheduler）
https://blog.csdn.net/u011456867/article/details/80484559

配置shiro会话监听【看一下如果sessionManager没有实例化，代码是什么样的】：https://www.jianshu.com/p/0f949aa730c1
（SessionListener体现了这样一种可插拔设计风格：初始化了就多一个功能点，并且可以有不同的实现；没有初始化就少一个功能点，但是不影响主要功能。或者可以先给一个默认实现）
session cookie和remember cookie是怎么被使用的？（rememberme没学透把）
Http协议中Cookie详细介绍：https://www.cnblogs.com/bq-med/p/8603664.html
要看清shiro代码是怎么拦截获取cookie并转换成账户信息比对的
基于shiro框架实现自动登录(rememberMe)【是不是应该考虑后端的方案】：
https://www.jianshu.com/p/5b99c0ef6fb7
https://www.cnblogs.com/sunruntheway/articles/4447806.html

Shiro之CredentialsMatcher详解：https://blog.csdn.net/dh554112075/article/details/90760318

学习框架彻底体会了组装的感觉

设置多个realm认证策略，一个成功即跳过其它的：https://www.jianshu.com/p/0b1131be7ace
shiro 多realm 实现 后端 和 前端分离验证：
https://blog.csdn.net/qq_33842795/article/details/80895594
https://blog.csdn.net/liiuijkiuu/article/details/53945062
多realm【自定义ModularRealmAuthenticator并且在SecirityManager里面设置进去。搞懂下一个问题，securityManager没设置时，默认的是怎么初始化的】：
https://www.cnblogs.com/nfcm/p/9889969.html
https://blog.csdn.net/cckevincyh/article/details/79629022
SecurityManager可以setRealms，也可以通过setAuthenticator来设置多realm，分析一下代码？

0.把我的CustomRealm里面的todo再搞一次
2.还是要能直接调试spring的IoC容器，这样才能进一步分析shiro的加载（带着这些问题再精进一轮）
多调试，通过调试来提升自己的框架能力还有很长的路要走。这是个能拉开差距的非常关键的能力。
怎么能看出默认的策略，例如：this.authenticationStrategy = new AtLeastOneSuccessfulStrategy();
读代码的关注点：
1.类之间的继承各完成的任务；
2.类之间的组合关系

多租户架构：
https://www.jianshu.com/p/fd798c84ff4b
https://www.cnblogs.com/pingfan21/p/7478242.html
https://blog.csdn.net/leon_wzm/article/details/80181623
@SqlParser、TenantSqlParser：https://www.jb51.net/article/151723.htm
【通过数据库的schema来实现多租户，再思考一下】
Druid SqlParser理解及使用入门：https://www.cnblogs.com/lay2017/p/9840394.html

现在算是对搭建系统的工作量有了一点概念（搭建到可以让其他人愉快写代码的程度），不是那么容易的。

再思考一次包的组织，如果包太多是不是再加一个层级
按照阿里的文档，至少应该有Vo和Query两类（两个方向）数据传输对象

Shiro之用户名密码或手机号短信登录（多realm认证）：http://code520.net/archives/1153

// todo API前后端restful改造

ModularRealmAuthenticator：
https://blog.csdn.net/iteye_10899/article/details/82675363

AuthenticationStrategy的继承关系图（注意三种策略返回值的不同）：https://www.lmlphp.com/user/255/article/item/23154/

程序员直播还是要继续

@Primary 和 @Qualifier的实现值得一看，搞清楚从接口找类的过程
Spring下的Util - InstanceFilter：https://blog.csdn.net/weixin_42245133/article/details/105409459

springboot基于spring task实现动态定时任务(@Scheduled)
springboot自带定时器实现定时任务的开启关闭以及定时时间可以配置：
https://blog.csdn.net/weixin_37591536/article/details/82150933
我实验成功的是下面这种方法：
https://www.cnblogs.com/je-ge/p/6129667.html
https://blog.csdn.net/shan165310175/article/details/98478970
读更多定时任务代码：https://www.cnblogs.com/BINGJJFLY/p/7485599.html

菜单和授权权限的对应关系是不是装入role表（分级授权知道怎么做了，是不是再查查资料）


最终的替换目标要验证登录次数限制、权限等没有问题
挤掉其他用户或者能同时登陆（现在的逻辑应该是会挤掉把？用2个浏览器测一下）
2.增加了账号连续输错的限制后，逻辑有问题，在时间范围之内输入正确的账号也应该不让登陆【作为测试问题解决验证】
3.查看切换redis的难度。对比各cacheManager
4.todo过掉
6.Spring shiro 初次使用小结【里面讲了如何设置cookie名称】：https://www.cnblogs.com/Weagle/p/7908592.html
7.mybatis再根据这个文章测一下：https://blog.csdn.net/qq_37598011/article/details/80669608
8.消灭5个shiro文档
9.动态权限做好，继续看permission【还差2步：1是bean的重写；2是放入数据库】
10.看源码（从spring、mybatis开始）及集成activiti
12.继续看开涛的教程
13.继续流式计算和人工智能

timestamp的使用还要精进，例如比较大小
再思考一下上次、下载原理，springmvc需要精进
项目启动时数据库脚本自动执行，这个再思考一下
教程看到：http://wiki.jikexueyuan.com/project/shiro/authentication.html
写好数据库读取及登录模块【先写登录，再写权限控制，权限控制写通一个就先放开，最后再补】（包括QQ、微信登录）
0.比较并思考为啥有些文件最初没有传上github，被过滤了？；http://www.cnblogs.com/leesf456/p/4733958.html
2.进一步搞懂配置文件的作用，尤其是applicationcontext；
3.找到合适的模版（知乎上问，bootstrap的，最新的）；
4.完整学习一次springmvc教程（准备活动，找到兼职美工）；
2.mybatis：（再思考chime的数据库注解）；
5.把前后端连起来（写的时候练习一下前后端分离）；
6.完成监理的需求（先把PC端的做起来，再跟进手机的需求，要快）；
7.读spring源码，写demo；
10.学习老侯，一定要注意在做的过程中积累各种工程经验：前后端分离、单元测试、安全测试、code review、充分比较各种技术
JMockit：http://jmockit.github.io/
11.玩玩github的开源代码和blog
12.mybatis和spring的测试必须要搞的非常熟
13.加测试例、加业务逻辑工程
注意代码规范
手机上传的时候怎么用消息队列？
github能完成DevOps中的多少工作量？
写数据库升级脚本要注意啥？怎么写？搜一下
要有把service独立出来，maven多module打包的能力
搭架子要把阿里那些最佳实践都包含进来

密码前端传给后端之前就应该加密

mybatis配置（除了模板以外怎么知道还能加哪些标签？）【generator和plus功能有重复？】：
1.搞清楚mybatis加载时对application.properties（或者yml文件）和mybatis-config.xml的读取流程
2.mybatisPlus需要看吗
3.MyBatis 配置文件 用户密码加密存储：
https://blog.csdn.net/qq_24241631/article/details/80294144
http://www.imooc.com/article/285087
4.mybatis三剑客：
mybatis一级缓存二级缓存：https://www.cnblogs.com/happyflyingpig/p/7739749.html
在springboot和mybatis下，如何：1.不同的租户动态生成不同的数据库？2.不同的库房动态生成不同的表？

看源码的时候，要试着自己动手实现同样的功能。可以先尝试实现一下IoC容器、mybatis核心功能
自己实现spring核心功能：https://www.cnblogs.com/jingch/p/11368982.html

再思考cookie传过来后是怎么验证的。通过SessionManager设置session过期时间后，时间到了怎么办？https://www.cnblogs.com/yinfengjiujian/p/9083593.html

沉住气，精进是要一直进行的【光是这个文档里面的东西都至少要精进到年底】

Servlet Tutorial【当今servlet的场景？】：
https://www.javatpoint.com/servlet-tutorial
DispatcherType

SpringBoot----跨域配置：https://www.cnblogs.com/csguo/p/9597791.html

lifecycleBeanPostProcessor：
LifecycleBeanPostProcessor用于在实现了Initializable接口的Shiro bean初始化时调用Initializable接口回调，在实现了Destroyable接口的Shiro bean销毁时调用 Destroyable接口回调
https://blog.csdn.net/hxm_code/article/details/78697305
https://blog.csdn.net/peterwanghao/article/details/8824981
shiro学习之LifecycleBeanPostProcessor的作用：https://blog.csdn.net/hxm_code/article/details/78697305
Spring的后置处理器BeanPostProcessor【关键问题：什么场景在自己的代码里面使用？】：
https://www.cnblogs.com/libra0920/p/6118157.html
https://www.cnblogs.com/sishang/p/6576665.html
https://segmentfault.com/a/1190000015830477
https://uule.iteye.com/blog/2094549
DefaultAdvisorAutoProxyCreator、AuthorizationAttributeSourceAdvisor
这里为什么要配置DefaultAdvisorAutoProxyCreator？：https://www.jianshu.com/p/7f724bec3dc3

使用DefaultAdvisorAutoProxyCreator实现spring的自动代理
【原理是啥？】DefaultAdvisorAutoProxyCreator，Spring的一个bean，由Advisor决定对哪些类的方法进行AOP代理

跟媳妇聊天意识到的2个问题：
1.我的熟练程度还不够，还要更多building blocks，还要多写；
2.要看钉钉等有什么创新功能

密码更新提醒

springboot-plus：
https://gitee.com/xiandafu/springboot-plus
https://www.cnblogs.com/xinweiyun/p/9943784.html

springboot的包扫描顺序再研究一下
shiro官方文档再看一遍，开涛的书视情况而定是否需要继续看。shiro源码分析的几个方面：1.跟别人的文档；2.建立主题意识，按主题分析；3.建立问题意识

如果用户、权限单独做一个服务，应该怎么做和给多个项目使用？

该清这个文档里面的内容了【花一个周末清理】

runas写通（看一下代码实现）【涉及到什么样的数据库存储？】
RunAs理解：
1.授权人要能授权和收回；
2.被授权人登陆后选择用自己还是授权人权限(账号)，但一次只能用一个
看runas代码
把runas写出来：https://www.xlongwei.com/detail/17080116

// todo 删除角色也要把权限删掉（有用户则不允许删除），要等角色和权限的关联理顺后再做

ImportBeanDefinitionRegistrar：
https://www.jianshu.com/p/caef887b78b5
https://www.cnblogs.com/zhangjianbing/p/10114196.html

doGetAuthenticationInfo与doGetAuthorizationInfo 什么时候执行【调试一下】：https://www.cnblogs.com/tusheng/articles/7453587.html
注意思考一类问题：当类有多级继承时，每一层分别加什么内容，怎么合理组织？（找token或者SessionManager等分析一下）：https://blog.csdn.net/weixin_34289744/article/details/88164013
https://www.cnblogs.com/BINGJJFLY/p/9139348.html
https://www.cnblogs.com/BINGJJFLY/p/9267352.html
https://www.cnblogs.com/BINGJJFLY/p/9071235.html
https://www.cnblogs.com/BINGJJFLY/p/9301352.html
https://www.cnblogs.com/BINGJJFLY/p/9078020.html
springboot + shiro之登录人数限制、登录判断重定向、session时间设置：https://blog.51cto.com/wyait/2107423

前端路由非常重要，是一个枢纽，并且涉及到权限控制，需要好好研究组件的实现及使用

3.继续看shiro文档，反复看和整理（一个专题一个专题彻底灭掉）
得看spring-shiro的源码 得再打断点调试一下，现在的熟悉程度和收获远远不够
禁止账号多点登录或者重复登录：
https://blog.csdn.net/sunsgne_ac/article/details/79289770
https://blog.csdn.net/qq_35113996/article/details/84256271
踢出用户：
https://www.xuebuyuan.com/2116235.html
禁用：
https://www.jianshu.com/p/44ee5b1c1e77

shiro的权限控制应用，集成spring项目，密码错误次数过多短时间锁定：http://www.mamicode.com/info-detail-1449798.html

@Controller注解的类也是被IoC容器管理的，从这个角度思考一下

cacheManager专题分析一下
RetryLimitHashedCredentialsMatcher(CacheManager cacheManager) 为啥这个有参构造函数能走进来？搞懂这一点至关重要
把CacheManager搞成static的：https://www.cnblogs.com/imsoft/p/5895905.html

@EnableScheduling搞懂原理

战略要正确，用一年的时间紧锣密鼓的完成。我的目标就是把CRM技术搞的非常熟，能够快速搭

【再把菜单、权限这事儿自己思考一下】
1.通过注解来完成权限控制（5个权限注解）【新问题：我配了后启动失败了】；
https://www.cnblogs.com/limingxian537423/p/7928234.html
https://blog.csdn.net/u014203449/article/details/79415755
https://www.jianshu.com/p/c6b9a557d18d

2.动态权限：
https://www.jianshu.com/p/5de287239061
https://blog.csdn.net/haoyuyang/article/details/80036989
https://wenku.baidu.com/view/5a8f9e15974bcf84b9d528ea81c758f5f61f299e.html
https://www.cnblogs.com/007sx/p/7381475.html
http://how2j.cn/k/shiro/shiro-url/1729.html
https://www.xttblog.com/?p=1270
https://blog.csdn.net/jinnianshilongnian/article/details/84545363
shiro实现动态权限管理：https://blog.csdn.net/hxm_code/article/details/50083843
动态菜单/权限管理的实现：https://blog.csdn.net/qq_25652949/article/details/81067004

Shiro四种权限控制方式：
https://blog.csdn.net/qq_39659876/article/details/81838651
https://blog.csdn.net/it_boy_elite/article/details/78555356
https://blog.csdn.net/qq_29524437/article/details/84620877
用一个表保存role和有权限的页面之间的对应关系，既用于加载页面，又用于鉴权。但是这样好像没用到permission表？再考虑一下
是不是permission表就可以保存页面地址信息？permission相关的再看一下：
https://www.cnblogs.com/strinkbug/p/6834927.html
https://www.ibm.com/developerworks/cn/opensource/os-cn-shiro/
https://blog.51cto.com/zero01/2171397?source=dra
（从数据库读取目录和权限对应关系【需要结合自己有多少个filter】。那么问题就变成：如何把功能和url对应起来（一个完善的路由机制））
【再考虑一下菜单策略】
基于 RBAC 简单实现动态菜单及权限管理：https://blog.csdn.net/zhou6343178/article/details/79498093
https://blog.csdn.net/qq_39187822/article/details/83374049
https://blog.csdn.net/lz527657138/article/details/85689234
https://blog.csdn.net/niki_yeun/article/details/81335833
https://blog.csdn.net/zhuyu19911016520/article/details/52573072
https://blog.csdn.net/dabai_cai/article/details/78154993
https://blog.csdn.net/lpy1239064101/article/details/79185170
user_group_user、user_group、user_group_role表的作用：https://zhuanlan.zhihu.com/p/97035035
2.RBAC新解：基于资源的权限管理(Resource-Based Access Control)：
https://my.oschina.net/zjllovecode/blog/1601157【看看什么情况下适合绕过role】
https://blog.csdn.net/youni808/article/details/25612271
4.再看RBAC 5个表怎么跟shiro对应起来？
关于RBAC权限控制：
1.我只实现了最简单的，后续需要加字段，例如用户会有头像、名字、手机号、住址等字段；
2.【重要】学习别人的permission表：https://blog.csdn.net/JesseCary/article/details/54023049。shiro里面的permission也要再好好学习一遍；
3.当年微软的那一套表好像很复杂？有空再找一下；
4.复杂应用可能不止这5个表，例如还需要分用户组和角色继承关系：https://blog.csdn.net/yangxuesong5555/article/details/79417210
这5个表怎么跟shiro对应起来？

思考各种前端技术及ng-zorro等各能提升多大生产力

mybatis 理解 1、2级缓存，，懒加载【如何测试？】：https://blog.csdn.net/lu1171901273/article/details/82695993
Mybatis #和$区别以及原理：
https://blog.csdn.net/zhangyong01245/article/details/90768156
https://www.jianshu.com/p/0a70f957c750
https://www.cnblogs.com/skyislimit/articles/10469873.html

2.把cookie那个文章里面的request和response的调用链搞清楚
3.读代码的时候，先自己读一下，然后跟别人读的做对比和校正（防止读别人的没感觉，并验证自己读的对不对）
后续练习：写下现有功能，再快速重新配一次
shiro-spring怎么加载的shiro还是没整明白。shiro-spring 及 spring-context【从源码分析】
CustomRealm：再学一遍。1.如何单元测试？（好多文章里面直接main测试，学一下）
model里面字段注释/含义及自动生成

spring 配置 shiro rememberMe：
https://www.cnblogs.com/blogxiao/p/8759053.html
https://blog.csdn.net/vae1314chuanchen/article/details/83475717
Cookie是怎么写到浏览器的：https://www.cnblogs.com/blogxiao/p/8759053.html
cookie的过期时间？【cookie是每次都会发给服务器吗？】
rememberMe与单点登录的关系？
 点击登陆之后，当登陆成功之后会调用DefaultSecurityManager的rememberMeSuccessfulLogin方法将记住我写入到cookie中：https://www.cnblogs.com/blogxiao/p/8759053.html
在 Servlet 容器中，默认使用 JSESSIONID Cookie 维护会话。JSESSIONID是当前登录后没有关闭浏览器之前维持会话的，rememberMe是关闭浏览器后再次登录维持会话的
“如果只想监听某一个事件，可以继承 SessionListenerAdapter 实现”，看看是怎么玩的。
Shiro中Session和Cookie的一些思考：https://www.jianshu.com/p/4972c4d70853
https://bbs.csdn.net/topics/392084645
Session失效问题：https://www.cnblogs.com/OnlyCT/p/9151010.html
Shiro session和Spring session一样吗？https://www.cnblogs.com/onlymate/p/8391274.html
如果没有logout，session的过期策略是什么？【和cookie的过期问题对比考虑】
看看shiro默认是怎么拦截的

Tkmybatis是在mybatis框架的基础上提供了很多工具，让开发更加高效：https://blog.csdn.net/wang_snake/article/details/80705583https://blog.csdn.net/wang_snake/article/details/80705583

【单独击破1】
realm继承关系彻底搞清楚（看看用不同的realm会怎么用）
0.复习一下现有代码【同时，再回过头来看，添加的权限相关的代码确实没多少，很简单，验证一下】
【单独击破2】
1.spring框架源码分析；【究竟应该直接读代码，还是先看熟教程，还是两者结合？】
2.logback源码（官网那个教程）
3.mybatis源码
4.shiro源码
5.ehcache 源码
6.activiti的源码好学吗？
7.消息队列源码

参数为啥还是不能灵活运用：
public String loginjudge(HttpServletRequest request)

特别想把ribbon和feign搞清楚

Mybatis-config.xml 详细配置：https://blog.csdn.net/weixin_41910059/article/details/82659238

BlockJUnit4ClassRunner源码分析：https://blog.csdn.net/hello_worldee/article/details/76110828
SpringJUnit4ClassRunner
看懂springboot的启动流程，再对比下面的说明：
    @RunWith(SpringRunner.class) //底层用junit SpringJUnit4ClassRunner
    @SpringBootTest(classes={DemoApplication.class})// 指定启动类，启动整个springboot工程
有的文章说有@ExtendWith就可以运行了：https://blog.csdn.net/qq_19671173/article/details/79423951
Junit 5: https://junit.org/junit5/
Mockito 2 : https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2

测试搭起来，然后停一下，把现有功能充分测试：
    0.测一下这句的语法是不是对的：log.error("download failed, filename: [{}]", fileName, ex);
    1.所有配置文件相关功能测试：【mybatis都还没配好】、ehcache的测试等；
    2.所有controller及shiro相关功能
    4.把下方Spring和Java Enterprise菜单用起来

shiro需要搞懂的2点：
1.权限注解；2.与web集成及拦截器；
Shiro过滤器：https://www.cnblogs.com/xk920/p/10827025.html
Shiro通过注解配置授权：https://www.cnblogs.com/xk920/p/10825706.html
通常自定义Realm需要继承AuthorizingRealm，这样既可以提供身份认证的自定义方法，也可以实现授权的自定义方法。

Shiro 登录后跳转到最后一个访问的页面：https://www.sojson.com/shiro

动态改变shiro的Principal属性：https://blog.csdn.net/guojing505123/article/details/79224200
由principal为空引发的几个问题：
http://www.nutz.cn/yvr/t/sp8m948654hoao89r3p5bq5758
https://blog.csdn.net/quanaianzj/article/details/83858575

后端拆成2个模块，最简单的分布式无论如何要搭起来
注册中心和网关这2样可以独立搭建起来

passwordservice的写法写通
【结合这个处理空指针】service层抛异常，异常会被直接透传给前端，格式是（看看用浏览器是什么样的表现，测一下）：
{"timestamp":"XXX", "status":XXX, "error":"XXX", "message":"XXX", "trace":"XXX", "path":"XXX"}
注解式shiro的原理以及配置
把登录那几个页面的跳转配置好

mybatis开启日志：
https://blog.csdn.net/leocolee/article/details/80398406
https://blog.csdn.net/lpw_cn/article/details/84779387
druid开启日志

3.在一个项目中，怎么观察容器中和容器外的bean(结合JVM 调试器学习)？是尽可能多的把对象放入容器还是尽可能少？还是无所谓？

再对比阿里巴巴手册看AddUserVo定义是否有问题

把有道笔记里面shiro的东西整理一下
JAVA安全框架Apache Shiro浅析：https://www.jianshu.com/p/dc5c49f5101e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
shiro的登陆应该是用到了session相关的东西【要搞懂这个必须进一步分析源码了】：http://localhost:8080/notLogin;jsessionid=14E3EDE787BBAF48DE108DE1BC501F19
看一下shiro里面SecureRandomNumberGenerator的实现
把shiro包、类结构看一下，能写出这样的框架真是牛逼
1.教你 Shiro 整合 SpringBoot，避开各种坑：https://www.jianshu.com/p/ef0a82d471d2【搞懂后把我的github上多的东西去掉】
https://www.jianshu.com/p/c9e65e014db9?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
https://blog.csdn.net/u013615903/article/details/78781166/
Shiro用starter方式优雅整合到SpringBoot中

VS code中的Node.js教程：https://blog.csdn.net/qq_40420795/article/details/81909392

需要2轮测试用例：
    1.随着理解的深入和逐渐使用的功能的复杂，需要保证原有的用例可以用，并且能测试复杂功能。
    shiro代码首先还是按照调试流程来学习
    我的互联网项目每周要上线一个小功能

目标1：在springboot里面配的可用（ini）；2.把jdbcRealm的配置抽出来，写通
shiro的todo：
1.把logging再搞清楚；

shiro里面的permission是怎么跟表、API关联起来的？（其实资源就是我理解的功能点，再多一个关联）
资源的分类：菜单、URL、页面按钮、Java 方法等
IniSecurityManagerFactory过时了，怎么找到没过时的替代类？
JndiLdapRealm、AbstractLdapRealm、ActiveDirectoryRealm
JdbcRealm、AuthorizingRealm源码阅读：1.搞清楚用的那个类实现；
JdbcRealm里面最终连接数据库读取数据是在JdbcRealm的getPasswordForUser方法里面。看如果Reaml在读配置那一步是怎么被插入进去的继续写代码、跟代码：第5章（加密怎么无缝集成的？用ini文件尝试）、第6章、第10章、第11章。直接看开涛的代码。然后再翻译成Springboot的
基于url配置权限【另一个教程】：http://how2j.cn/k/shiro/shiro-plan/1732.html?tid=129

mybatis打印debug日志【原理得继续熟悉，并且让生产环境不打。能否不同的环境加载不同的配置文件？】：https://www.cnblogs.com/blacksonny/p/6956949.html
logback 配置详解：https://www.cnblogs.com/cb0327/p/5759441.html

“IoC强调的对代码引用的控制权由调用方法转移到外部容器，在运行时通过某种方式注入进来，实现控制的反转，这大大降低了服务类之间的耦合度”。为什么说大大降低了服务的耦合度？一个最简单的例子：我的示例代码中，对接口进行了不同的实现后（例如shiro），替换的时候不需要动引用他们的类【再审视一下我的代码，看看我的shiro配置是不是底层都是DI】

Spring Boot Junit单元测试【把@WebAppConfiguration注解和注解原理搞懂，尽量多理解一点】：
https://www.cnblogs.com/jpfss/p/8422770.html
https://www.jianshu.com/p/afb04b925db3
Junit测试controller：
https://blog.csdn.net/xiaolyuh123/article/details/73281522/
https://blog.csdn.net/sinat_32481295/article/details/79764749

IDEA diagram里面有一项叫Spring beans Dependencies，这正是我需要的。eclipse里面有没有spring的框架专用插件？

功能写好后，再搭建eureka server和spring cloud gateway
搭建Eureka注册中心：
https://www.jianshu.com/p/bde8e442ba0b
https://baijiahao.baidu.com/s?id=1630885642520150785&wfr=spider&for=pc
spring-cloud-gateway：https://spring.io/guides/gs/gateway/
spring-cloud-gateway与nginx的功能比较

前后端分离的深入研究：
https://blog.csdn.net/qq_41849709/article/details/83411137【Ajax写法】
https://www.cnblogs.com/lvdabao/p/4204858.html
https://www.jianshu.com/p/b76de38fbb4a
https://www.jianshu.com/p/9e71429edbf6
https://blog.csdn.net/li_gameover/article/details/79917473
https://blog.csdn.net/u014445339/article/details/74301489

shiro超时相关的问题：
https://www.cnblogs.com/shihaiming/p/6042788.html
https://www.cnblogs.com/cocoat/articles/5226733.html
https://blog.csdn.net/ahou2468/article/details/78126607
https://www.jianshu.com/p/2c4a27874624
https://blog.csdn.net/zsg88/article/details/69488728
https://blog.csdn.net/jrn1012/article/details/70396502

【确认这个过程】在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，
框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。
mybatis事务管理：
https://www.cnblogs.com/geningchao/p/6628452.html
https://www.jianshu.com/p/f3017479bd30
https://www.jianshu.com/p/f0662c10ce4f?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
https://blog.csdn.net/qq_36688143/article/details/82769423

@EnableTransactionManagement
Spring中的@Transactional(rollbackFor = Exception.class)属性详解：https://www.cnblogs.com/clwydjgs/p/9317849.html
1.回滚后返回值如何处理？2.如何打日志？
3.为何“回滚失效”、未生效？可能是没有配置事务管理器，做好单元测试：
https://blog.csdn.net/weixin_44138309/article/details/100561860
https://www.cnblogs.com/Z-share/p/11713863.html
我没加的时候阿里巴巴给了提示：需要在Transactional注解指定rollbackFor或者在方法中显示的rollback：
https://blog.csdn.net/ostar_liang/article/details/80770837
https://blog.csdn.net/qq_16605855/article/details/79653282
搞懂@Transactional注解的实现原理：
    声明式事务管理建立在AOP之上的。其本质是对方法前后进行拦截，然后在目标方法开始之前创建或者加入一个事务，在执行完目标方法之后根据执行情况提交或者回滚事务。
    声明式事务管理也有两种常用的方式，一种是基于tx和aop名字空间的xml配置文件，另一种就是基于@Transactional注解。显然基于注解的方式更简单易用，更清爽。
@Transactional遇到异常后的返回值处理：
https://ask.csdn.net/questions/665180
https://www.cnblogs.com/lemon-flm/p/8064531.html
透彻的掌握 Spring 中 @transactional 的使用：
https://developer.ibm.com/zh/articles/j-master-spring-transactional-use/
https://blog.csdn.net/jiangyu1013/article/details/84397366

【再看看springmvc的线程模型】如果不对运行时异常进行处理，那么出现运行时异常之后，要么是线程中止，要么是主程序终止。

//@RequiresPermissions("+user1+100")【一旦这样使用，底层就要按照shiro要求的方式重载了】
再看ModelAndView的用法，和return "anth/login";这种比较一下

再看一下shiro相关的包一共有多少个：shiro-core、shiro-spring、shiro-web、shiro-redis、shiro-quartz、shiro-cas、shiro-guice
密码加密、授予身份、单点登陆、DelegatingFilterProxy
.DelegatingFilterProxy是怎么初始化的？

shiro的下面两大功能：
Concurrency：shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；
<V> V execute(Callable<V> callable) throws ExecutionException;
void execute(Runnable runnable);
<V> Callable<V> associateWith(Callable<V> callable);
Runnable associateWith(Runnable runnable);
Testing：提供测试支持；

spring-framework-reference/pdf(5.1.2.RELEASE)：https://docs.spring.io/spring/docs/5.1.2.RELEASE/spring-framework-reference/pdf/

activiti生产的图片如何做缓存？

把开涛后面有几章看一下，把有道里面的内容排查一下

不懂的地方可以多借助调试来观察，把spring的调试配起来

加密：哪怕用md5实现，后面再优化：https://blog.csdn.net/hxm_Code/article/details/50136173
自定义Matcher：CredentialsMatcher只有doCredentialsMatch一个方法，因此自定义主要是重载这个方法
Shiro自定义Realm时用注解的方式注入父类的credentialsMatcher：https://www.cnblogs.com/foxting/p/6790331.html

Spring mvc 之 AbstractHttpMessageConverter 自定义Http消息转化器：https://blog.csdn.net/fang_qiming/article/details/79927708

spring官网文档：https://spring.io/guides
spring AOP再搞一遍

mybatis-spring：
为啥有了@Mapper注解后就不需要@Repository了
以前只知道双向绑定这个名字，现在可以思考原理了
Spring与Mybatis三种整合方法：https://www.cnblogs.com/onlymate/p/7865463.html
mybatis中SqlSession、SqlSessionTemplate、SessionFactory和SqlSessionFactoryBean之间的关系：
https://www.cnblogs.com/xiaoming0601/p/12166160.html

登录时密码比对过程：realm里面的SimpleAuthenticationInfo代表的是数据库保存的数据的封装，包含加密后的密码。而用户输入的原始密码被封装成UsernamePasswordToken，
然后在login的过程中根据定义的RetryLimitHashedCredentialsMatcher进行加密。看一下SimpleAuthenticationInfo几个构造函数的区别
SimpleAuthenticationInfo实现了MergableAuthenticationInfo, SaltedAuthenticationInfo
看一下ByteSource这个接口。心得：分析源码的时候多注意观察接口

写框架的时候，有时候需要开放接口给用户，例如shiro的CacheManager（当然也会自带一个默认的）。要熟悉这种设计思路
尝试使用rest接口，可以更简洁同时也能暴露更少信息

sessionListener：https://www.cnblogs.com/qsymg/p/9836122.html
boolean isServletContainerSessions();//是否使用 Servlet 容器的会话。如果使用，是怎么样的？
ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话
在 Servlet 容器中，默认使用 JSESSIONID Cookie 维护会话

用配置文件配DataSource【还有参数问题，怎么传入】，这一块还是没有搞明白（@Configuration、properties文件、xml三种配置方式的代码分析）
能看到logback启动打的日志吗？我看公司项目有
观察日志里面对中间件的日志打的是不是全，把这一块彻底搞明白
动态修改日志级别
通过org.springframework.boot.logging.LoggingSystem提供的api即可
针对某一个包修改日志级别

lucene相关的再看一下

把我的activiti工程上传。我的activiti demo为啥没启动起来？先检查一下
Error creating bean with name 'requestMappingHandlerMapping'：这种错误可能是少了包

Postman mockserver详细教程：https://blog.csdn.net/testdeveloper/article/details/80559538

CommandLineRunner（源码）：
https://blog.csdn.net/qq_26323323/article/details/80856973
https://www.jianshu.com/p/5d4ffe267596
https://www.cnblogs.com/chenpi/p/9696310.html
Spring boot CommandLineRunner接口使用例子：
https://blog.csdn.net/weixin_34320724/article/details/93707657
https://www.cnblogs.com/harrychinese/p/SpringBoot_CommandLineRunner.html
https://www.cnblogs.com/chenpi/p/9696310.html
https://www.ucloud.cn/yun/7401.html

看mybatis实现PlatformTransactionManager这个接口的代码在哪个包里面
mybatis的 useGeneratedKeys 是怎样实现的？ https://blog.csdn.net/tt50335971/article/details/53487260

spring-boot-starter-web：https://blog.csdn.net/qq_25453181/article/details/106041337
要有一种引领的意识，赚钱在其后，否则永远无法成事

@Service("activityService")注解参数有帮助吗？

周日：
静态页面的目录放开：http://localhost:8080/static/index.html
@RequestBody用起来

spring和Java Enterprise标签可以看了
activiti从6.0上面的版本开始搞
【观察】配置了数据源和activiti后，启动项目，activiti 的各个服务组件就已经被加入到spring容器中了
run菜单里的Endpoints

泛型的问号适合放在返回值里面吗？Response<?>

ts里面的Observable<T> implements Subscribable<T>。涉及到RxJS的概念

前端开发了解：
1.VSCode、node、angular、typescript：
https://www.cnblogs.com/clwydjgs/p/10078065.html
https://www.cnblogs.com/parry/p/vscode_top_ten_plugins.html
下载：https://code.visualstudio.com/docs/?dv=win64user
python也可以用VSCode、sublimeText来搞
2.sublimeText、node、angular、typescript；
对比VSCode和sublimeText

把shiro官方教程也看一遍，思考：开涛到底是根据那个写的还是自己读代码理解后写的教程
spring transaction源码分析--事务架构：https://www.cnblogs.com/davidwang456/p/4309038.html
Spring事务配置的五种方式：https://www.cnblogs.com/onlymate/p/7805369.html

controller方法的执行：把抛出异常、HttpServletRequest/HttpServletResponse两个问题解决掉。看一下HttpMessageConverter在流程中的哪个位置起作用
HttpServletResponseWrapper
@RequestBody、@RequestParam、MultipartFile等是怎么封装的，还有@CookieValue、@ExceptionHandler等
@RequestPart：提供对“multipart/form-data”请求的全面支持，支持Servlet 3.0文件
上传（javax.servlet.http.Part）、支持内容的HttpMessageConverter（即根据请求头的
Content-Type，来判断内容匙数据是什么类型，如 JSON、XML，能自劢转换为命令对象），
比@RequestParam更强大（只能对请求参数数据绊定，key-alue格式），而@RequestPart
支持如JSON、XML内容匙数据的绊定；详见本章的第×××节；
一网打尽 @ExceptionHandler、HandlerExceptionResolver、@controlleradvice 三兄弟：https://www.xttblog.com/?p=3586
@ControllerAdvice的实现：https://blog.csdn.net/wangpeng322/article/details/81912353
ContentNegotiatingViewResolver，内容协商规图解析器，它迓是规图解析器，只是它支
持根据请求信息将同一模型数据以丌同的规图方式展示（如json、xml、html等），RESTful
架构风格中很重要的概念（同一资源，多种表现形式）

Flash 属性 和 RedirectAttribute：通过FlashMap存储一个请求的输出，当迕入另一个
请求时作为该请求的输入，典型场景如重定向（POST-REDIRECT-GET模式，1、POST时
将下一次需要的数据放在FlashMap；2、重定向；3、通过GET讵问重定向的地址，此时
FlashMap会把1放到 FlashMap的数据取出放到请求中，幵从FlashMap中删除；从而
支持在两次请求乊间保存数据幵防止了重复表单提交）。
Spring Web MVC提供FlashMapManager用亍管理FlashMap，默讣使用
SessionFlashMapManager，即数据默讣存储在session中

DispatcherServlet主要用作职责调度工作，本身主要用亍控制流程，主要职责如下：
1、文件上传解析，如果请求类型是multipart将通过MultipartResolver迕行文件上传解析；
2、通过HandlerMapping，将请求映射到处理器（迒回一个HandlerExecutionChain，
它包括一个处理器、多个HandlerInterceptor拦截器）；
3、通过HandlerAdapter支持多种类型的处理器(HandlerExecutionChain 中的处理器)；
4、通过ViewResolver解析逻辑规图名到具体规图实现；
5、本地化解析；
6、渲染具体的规图等；
7、如果执行过程中遇到异常将交给HandlerExceptionResolver 来解析

Spring教程:ViewResolver 视图解析器以及视图View详解，自定义视图解析器：https://blog.csdn.net/blueboz/article/details/81840593
【再思考一下同时使用ViewResolver和httpResponse，代码到底是什么样的？】
根据ViewResolver这个文章的讲解，最终的写入还是用的response。另一个问题是：response是怎么传给controller方法的？

springboot使用shiro和pac4j-cas 实现cas单点登录：https://blog.csdn.net/hsp1990/article/details/83621817

eureka.instance.appname 与 spring.application.name 的区别：https://blog.csdn.net/ezreal_king/article/details/72930401/
springboot新特性

【验证】用@Lazy应该能解决我在@Configuration里面@Autowired Mapper的问题，用于改变加载顺序
【或者试一下@DependsOn】https://blog.csdn.net/neweastsun/article/details/78775371
Spring系列——@lazy注解：
https://blog.csdn.net/m0_37941483/article/details/90679524
https://www.jb51.net/article/170250.htm
@lazy注解处理循环注入问题：https://www.cnblogs.com/yangxiaohui227/p/10523025.html
@Dependson注解与@ConditionalOnBean注解的区别：https://www.cnblogs.com/hjw-zq/p/10455879.html

不同注解的扫描顺序？是否先扫@configuration？
loggingSystem.setLogLevel(null, LogLevel.DEBUG);

如，默认时是info模式，未修改时，debug模式是不会输出的。

框架搭好后，shiro需要学习第二遍。springmvc+shiro彻底搞清楚、知道怎么调试后，会是一个大的突破
不能够快速调试，在新工作中也会遇到困难
Spring源码解析——如何阅读源码：
https://www.cnblogs.com/xing901022/p/4178963.html
https://blog.csdn.net/qq_27409289/article/details/73696207
https://baijiahao.baidu.com/s?id=1609595005078804580&wfr=spider&for=pc
实现IoC容器：
https://www.cnblogs.com/dooor/p/5346333.html
https://chenguanwei2008.iteye.com/blog/361558
https://cloud.tencent.com/developer/article/1422428
https://www.jianshu.com/p/d6991030d84d?jdyscene=chat
https://www.jianshu.com/p/22863e6c1210
https://blog.csdn.net/u010994169/article/details/71169986


Spring解析，加载及实例化Bean的顺序（零配置）：https://blog.csdn.net/qq_27529917/article/details/79329809
吐血整理 20 道 Spring Boot 面试题：https://www.jianshu.com/p/63ad69c480fe/
看代码：sessionValidationScheduler ： 会话验证调度器，sessionManager 默认就是使用 ExecutorServiceSessionValidationScheduler，其使用 JDK 的 ScheduledExecutorService 进行定 期调度并验证会话是否过期

要敏捷
全局异常处理做进来
富文本编辑器、activiti做进来

activiti demo网站试用：
http://www.jq22.com/yanshi4014
http://www.jq22.com/jquery-info4014
这种比较专业的，可以在下面评论，把别人引到自己的网站，很容易来流量和转换成下载赚钱。还可以通过咨询服务赚钱

这种写法没有autowire，思考为什么可以成功：https://blog.csdn.net/pingweicheng/article/details/80593258

mysql的geometry扩展：
https://www.linuxidc.com/Linux/2018-09/154191.htm
https://www.jianshu.com/p/d6bf587389f1
@Bean注解与applicationContext.getBean的联系区别

DataSource的configuration，包括DataSource和DataSourceTransactionManager两个Bean
mybatis plus里面 A extends DataEntity<A>的写法

通过HttpServletResponseWrapper修改response输出流：
https://www.cnblogs.com/linma/p/7845124.html
https://www.cnblogs.com/gexiaoshan/p/6429888.html

简单快速的用SpringBoot访问静态资源（图片、html）【用thymeleaf的方式】：https://blog.csdn.net/qq_36481052/article/details/79075214
Thymeleaf 模板引擎简介 与 Spring Boot 整合入门：https://blog.csdn.net/wangmx1993328/article/details/81054474
用yml、properties文件配置静态页面（这种方式更优雅）：https://blog.csdn.net/Mr_yangzc/article/details/80805035

@EnableAsync（进一步简化异步的写法）

shiro需要搞清楚的流程：
2.CredentialsMatcher使用流程

redirectAttributes.addFlashAttribute("msg", "操作成功");

最初配通springboot+shiro的文档：
https://blog.csdn.net/weixin_38132621/article/details/80216056
session共享采用shiro-redis的方案（修改Session获取方式）：
https://cloud.tencent.com/developer/article/1342794
https://blog.csdn.net/haoyuyang/article/details/80036989
https://blog.csdn.net/u013615903/article/details/78781166
shiro和springboot流程的完全理解是我现在生产力提升最大的障碍，相比之下多线程那些反而没那么难了，当然并发也还需要相当大的精力

MyBatis Generator：
http://www.mybatis.org/generator/
https://www.jianshu.com/p/e09d2370b796
https://www.cnblogs.com/zcy_soft/p/3357980.html
5.flyway
6.druid

时间线timeline的后端设计（feed）：
https://www.php.cn/mysql-tutorials-53724.html
https://www.cnblogs.com/literoad/archive/2013/03/18/2966921.html
https://blog.csdn.net/weixin_33806300/article/details/90569157
http://www.html5dw.com/post/1903
https://www.liangzl.com/get-article-detail-522.html
https://mp.weixin.qq.com/s?__biz=MjM5NzQ3ODAwMQ==&mid=404465806&idx=1&sn=3a68a786138538ffc452bca06a4892c8&scene=0#rd
Feed流的概念：
https://yq.aliyun.com/articles/224132
https://www.useit.com.cn/thread-8342-1-1.html
https://wenku.baidu.com/view/3fb43833ff4733687e21af45b307e87100f6f879.html
http://www.lmyw.net.cn/?p=619
https://blog.csdn.net/mituan1234567/article/details/47008451

logback 配置详解（还需要继续搞）：
https://www.jianshu.com/p/1ded57f6c4e3?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
slf4j及使用@Slf4j注解写日志继续研究【怎么确定该打的都打出来了，逐个确认每个jar组件怎么打日志】：
https://projectlombok.org/api/lombok/extern/slf4j/Slf4j.html
http://www.importnew.com/28494.html
https://blog.csdn.net/duguxiaobiao/article/details/78988409
分析启动日志（能否从开涛的教程分析？），分析springboot启动过程
是否有必要把error单独打印到单独的文件？可能需要借助过滤器：https://blog.csdn.net/zzzgd_666/article/details/80458444
从控制台给logger传参数【部署】
logger和root：https://www.cnblogs.com/muhezi/p/4503934.html
日志：看看有哪些字段可以选（确保线程相关的一定不能掉，还有请求id等）
logback Filter 过滤器：
https://blog.csdn.net/ryo1060732496/article/details/84349835
https://blog.csdn.net/dyc87112/article/details/84349299
mySql---logback日志写入数据库(mysql)配置【appender原理】：https://www.cnblogs.com/chihirotan/p/6185547.html
TINYINT后面之所以要用(1)，是因为M默认是4：https://blog.csdn.net/liuchaoxuan/article/details/88142471
括号后面的数字只和ZEROFILL有关：https://blog.csdn.net/iteye_17023/article/details/82172114

在activiti这种抽象程度比较高的中间件里面，调试分析代码逻辑的时候数据库日志的作用就体现出来了。控制台调试最好配置打印出来

swagger2.把swagger-ui.html从权限里面放开【尚未成功】

周四：
加mybatis配置（要确认加载了，跟踪加载流程）、logback配置、druid配置
整理一下utils出来，例如uuid。如果appache common有就更好
ObjectMapper也autowire，这样有没有问题？

跨域的配置加上【要测试】
用我的batis目录的代码来建立dao层测试【继续搞mybatis代码分析】；
2.DAO层100%单元测试覆盖【先把单元测试搭起来，用mvn命令跑起来，CI、DevOps一点点往前推进】：https://www.cnblogs.com/lxnlxn/p/5996707.html
5.看前后端合并、分离的部署（先搞合并的）
6.整合并删除我的financial项目
6.加@Configuration注解；
7.websocket继续学习，写几个demo（比较这个里面的session）：
https://www.cnblogs.com/strugglion/p/10021173.html
https://blog.csdn.net/moshowgame/article/details/80275084
要能快速验证我的哪些方法没有被权限覆盖到，必须要做到这一点【尝试用反射控制】
重新封装返回值【网上看别人的规范】前后端接口规范
yml和properties去掉一个：https://www.bejson.com/devtools/properties2yaml/

Spring Aware接口解析【先看一下里面的几个例子】：https://www.jianshu.com/p/5865c5c3d0a3
spring的Aware列表【搞懂了这些，也就搞懂了生命周期把？】：https://www.jianshu.com/p/c5c61c31080b
看一下这几个Aware的代码：https://zhuanlan.zhihu.com/p/68877265
Aware是一个具有标识作用的超级接口，实现该接口的bean是具有被spring 容器通知的能力的，而被通知的方式就是通过回调：https://www.jianshu.com/p/5865c5c3d0a3
Aware的原理并不难，问题是：
1.各个aware是在framework哪里被调用的，使用场景是什么【这个分析】；
2.除了已有的aware，还可以扩展？看看shiro里面的aware

Windows下RabbitMQ安装及配置：
https://blog.csdn.net/lihua5419/article/details/93006834
https://www.cnblogs.com/liyouming/p/9150473.html
http://localhost:15672/api/index.html
我的系统中有curl，是安装RabbitMQ带的吗？
【RabbitMQ的学习特点和shiro不一样】
搭建 RabbitMQ Server 高可用集群：https://www.cnblogs.com/xishuai/p/centos-rabbitmq-cluster-and-haproxy.html
RabbitMQ 集群原理和完善：https://www.cnblogs.com/xishuai/p/rabbitmq-cluster.html
不完全准确的一个【我用了里面的图】：https://www.jianshu.com/p/b7cc32b94d2a

maven跑test搞清楚（为啥放开2个注释会有报错）
@RunWith(SpringRunner.class)
@SpringBootTest

@RunWith(SpringJUnit4ClassRunner.class) // SpringJUnit支持，由此引入Spring-Test框架支持！
@SpringApplicationConfiguration(classes = SpringBootSampleApplication.class) // 指定我们SpringBoot工程的Application启动类
@WebAppConfiguration // 由于是Web项目，Junit需要模拟ServletContext，因此我们需要给我们的测试类加上@WebAppConfiguration
SpringRunner is an alias for the SpringJUnit4ClassRunner.

对比shiro的SecureRandomNumberGenerator与JDK的

SpringBoot源码研究之Actuator：https://blog.csdn.net/lqzkcx3/article/details/89737579

前后端分离后续：spring跨域配置、启动多个服务，或者用shiro-redis的方式
以前的架构水平还是不行，现在深入搭框架后，对业务逻辑的兴趣没有以前那么大了

UUID 和 GUID是有区别的：
https://blog.csdn.net/xf_zhen/article/details/82260567
https://www.cnblogs.com/powerwu/articles/4433450.html

项目的包划分：controller、service、manager、dao、pojo(model、vo等)、config、filter、utils、shiro、websocket，
还可以有event、handler、entity、exception、common、global等

Spring Boot Admin（与actuator关系？）
Spring boot 2.0 Actuator 的健康检查（默认有15项，都打开看一下：http://localhost:8080/actuator/beans）：
https://blog.csdn.net/voilet_bin/article/details/83028698
https://www.jianshu.com/p/1aadc4c85f51
mybatis pagehelper【需要搞清楚原理】：
https://blog.csdn.net/justry_deng/article/details/82933941
https://pagehelper.github.io/
https://www.cnblogs.com/kangoroo/p/7998433.html
【分析原理】swagger是一个流行的API开发框架，这个框架以“开放式API声明”（OpenAPI Specification，OAS）为基础，对整个API的开发周期都提供了相应的解决方案，是一个非常庞大的项目（包括设计、编码和测试，几乎支持所有语言）：https://blog.csdn.net/moshowgame/article/details/80265480

【mybatis：数据库驱动的预编译，这是个非常重要的概念】
https://segmentfault.com/a/1190000004617028
https://blog.csdn.net/weixin_34452850/article/details/88991943（这个里面的概念不准确，但是给了源码）
https://blog.csdn.net/hanchao_h/article/details/53640720
https://www.cnblogs.com/haojun/p/10682407.html
https://www.jianshu.com/p/59155963d790
https://blog.csdn.net/LoveInWar/article/details/89646085
Mybatis解析动态sql原理分析：https://www.cnblogs.com/fangjian0423/p/mybaits-dynamic-sql-analysis.html

ConfigClusterResolver - Resolving eureka endpoints via configuration
ServletRequest与HttpServletRequest：接口之间强转的规则与限制？https://blog.csdn.net/m0_38039437/article/details/75271692
HttpServletrequest 与HttpServletResponse总结：https://www.cnblogs.com/liuyandeng/p/5336649.html
SpringMVC是怎么封装HttpServletRequest的？数据是怎么封装的？controller是怎么被调用的？
@requestbody和httpServletRequest区别：https://www.oschina.net/question/2491333_2283678
public interface HttpServletRequest extends ServletRequest {
    String BASIC_AUTH = "BASIC";
    String FORM_AUTH = "FORM";
    String CLIENT_CERT_AUTH = "CLIENT_CERT";
    String DIGEST_AUTH = "DIGEST";
将我的项目中HttpServletRequest都过一遍，都干掉。另外：参数中既有request又有response的怎么理解？

UsernamePasswordToken实现了RememberMeAuthenticationToken接口。

SpringBoot中application参数中文详解：https://blog.csdn.net/qq_25667339/article/details/79155805

postman：form-data、x-www-form-urlencoded、raw、binary分别对应的前端传递方式？【协议层面的东西】
https://blog.csdn.net/xybelieve1990/article/details/81111786

如果不想装mysql可以用SQLite：https://www.runoob.com/sqlite/sqlite-tutorial.html
用h2也可以

idea创建含有多个module的project：
https://blog.csdn.net/ssllkkyyaa/article/details/80855133
https://blog.csdn.net/wnf2018/article/details/80655153

springboot项目解决 No beans of 'UserDao' type found 问题：
https://blog.csdn.net/baichilele/article/details/82115918
https://blog.csdn.net/u012453843/article/details/54906905

ComponentScan注解用法介绍和注意事项：https://blog.csdn.net/neulily2005/article/details/83750027

@Import 注解：
https://www.jianshu.com/p/afd2c49394c2
https://blog.csdn.net/pange1991/article/details/81356594
https://mp.weixin.qq.com/s?__biz=MzAxMjY1NTIxNA==&mid=2454441963&idx=1&sn=6a59fe88c1107765c77820c0e9b8b4ef&chksm=8c11e0eabb6669fcb28553237b8b841a981cb0ce3cb0e4e9d0f752ce1a0b49cd4071f69cd1a6&scene=21#wechat_redirect
Import 注解与 ImportSelector 和 ImportBeanDefinitionRegistrar：https://www.jianshu.com/p/f74bc90b918e
深入理解Spring的ImportSelector接口：https://www.cnblogs.com/niechen/p/9262452.html

RetryLimitHashedCredentialsMatcher与cache已成功解耦

【文件上传下载，通过postman和junit进一步掌握】
Postman Post请求上传文件：https://blog.csdn.net/maowendi/article/details/80537304
才发现文件上传后端可以用@RequestParam来接的：
    @RequestParam 可以用于从query parameters, form data, 和parts in multipart requests中获取参数：
    https://blog.csdn.net/whan8080/article/details/90345749
    剩下的传递方式都是用@RequestBody吗？网上有没有对应关系表？怎么看spring源码确认？
springmvc文件下载的总结：
HttpServletResponse写数据的时候，发生了什么？
1.使用HttpServletResponse：https://howtodoinjava.com/spring-mvc/spring-mvc-download-file-controller-example/
2.ResponseEntity其实可以看做是把HttpServletResponse封装了，但是功能比HttpServletResponse多，推介使用：https://blog.csdn.net/qq_26584263/article/details/97972922
3.SpringBoot如何优雅的使用@ResponseBody返回图片（byte[]比较一下ResponseEntity）：https://blog.csdn.net/u014449560/article/details/82807517
【下载zip文件】
    1.https://blog.csdn.net/lesouls/article/details/80279960
    2.下载还有种不常见的写法：@Produces(MediaType.APPLICATION_OCTET_STREAM)：https://stackoverflow.com/questions/51342844/spring-boot-rest-service-to-download-a-zip-file-which-contains-multiple-file
文件上传总结：
官网教程Uploading Files【官网里面的代码还是写的很好的，有空要多看】：https://spring.io/guides/gs/uploading-files/
1.搞清楚multipart request的概念（搞懂这个是关键，纲举目张）：https://stackoverflow.com/questions/16958448/what-is-http-multipart-request
postman中 form-data、x-www-form-urlencoded、raw、binary的区别：https://blog.csdn.net/xybelieve1990/article/details/81111786
multipart/form-data：https://zhuanlan.zhihu.com/p/25038933
前端multipart request与MultipartHttpServletRequest的关联，MultipartHttpServletRequest与MultipartFile的关联：
看一下multipartFile.getInputStream()的实现。我的感觉：multipart应该是stream源，new了一个stream跟这个源关联
Sending MultipartFile Request：https://www.oodlestechnologies.com/blogs/Upload-Files-by-Sending-MultipartFile-Request-In-Java/
RequestEntity的用法：https://www.logicbig.com/tutorials/spring-framework/spring-web-mvc/request-response-entity.html
Uploading and Downloading Files with Spring Boot：https://www.devglan.com/spring-boot/spring-boot-file-upload-download
测试：https://www.logicbig.com/tutorials/spring-framework/spring-web-mvc/request-response-entity.html
多文件上传：
https://blog.csdn.net/gnail_oug/article/details/80324120
https://blog.csdn.net/magi1201/article/details/82757063

jar包里面的META-INF目录：https://blog.csdn.net/qq_38449518/article/details/82414069

@ConditionalOn...注解，条件组合你知道吗？https://blog.csdn.net/yusimiao/article/details/99301346

