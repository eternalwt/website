【下一步工作顺序】：

周四：
把pagehelper看懂，分布式ID生成；
把springboot+shiro打开的文章清掉；
log再搞一次，要完全配好【好像包已经有了，再结合教程看一下，日志的xml要配好】
1.【集成前端后会不会有影响】，springboot+easyUI今天要搞清白；
2.写好添加角色、用户的接口，权限相关的尽量往前写【把2017年写的几个controller整合掉，把现有功能都测一下】
3.actuator，swagger要能自己造session测通，把单元测试完善【我现在不确认dao层有些参数是否能跑通】；
4.把设置权限放到数据库，debug观察那段代码的执行顺序（要能debug bean的加载顺序，至关重要），然后通过代码看；4.继续调试剩下的springboot+shiro

跨域的配置加上【要测试】
0.1.日志配好（现在webSocket部分用到）；
用我的batis目录的代码来建立dao层测试【继续搞mybatis代码分析】；
2.DAO层100%单元测试覆盖【先把单元测试搭起来，用mvn命令跑起来，CI、DevOps一点点往前推进】：https://www.cnblogs.com/lxnlxn/p/5996707.html
5.看前后端合并、分离的部署（先搞合并的），加easyUI
6.整合并删除我的financial项目
6.mybatis三剑客、flyway、druid、日志、加@Configuration注解；
7.websocket继续学习，写几个demo（比较这个里面的session）：
https://www.cnblogs.com/strugglion/p/10021173.html
https://blog.csdn.net/moshowgame/article/details/80275084
要能快速验证我的哪些方法没有被权限覆盖到，必须要做到这一点【尝试用反射控制】
再加上缓存、ES、RabbitMQ，一个系统雏形不就有了嘛？
重新封装返回值【网上看别人的规范】前后端接口规范
maven跑test搞清楚（为啥放开2个注释会有报错）

我现在的demo还有些问题：1.有些代码没有放入service里面，controller直接调用的dao；2.用的底层的HttpServletRequest、PlatformTransactionManager替换一下
1.数据库连接加密【mybatis配置】
timestamp的使用还要精进
项目启动时数据库脚本自动执行，这个再思考一下
教程看到：http://wiki.jikexueyuan.com/project/shiro/authentication.html
写好数据库读取及登录模块【先写登录，再写权限控制，权限控制写通一个就先放开，最后再补】（包括QQ、微信登录）
0.比较并思考为啥有些文件最初没有传上github，被过滤了？；http://www.cnblogs.com/leesf456/p/4733958.html
2.进一步搞懂配置文件的作用，尤其是applicationcontext；
3.找到合适的模版（知乎上问，bootstrap的，最新的）；
4.完整学习一次springmvc教程（准备活动，找到兼职美工）；
2.mybatis：（再思考chime的数据库注解）；
swagger与shiro的协同测试；
5.把前后端连起来（写的时候练习一下前后端分离，前端用SublimeText3）；
6.完成监理的需求（先把PC端的做起来，再跟进手机的需求，要快）；
7.读spring源码，写demo；
10.学习老侯，一定要注意在做的过程中积累各种工程经验：前后端分离、单元测试、安全测试、code review、充分比较各种技术
11.玩玩github的开源代码和blog，看看新技术和有没有赚钱的机会
12.maven构建打包
13.加测试例、加业务逻辑工程
搭建环境搞半天，启动MYSQL、判断、连接可用又搞半天，这里都是可以用DevOps解决的领域
注意代码规范
手机上传的时候怎么用消息队列？
github能完成DevOps中的多少工作量？
写数据库升级脚本要注意啥？怎么写？搜一下
要有把service独立出来，maven多module打包的能力
搭架子要把阿里那些最佳实践都包含进来
