【目标：做成一个完整的脚手架，中间件和存储层也要能快速配好】
【我的后端和脚手架没有突破，所以一直没办法接项目】

passwordservice的写法写通
【结合这个处理空指针】service层抛异常，异常会被直接透传给前端，格式是（看看用浏览器是什么样的表现，测一下）：
{"timestamp":"XXX", "status":XXX, "error":"XXX", "message":"XXX", "trace":"XXX", "path":"XXX"}
注解式shiro的原理以及配置
把登录那几个页面的跳转配置好

mybatis开启日志：
https://blog.csdn.net/leocolee/article/details/80398406
https://blog.csdn.net/lpw_cn/article/details/84779387
druid开启日志

1.ehcache配好，并且把ehcache版本的封账号写好测通，并且要能快速降级成没有cache的版本；
2.推测：我的HashedCredentialsMatcher应该能用bean，但是要和Realm指定好顺序
3.在一个项目中，怎么观察容器中和容器外的bean(结合JVM 调试器学习)？是尽可能多的把对象放入容器还是尽可能少？还是无所谓？
4.测试

周末：1.EasyUI；2.angular（工作上用到）；3.EasyUI使用angular版本；3.activiti工程配好
其实前后端已经连的差不多了，jwt只是可选。下一步：把Configuration那一套流程搞清楚、jwt、把EasyUI与静态模板的关系搞清楚
https://blog.csdn.net/qq_22771739/article/details/83687175
http://www.17sucai.com/pins/tag/14624.html
https://www.cnblogs.com/wyguo/p/3556049.html
在@Configuration里面打断点观察执行情况

咨询扣税的问题

再对比阿里巴巴手册看AddUserVo定义是否有问题
升级springboot 2.1.5后启动报错

Spring boot shiro session cache ecache redis 共存配置：https://www.jianshu.com/p/f304f77875ed
SpringBoot+Shiro+ehcache实现登录失败超次数锁定帐号：https://blog.csdn.net/qq_33229669/article/details/87945020
spring boot 使用spring cache 整合多级缓存(EhCache,Redis)：https://blog.csdn.net/zhaoyachao123/article/details/79657358
shiro-ehcache要求ehcache的版本是2.6.11，升版本怎么搞？


把有道笔记里面shiro的东西整理一下
JAVA安全框架Apache Shiro浅析：https://www.jianshu.com/p/dc5c49f5101e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation

activiti的id问题继续研究

VS code中的Node.js教程：https://blog.csdn.net/qq_40420795/article/details/81909392

停一下，把现有功能充分测试：
    1.所有配置文件相关功能；
    2.所有controller及shiro相关功能
    3.测试搭起来
    4.缓存【注册、登录好了后测试】
    5.然后再用RetryLimitHashedCredentialsMatcher的测试
    6.测试缓存配置，测试权限缓存
    7.把下方Spring和Java Enterprise菜单用起来
    8.再次分析这种写法能跳转页面的原理：return "auth/login";，还有HttpServletRequest作为参数的原理
需要2轮测试用例：
    1.单个功能的测试；2.随着理解的深入和逐渐使用的功能的复杂，需要保证原有的用例可以用，并且能测试复杂功能。
    shiro代码首先还是按照调试流程来学习

    基本功能测通后，把我的ShiroConfig里面的bean用@Autowired或者@Resource来初始化。不要用函数那种方法【测试对比两种方式】

    我的互联网项目每周要上线一个小功能

把mybatis的日志配起来【还是依赖于添加用户等操作】
【控制台输出mybatis日志】

Spring Boot Junit单元测试【把@WebAppConfiguration注解和注解原理搞懂，尽量多理解一点】：
https://www.cnblogs.com/jpfss/p/8422770.html
https://www.jianshu.com/p/afb04b925db3
Junit测试controller：
https://blog.csdn.net/xiaolyuh123/article/details/73281522/
https://blog.csdn.net/sinat_32481295/article/details/79764749

【本周】
0.addUser写好；
1.单元测试；
2.ajax写好（先用jQuery的）
心得：realm里面的SimpleAuthenticationInfo代表的是数据库保存的数据的封装，包含加密后的密码。而用户输入的原始密码被封装成UsernamePasswordToken，
然后在login的过程中根据定义的RetryLimitHashedCredentialsMatcher进行加密（再看一下流程）。看一下SimpleAuthenticationInfo几个构造函数的区别

shiro-spring
IDEA diagram里面有一项叫Spring beans Dependencies，这正是我需要的。eclipse里面有没有spring的框架专用插件？

1.把注册、登录写通；10.把ResultUtils用起来【前端ajax先配好】；5.把添加用户、角色等基本功能写好（Service、Controller）
2.前端form、ajax单独写好，再考虑整合的问题；
3.把前后端分离配好（ajax、前后端数据传递格式）【看一眼chime代码】；
4.再看RBAC 5个表怎么跟shiro对应起来？【自定义Real对应的表（看JdbcRealm）】
6.写好添加用户、登陆的接口，权限相关的尽量往前写【把2017年写的几个controller整合掉，把现有功能都测一下】
7.把设置权限放到数据库，debug观察那段代码的执行顺序（要能debug bean的加载顺序，至关重要），然后通过代码看；4.继续调试剩下的springboot+shiro
8.【所有配置文件是怎么读取的】
9.必备功能：分享、OAuth2、activiti

前后端分离的深入研究：
https://blog.csdn.net/qq_41849709/article/details/83411137【Ajax写法】
https://www.cnblogs.com/lvdabao/p/4204858.html
https://www.jianshu.com/p/b76de38fbb4a
https://www.jianshu.com/p/9e71429edbf6
https://blog.csdn.net/li_gameover/article/details/79917473
https://blog.csdn.net/u014445339/article/details/74301489

shiro超时相关的问题：
https://www.cnblogs.com/shihaiming/p/6042788.html
https://www.cnblogs.com/cocoat/articles/5226733.html
https://blog.csdn.net/ahou2468/article/details/78126607
https://www.jianshu.com/p/2c4a27874624
https://blog.csdn.net/zsg88/article/details/69488728
https://blog.csdn.net/jrn1012/article/details/70396502

【确认这个过程】在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，
框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。
mybati事务管理：
https://www.cnblogs.com/geningchao/p/6628452.html
https://www.jianshu.com/p/f3017479bd30
https://www.jianshu.com/p/f0662c10ce4f?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
https://blog.csdn.net/qq_36688143/article/details/82769423
Spring中的@Transactional(rollbackFor = Exception.class)属性详解：https://www.cnblogs.com/clwydjgs/p/9317849.html
我没加的时候阿里巴巴给了提示：需要在Transactional注解指定rollbackFor或者在方法中显示的rollback：
https://blog.csdn.net/ostar_liang/article/details/80770837
https://blog.csdn.net/qq_16605855/article/details/79653282
@Transactional注解的实现

//@RequiresRoles("role1")
//@RequiresPermissions("+user1+100")
再看ModelAndView的用法，和return "anth/login";这种比较一下

shiro源码分析，搞透

shiro实现动态权限管理：https://blog.csdn.net/hxm_code/article/details/50083843
shiro学习之LifecycleBeanPostProcessor的作用：https://blog.csdn.net/hxm_code/article/details/78697305
再看一下shiro相关的包一共有多少个：shiro-quartz、shiro-cas、shiro-guice、shiro-spring、shiro-web、shiro-core
密码加密、RememberMe、授予身份、单点登陆、DelegatingFilterProxy、注解相关的

细说shiro系列：https://www.cnblogs.com/nuccch/p/6775855.html【调试代码观察认证、授权的缓存状态】
Spring中的Aware【shiro里面也有CacheManagerAware，再分析一下】：
https://www.cnblogs.com/Jarris/p/10125980.html
https://blog.csdn.net/bailinbbc/article/details/76446594
https://blog.csdn.net/jinhaijing/article/details/83933573
EnvironmentCapable：
https://blog.csdn.net/weixin_39165515/article/details/76976685

spring-framework-reference/pdf(5.1.2.RELEASE)：https://docs.spring.io/spring/docs/5.1.2.RELEASE/spring-framework-reference/pdf/

把gitk显示乱码的问题解决
activiti生产的图片如何做缓存？

关于缓存：
【学习别人分析源码的方式。这个里面提到的本地缓存，能否结合弱引用那些东西看看】https://www.cnblogs.com/nuccch/p/8044226.html
1.缓存的使用、更新等细节问题；2.如果不使用shiro提供的Cache接口呢？换句话说，shiro的Cache接口在集成方面有什么优势？
把开涛后面有几章看一下，把有道里面的内容排查一下
shiro认证信息和授权信息的缓存【authenticationCachingEnabled，据说认证默认关闭，授权默认打开】【写入是在哪里进行的？】：https://blog.csdn.net/csujiangyu/article/details/49076531
不懂的地方可以多借助调试来观察，把spring的调试配起来

加密：哪怕用md5实现，后面再优化：https://blog.csdn.net/hxm_Code/article/details/50136173
CreadentialsMatcher和subject结合学习【有意识训练自己，才会有提升】
自定义Matcher：CredentialsMatcher只有doCredentialsMatch一个方法，因此自定义主要是重载这个方法
基于shiro框架实现自动登录(rememberMe)：https://www.jianshu.com/p/5b99c0ef6fb7

流程的理解：：当我们调用subject.login(token)的时候，首先这次身份认证会委托给Security Manager，而Security Manager又会委托给Authenticator，
接着Authenticator会把传过来的token再交给我们自己注入的Realm进行数据匹配从而完成整个认证。如果不太了解这个流程建议再仔细读一下官方提供的
Authentication说明文档：http://shiro.apache.org/authentication.html

Spring @ControllerAdvice与@RestControllerAdvice注解：
https://blog.csdn.net/fang_qiming/article/details/79907979
https://baijiahao.baidu.com/s?id=1613899474131869768&wfr=spider&for=pc

Spring mvc 之 AbstractHttpMessageConverter 自定义Http消息转化器：https://blog.csdn.net/fang_qiming/article/details/79927708

各种token，分别用于什么场景？
jwt工程里面用的token不一样，注意对比一下，并分析源代码。jwt token过期重发机制搞清楚
看一下UsernamePasswordToken实现的2个接口里面都有什么方法

看一下ByteSource这个接口。心得：分析源码的时候多注意观察接口

为什么有的Bean带参数有的又直接在函数内部里面弄对象？
SimpleAuthenticationInfo实现了MergableAuthenticationInfo, SaltedAuthenticationInfo

activiti定时任务【smartplan能否用这个搞？】：
https://www.cnblogs.com/dengjiahai/p/6942310.html
https://blog.csdn.net/sarck3/article/details/11781097

spring获取加载的所有bean及bean的加载过程：
https://blog.csdn.net/long243416336/article/details/80590032
https://blog.csdn.net/dc282614966/article/details/81480002
https://www.cnblogs.com/leftthen/p/5440107.html
https://www.jianshu.com/p/210115d5a4aa
在Spring容器中，我们手工注解@Bean 将被优先加载，框架不会重新实例化其他的 PlatformTransactionManager 实现类

Subject的方法好好看一下。包括login方法【直接调试跟踪代码】
shiro与缓存再看一下，开涛的书要看透（虽然有些章节写的并不好）
KickoutSessionControlFilter extends AccessControlFilter
如：当前类路径下有 Mybatis 这个 JAR 包，MybatisAutoConfiguration 注解就能根据相关参数来配置 Mybatis 的各个 Spring Bean

ApplicationContext也能autowire？https://www.cnblogs.com/trekxu/p/9094860.html
@bean和@component：
https://blog.csdn.net/u011263417/article/details/79781686
https://blog.csdn.net/ztx114/article/details/82665544
http://www.cnblogs.com/shamo89/p/8051350.html

ng s
我们的代码是不是用了typescript？http://www.cnblogs.com/xuanmanstein/p/9866647.html

ng-zorro也是前端可视化技术，跟EasyUI等对比一下

如何知道引入的一个组件要加载哪些bean？怎样看定义了哪些bean？例如mybatis。当然idea下面的spring标签有了名字可以查询。
@Bean的参数bean都已经生成了，再用我的demo工程再确认一下
result：先写通，再优

把@Configuration和@Bean注入DataSource、shiro-spring搞懂，基本就能穿透这个项目了

.DelegatingFilterProxy是怎么初始化的？
ShiroFilterFactoryBean implements FactoryBean, BeanPostProcessor
如果大家有看过Mybatis的SessionFactoryBean和Activiti初始化引擎的ProcessEngineFactoryBean两个类就应该了解FactoryBean的具体使用：
https://www.cnblogs.com/quanyongan/p/4133724.html
ShiroFilterFactoryBean是怎么加载和替换默认的的？【看一下这个bean怎么被使用的】【如果可以看容器里面的对象，可以进去之前看看，之后再看看】
shiroFilterFactoryBean：
https://blog.csdn.net/u012345283/article/details/44199791
https://blog.csdn.net/lqzkcx3/article/details/78776555
FactoryBean：
http://www.cnblogs.com/aspirant/p/9082858.html
https://blog.csdn.net/baidu_19473529/article/details/80558996
https://blog.51cto.com/4247649/2118353
https://www.jianshu.com/p/6f0a59623090
Spring的后置处理器BeanPostProcessor：
https://www.cnblogs.com/libra0920/p/6118157.html
https://www.cnblogs.com/sishang/p/6576665.html
https://segmentfault.com/a/1190000015830477
https://uule.iteye.com/blog/2094549

mybatis-spring：
sqlsessionfactory 注入datasource
为啥有了@Mapper注解后就不需要@Repository了
以前只知道双向绑定这个名字，现在可以思考原理了

spring AOP再搞一遍
尝试使用rest接口，可以更简洁同时也能暴露更少信息

sessionListener：https://www.cnblogs.com/qsymg/p/9836122.html
在搞jwt之前，应该把会话管理那一章先看明白
boolean isServletContainerSessions();//是否使用 Servlet 容器的会话。如果使用，是怎么样的？
ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话
在 Servlet 容器中，默认使用 JSESSIONID Cookie 维护会话

Springboot集成Shiro：里面有权限缓存、RememberMe等多个功能（可以先搞通一次再搞jwt）：https://www.cnblogs.com/kibana/p/8953566.html

用配置文件配DataSource【还有参数问题，怎么传入】，这一块还是没有搞明白（@Configuration、properties文件、xml三种配置方式的代码分析）
能看到logback启动打的日志吗？我看公司项目有

lucene相关的再看一下

把我的activiti工程上传。我的activiti demo为啥没启动起来？先检查一下
Error creating bean with name 'requestMappingHandlerMapping'：这种错误可能是少了包

Postman mockserver详细教程：https://blog.csdn.net/testdeveloper/article/details/80559538

CommandLineRunner（源码）：
https://blog.csdn.net/qq_26323323/article/details/80856973
https://www.jianshu.com/p/5d4ffe267596
https://www.cnblogs.com/chenpi/p/9696310.html

看mybatis实现PlatformTransactionManager这个接口的代码在哪个包里面
mybatis的 useGeneratedKeys 是怎样实现的？ https://blog.csdn.net/tt50335971/article/details/53487260

spring-boot-starter-web
要有一种引领的意识，赚钱在其后，否则永远无法成事

假如要用ehcache又没人实现CacheManager接口的话，正确的方式就是自己实现了

@Service("activityService")注解参数有帮助吗？

百度云20元每年弄一个（RabbitMQ用windows完，用于redis、zookeeper、zuul）：https://cloud.baidu.com/campaign/CreateFuture-2019/index.html?track=cp:dsp|pf:pc|pp:chui-bokeyuan-huodong-19kuanghuanji-rumenjianzhanyunxuji-C1-190515|pu:C1-tupian|ci:2019khj|kw:2121019#4
29元的服务器：https://www.yisu.com/hk/huodong.html?gclid=EAIaIQobChMI_OyGjcmc4gIV1m6LCh1NxgdsEAEYASAAEgLCHfD_BwE

周日：
静态页面的目录放开：http://localhost:8080/static/index.html
@RequestBody用起来
1.加jwt支持（ShiroJwtConfig、CustomJwtRealm，把里面的代码逐行看懂），密码过期及“记住我”的策略，密码输错次数限制；
https://blog.csdn.net/qq_32786139/article/details/82658197
https://blog.csdn.net/qq_32786139/article/details/82658197
【把jwt和前后端分离配好后，完整测一波】
registry.addResourceHandler("/static/**").addResourceLocations("classpath:/static/");：https://my.oschina.net/silenceyawen/blog/1609603

spring和Java Enterprise标签可以看了
activiti从6.0上面的版本开始搞
【观察】配置了数据源和activiti后，启动项目，activiti 的各个服务组件就已经被加入到spring容器中了
run菜单里的Endpoints

jwt是否放到common里面并且便于后面抽包？
观察日志里面对中间件的日志打的是不是全，把这一块彻底搞明白

泛型的问号适合放在返回值里面吗？Response<?>

ts里面的Observable<T> implements Subscribable<T>。涉及到RxJS的概念

网上的captcha库：
Spring Boot Starter SimpleCaptcha。Patchca、Kaptcha，jcaptcha太老了
直接注入一个passwordService来加密密码

前端开发了解：
1.VSCode、node、angular、typescript：
https://www.cnblogs.com/clwydjgs/p/10078065.html
https://www.cnblogs.com/parry/p/vscode_top_ten_plugins.html
下载：https://code.visualstudio.com/docs/?dv=win64user
python也可以用VSCode、sublimeText来搞
2.sublimeText、node、angular、typescript；
对比VSCode和sublimeText

shiro的下面两大功能：
Concurrency：shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；
<V> V execute(Callable<V> callable) throws ExecutionException;
void execute(Runnable runnable);
<V> Callable<V> associateWith(Callable<V> callable);
Runnable associateWith(Runnable runnable);
Testing：提供测试支持；

在spring中需要开启权限注解与aop:
<!-- AOP式方法级权限检查  -->
<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
      depends-on="lifecycleBeanPostProcessor"/>
<!-- 启用shrio授权注解拦截方式 -->
<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager"/>
</bean>
使用DefaultAdvisorAutoProxyCreator实现spring的自动代理
【原理是啥？】DefaultAdvisorAutoProxyCreator，Spring的一个bean，由Advisor决定对哪些类的方法进行AOP代理

把shiro官方教程也看一遍，思考：开涛到底是根据那个写的还是自己读代码理解后写的教程
spring transaction源码分析--事务架构：https://www.cnblogs.com/davidwang456/p/4309038.html

controller方法的执行：把抛出异常、HttpServletRequest/HttpServletResponse两个问题解决掉。看一下HttpMessageConverter在流程中的哪个位置起作用
HttpServletResponseWrapper
@RequestBody、@RequestParam、MultipartFile等是怎么封装的，还有@CookieValue、@ExceptionHandler等
一网打尽 @ExceptionHandler、HandlerExceptionResolver、@controlleradvice 三兄弟：https://www.xttblog.com/?p=3586
@ControllerAdvice的实现：https://blog.csdn.net/wangpeng322/article/details/81912353
ContentNegotiatingViewResolver，内容协商规图解析器，它迓是规图解析器，只是它支
持根据请求信息将同一模型数据以丌同的规图方式展示（如json、xml、html等），RESTful
架构风格中很重要的概念（同一资源，多种表现形式）
@RequestPart：提供对“multipart/form-data”请求的全面支持，支持Servlet 3.0文件
上传（javax.servlet.http.Part）、支持内容的HttpMessageConverter（即根据请求头的
Content-Type，来判断内容匙数据是什么类型，如 JSON、XML，能自劢转换为命令对象），
比@RequestParam更强大（只能对请求参数数据绊定，key-alue格式），而@RequestPart
支持如JSON、XML内容匙数据的绊定；详见本章的第×××节；

Flash 属性 和 RedirectAttribute：通过FlashMap存储一个请求的输出，当迕入另一个
请求时作为该请求的输入，典型场景如重定向（POST-REDIRECT-GET模式，1、POST时
将下一次需要的数据放在FlashMap；2、重定向；3、通过GET讵问重定向的地址，此时
FlashMap会把1放到 FlashMap的数据取出放到请求中，幵从FlashMap中删除；从而
支持在两次请求乊间保存数据幵防止了重复表单提交）。
Spring Web MVC提供FlashMapManager用亍管理FlashMap，默讣使用
SessionFlashMapManager，即数据默讣存储在session中

DispatcherServlet主要用作职责调度工作，本身主要用亍控制流程，主要职责如下：
1、文件上传解析，如果请求类型是multipart将通过MultipartResolver迕行文件上传解析；
2、通过HandlerMapping，将请求映射到处理器（迒回一个HandlerExecutionChain，
它包括一个处理器、多个HandlerInterceptor拦截器）；
3、通过HandlerAdapter支持多种类型的处理器(HandlerExecutionChain 中的处理器)；
4、通过ViewResolver解析逻辑规图名到具体规图实现；
5、本地化解析；
6、渲染具体的规图等；
7、如果执行过程中遇到异常将交给HandlerExceptionResolver 来解析

springboot使用shiro和pac4j-cas 实现cas单点登录：https://blog.csdn.net/hsp1990/article/details/83621817

eureka.instance.appname 与 spring.application.name 的区别：https://blog.csdn.net/ezreal_king/article/details/72930401/
springboot新特性

动态修改日志级别
通过org.springframework.boot.logging.LoggingSystem提供的api即可

shiro-ehcache的代码是可以读完的，从这个入手
不同注解的扫描顺序？是否先扫@configuration？
loggingSystem.setLogLevel(null, LogLevel.DEBUG);

如，默认时是info模式，未修改时，debug模式是不会输出的。

RxJava、RxJS

框架搭好后，shiro需要学习第二遍。springmvc+shiro彻底搞清楚、知道怎么调试后，会是一个大的突破
不能够快速调试，在新工作中也会遇到困难
Spring源码解析——如何阅读源码：
https://www.cnblogs.com/xing901022/p/4178963.html
https://blog.csdn.net/qq_27409289/article/details/73696207
https://baijiahao.baidu.com/s?id=1609595005078804580&wfr=spider&for=pc
实现IoC容器：
https://www.cnblogs.com/dooor/p/5346333.html
https://chenguanwei2008.iteye.com/blog/361558
https://cloud.tencent.com/developer/article/1422428
https://www.jianshu.com/p/d6991030d84d?jdyscene=chat
https://www.jianshu.com/p/22863e6c1210
https://blog.csdn.net/u010994169/article/details/71169986

EhCacheManager已经配好，整个shiro里cache的使用？
Ehcache看到这里了：https://blog.csdn.net/qq_32786139/article/details/82658197
Ehcache【要能最接近生产环境测试】【先得搞清楚shiro自己的cache】:
https://www.jianshu.com/p/05f3ede0b389
https://blog.csdn.net/qq_28988969/article/details/78210873
https://blog.csdn.net/qq_28143647/article/details/79789368
开涛的例子中，为啥要使用单例的缓存？
【这个文章有注入缓存管理器的用法】
https://blog.csdn.net/qq_32786139/article/details/82658197
含清楚缓存的写法：https://www.cnblogs.com/yinfengjiujian/p/9083361.html
使用@Cacheable把数据存进缓存：切换为redis后可以这样搞吗？了解这个注解的细节
Spring定义了CacheManager和Cache接口统一不同的缓存技术。其中CacheManager是Spring提供的各种缓存技术的抽象接口【要理解这种设计方式，再思考一下】
ehcache3、javax.cache API（JSR-107）需要搞清楚
Shiro缓存使用Redis、Ehcache、自带的MpCache实现的三种方式实例：https://www.cnblogs.com/zfding/p/8536480.html
对shiro-ehcache包的理解：这个包实现了shiro里面缓存相关的接口，同时带有ehcache的功能。类似的实现还有shiro-redis。
shiro 刷新认证以及权限缓存（略坑）：https://blog.csdn.net/qq_37959142/article/details/80020899
解决shiro-redis集成序列化的问题：https://blog.csdn.net/Nightliar/article/details/81282164


Spring解析，加载及实例化Bean的顺序（零配置）：https://blog.csdn.net/qq_27529917/article/details/79329809
吐血整理 20 道 Spring Boot 面试题：https://www.jianshu.com/p/63ad69c480fe/
看代码：sessionValidationScheduler ： 会话验证调度器，sessionManager 默认就是使用 ExecutorServiceSessionValidationScheduler，其使用 JDK 的 ScheduledExecutorService 进行定 期调度并验证会话是否过期

要敏捷
有没有jwt的两套应该是可以快速切换的，做成通用的
全局异常处理做进来
富文本编辑器、activiti做进来
websocket用起来

activiti demo网站试用：
http://www.jq22.com/yanshi4014
http://www.jq22.com/jquery-info4014
这种比较专业的，可以在下面评论，把别人引到自己的网站，很容易来流量和转换成下载赚钱。还可以通过咨询服务赚钱

Spring：利用ApplicationContextAware装配Bean：
https://www.cnblogs.com/tflowingcloud/p/8443010.html
https://www.jianshu.com/p/22e7fba07ce7
https://blog.csdn.net/mdq11111/article/details/79050280
https://blog.csdn.net/bailinbbc/article/details/76446594

这种写法没有autowire，思考为什么可以成功：https://blog.csdn.net/pingweicheng/article/details/80593258

看看阿里云
搞点日本的文具过来卖

·shiro-spring 及 spring-context【从源码分析】

Spring Boot Shiro权限管理--扩展FormAuthenticationFilter实现动态改变LoginUrl：
https://blog.csdn.net/u010361786/article/details/80138201

FactoryBean：通过使用FactoryBean，我们可以得到不同类型的对象实例。这也就是我们在AOP中通过设置calss为ProxyFactoryBean可以返回不同类型的业务对象的原理：https://www.cnblogs.com/quanyongan/p/4133724.html
mysql的geometry扩展：
https://www.linuxidc.com/Linux/2018-09/154191.htm
https://www.jianshu.com/p/d6bf587389f1
@Bean注解与applicationContext.getBean的联系区别

DataSource的configuration，包括DataSource和DataSourceTransactionManager两个Bean
mybatis plus里面 A extends DataEntity<A>的写法

通过HttpServletResponseWrapper修改response输出流：
https://www.cnblogs.com/linma/p/7845124.html
https://www.cnblogs.com/gexiaoshan/p/6429888.html

EasyUI【比较EasyUI和bootstrap等不同的技术】：
2.前后端连起来（包括shiro）：springboot+EasyUI+Shiro；
3.用Angular或者vue版的前端；
https://www.cnblogs.com/jingmoxukong/p/10239821.html
http://www.jeasyui.cn/download.html
美的让人窒息的后台模板：http://www.jq22.com/jquery-info1583
有springboot+vue+shiro的，那angular的呢？自己实现一下

简单快速的用SpringBoot访问静态资源（图片、html）【用thymeleaf的方式】：https://blog.csdn.net/qq_36481052/article/details/79075214
Thymeleaf 模板引擎简介 与 Spring Boot 整合入门：https://blog.csdn.net/wangmx1993328/article/details/81054474
用yml、properties文件配置静态页面（这种方式更优雅）：https://blog.csdn.net/Mr_yangzc/article/details/80805035

@EnableAsync

shiro需要搞清楚的流程：
1.RememberMe；
2.CredentialsMatcher使用流程
RunAs理解：如果涉及到工作流之类的，runAs在具体代码方面会不会有啥问题？代码的通用性能否保证？

redirectAttributes.addFlashAttribute("msg", "操作成功");

最初配通springboot+shiro的文档：
https://blog.csdn.net/weixin_38132621/article/details/80216056
springboot+shiro+jwt：
https://blog.csdn.net/u013615903/article/details/78781166
https://blog.csdn.net/u012149181/article/details/79445758
https://www.jianshu.com/p/0b1131be7ace【这个里面还用到了FilterRegistrationBean、Authenticator、SessionStorageEvaluator】
SessionStorageEvaluator【代码其实很简单，看代码】：
https://www.jianshu.com/p/3b48ea215990
https://blog.csdn.net/iteye_10899/article/details/82675611
session共享采用shiro-redis的方案（修改Session获取方式）：
https://cloud.tencent.com/developer/article/1342794
https://blog.csdn.net/haoyuyang/article/details/80036989
https://blog.csdn.net/u013615903/article/details/78781166
springboot+shiro实现登陆过滤、权限认证、shiro密码加密、ehcache缓存（附demo项目）：
https://blog.csdn.net/qq_32786139/article/details/82658197
shiro和springboot流程的完全理解是我现在生产力提升最大的障碍，相比之下多线程那些反而没那么难了，当然并发也还需要相当大的精力

mybatis配置（除了模板以外怎么知道还能加哪些标签？）【generator和plus功能有重复？】：
1.搞清楚mybatis加载时对application.properties（或者yml文件）和mybatis-config.xml的读取流程
2.mybatisPlus需要看吗
3.MyBatis 配置文件 用户密码加密存储：
https://blog.csdn.net/qq_24241631/article/details/80294144
http://www.imooc.com/article/285087
4.mybatis三剑客：

MyBatis Generator：
http://www.mybatis.org/generator/
https://www.jianshu.com/p/e09d2370b796
https://www.cnblogs.com/zcy_soft/p/3357980.html
5.flyway
6.druid

logback 配置详解（还需要继续搞）：
https://www.jianshu.com/p/1ded57f6c4e3?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
slf4j及使用@Slf4j注解写日志继续研究【怎么确定该打的都打出来了，逐个确认每个jar组件怎么打日志】：
https://projectlombok.org/api/lombok/extern/slf4j/Slf4j.html
http://www.importnew.com/28494.html
https://blog.csdn.net/duguxiaobiao/article/details/78988409
分析启动日志（能否从开涛的教程分析？），分析springboot启动过程
是否有必要把error单独打印到单独的文件？可能需要借助过滤器：https://blog.csdn.net/zzzgd_666/article/details/80458444
从控制台给logger传参数【部署】
logger和root：https://www.cnblogs.com/muhezi/p/4503934.html
日志：看看有哪些字段可以选（确保线程相关的一定不能掉，还有请求id等）
logback Filter 过滤器：
https://blog.csdn.net/ryo1060732496/article/details/84349835
https://blog.csdn.net/dyc87112/article/details/84349299
mySql---logback日志写入数据库(mysql)配置【appender原理】：https://www.cnblogs.com/chihirotan/p/6185547.html

在activiti这种抽象程度比较高的中间件里面，调试分析代码逻辑的时候数据库日志的作用就体现出来了。控制台调试最好配置打印出来

swagger
1.自己造session测通，把单元测试完善【我现在不确认dao层有些参数是否能跑通】；
2.把swagger-ui.html从权限里面放开【尚未成功】

周四：
加mybatis配置（要确认加载了，跟踪加载流程）、logback配置、druid配置
整理一下utils出来，例如uuid。如果appache common有就更好
ObjectMapper也autowire，这样有没有问题？

跨域的配置加上【要测试】
用我的batis目录的代码来建立dao层测试【继续搞mybatis代码分析】；
2.DAO层100%单元测试覆盖【先把单元测试搭起来，用mvn命令跑起来，CI、DevOps一点点往前推进】：https://www.cnblogs.com/lxnlxn/p/5996707.html
5.看前后端合并、分离的部署（先搞合并的）
6.整合并删除我的financial项目
6.加@Configuration注解；
7.websocket继续学习，写几个demo（比较这个里面的session）：
https://www.cnblogs.com/strugglion/p/10021173.html
https://blog.csdn.net/moshowgame/article/details/80275084
要能快速验证我的哪些方法没有被权限覆盖到，必须要做到这一点【尝试用反射控制】
再加上缓存、ES、RabbitMQ，一个系统雏形不就有了嘛？
重新封装返回值【网上看别人的规范】前后端接口规范
yml和properties去掉一个：https://www.bejson.com/devtools/properties2yaml/

maven跑test搞清楚（为啥放开2个注释会有报错）
@RunWith(SpringRunner.class)
@SpringBootTest

@RunWith(SpringJUnit4ClassRunner.class) // SpringJUnit支持，由此引入Spring-Test框架支持！
@SpringApplicationConfiguration(classes = SpringBootSampleApplication.class) // 指定我们SpringBoot工程的Application启动类
@WebAppConfiguration // 由于是Web项目，Junit需要模拟ServletContext，因此我们需要给我们的测试类加上@WebAppConfiguration
SpringRunner is an alias for the SpringJUnit4ClassRunner.


我现在的demo还有些问题：1.有些代码没有放入service里面，controller直接调用的dao；
timestamp的使用还要精进，例如比较大小
再思考一下上次、下载原理，springmvc需要精进
项目启动时数据库脚本自动执行，这个再思考一下
教程看到：http://wiki.jikexueyuan.com/project/shiro/authentication.html
写好数据库读取及登录模块【先写登录，再写权限控制，权限控制写通一个就先放开，最后再补】（包括QQ、微信登录）
0.比较并思考为啥有些文件最初没有传上github，被过滤了？；http://www.cnblogs.com/leesf456/p/4733958.html
2.进一步搞懂配置文件的作用，尤其是applicationcontext；
3.找到合适的模版（知乎上问，bootstrap的，最新的）；
4.完整学习一次springmvc教程（准备活动，找到兼职美工）；
2.mybatis：（再思考chime的数据库注解）；
5.把前后端连起来（写的时候练习一下前后端分离，前端用SublimeText3）；
6.完成监理的需求（先把PC端的做起来，再跟进手机的需求，要快）；
7.读spring源码，写demo；
10.学习老侯，一定要注意在做的过程中积累各种工程经验：前后端分离、单元测试、安全测试、code review、充分比较各种技术
11.玩玩github的开源代码和blog
12.mybatis和spring的测试必须要搞的非常熟
13.加测试例、加业务逻辑工程
注意代码规范
手机上传的时候怎么用消息队列？
github能完成DevOps中的多少工作量？
写数据库升级脚本要注意啥？怎么写？搜一下
要有把service独立出来，maven多module打包的能力
搭架子要把阿里那些最佳实践都包含进来
OAuth2要做好
DefaultFilter 枚举类原理值得仔细分析

对比shiro的SecureRandomNumberGenerator与JDK的

关于TransactionAwareDataSourceProxy：https://summerhome.iteye.com/blog/2383585

SpringBoot源码研究之Actuator：https://blog.csdn.net/lqzkcx3/article/details/89737579

前后端分离后续：spring跨域配置、jwt配置、启动多个服务，或者用shiro-redis的方式
以前的架构水平还是不行，现在深入搭框架后，对业务逻辑的兴趣没有以前那么大了

UUID 和 GUID是有区别的：
https://blog.csdn.net/xf_zhen/article/details/82260567
https://www.cnblogs.com/powerwu/articles/4433450.html

项目的包划分：controller、service、manager、dao、pojo(model、vo等)、config、filter、utils、shiro、websocket，
还可以有event、handler、entity、exception、common、global等

Spring Boot Admin（与actuator关系？）
Spring boot 2.0 Actuator 的健康检查（默认有15项，都打开看一下：http://localhost:8080/actuator/beans）：
https://blog.csdn.net/voilet_bin/article/details/83028698
https://www.jianshu.com/p/1aadc4c85f51
mybatis pagehelper【需要搞清楚原理】：
https://blog.csdn.net/justry_deng/article/details/82933941
https://pagehelper.github.io/
https://www.cnblogs.com/kangoroo/p/7998433.html
【分析原理】swagger是一个流行的API开发框架，这个框架以“开放式API声明”（OpenAPI Specification，OAS）为基础，对整个API的开发周期都提供了相应的解决方案，是一个非常庞大的项目（包括设计、编码和测试，几乎支持所有语言）：https://blog.csdn.net/moshowgame/article/details/80265480

ConfigClusterResolver - Resolving eureka endpoints via configuration
HttpServletrequest 与HttpServletResponse总结：https://www.cnblogs.com/liuyandeng/p/5336649.html
SpringMVC是怎么封装HttpServletRequest的？数据是怎么封装的？controller是怎么被调用的？
@requestbody和httpServletRequest区别：https://www.oschina.net/question/2491333_2283678
public interface HttpServletRequest extends ServletRequest {
    String BASIC_AUTH = "BASIC";
    String FORM_AUTH = "FORM";
    String CLIENT_CERT_AUTH = "CLIENT_CERT";
    String DIGEST_AUTH = "DIGEST";
将我的项目中HttpServletRequest都过一遍，都干掉。另外：参数中既有request又有response的怎么理解？


关于RBAC权限控制：
1.我只实现了最简单的，后续需要加字段，例如用户会有头像、名字、手机号、住址等字段；
2.【重要】学习别人的permission表：https://blog.csdn.net/JesseCary/article/details/54023049。shiro里面的permission也要再好好学习一遍；
3.当年微软的那一套表好像很复杂？有空再找一下；
4.复杂应用可能不止这5个表，例如还需要分用户组和角色继承关系：https://blog.csdn.net/yangxuesong5555/article/details/79417210
这5个表怎么跟shiro对应起来？

SpringBoot中application参数中文详解：https://blog.csdn.net/qq_25667339/article/details/79155805

postman：form-data、x-www-form-urlencoded、raw、binary分别对应的前端传递方式？【协议层面的东西】
https://blog.csdn.net/xybelieve1990/article/details/81111786

如果不想装mysql可以用SQLite：https://www.runoob.com/sqlite/sqlite-tutorial.html




