【目标：做成一个完整的脚手架，中间件和存储层也要能快速配好】
【我的后端和脚手架没有突破，所以一直没办法接项目】


用配置文件配DataSource，这一块还是没有搞明白（@Configuration、properties文件、xml三种配置方式的代码分析）
能看到logback启动打的日志吗？我看公司项目有

把我的activiti工程上传。我的activiti demo为啥没启动起来？先检查一下
Error creating bean with name 'requestMappingHandlerMapping'：这种错误可能是少了包

jwt token过期重发机制搞清楚

Springboot集成Shiro：里面有权限缓存、RememberMe等多个功能（可以先搞通一次再搞jwt）：https://www.cnblogs.com/kibana/p/8953566.html

postman：form-data、x-www-form-urlencoded、raw、binary分别对应的前端传递方式？【协议层面的东西】
https://blog.csdn.net/xybelieve1990/article/details/81111786
postman的mock server功能了解一下

CommandLineRunner（源码）：
https://blog.csdn.net/qq_26323323/article/details/80856973
https://www.jianshu.com/p/5d4ffe267596
https://www.cnblogs.com/chenpi/p/9696310.html

注意使用 Ctrl+空格 完成对象声明

spring-boot-starter-web

@Service("activityService")注解参数有帮助吗？

百度云20元每年弄一个（RabbitMQ用windows完，redis用百度玩）：https://cloud.baidu.com/campaign/CreateFuture-2019/index.html?track=cp:dsp|pf:pc|pp:chui-bokeyuan-huodong-19kuanghuanji-rumenjianzhanyunxuji-C1-190515|pu:C1-tupian|ci:2019khj|kw:2121019#4
29元的服务器：https://www.yisu.com/hk/huodong.html?gclid=EAIaIQobChMI_OyGjcmc4gIV1m6LCh1NxgdsEAEYASAAEgLCHfD_BwE

周日：
静态页面的目录放开：http://localhost:8080/static/index.html
@RequestBody用起来
1.加jwt支持（ShiroJwtConfig、CustomJwtRealm，把里面的代码逐行看懂），密码过期及“记住我”的策略，密码输错次数限制；
https://blog.csdn.net/qq_32786139/article/details/82658197
https://blog.csdn.net/qq_32786139/article/details/82658197
【把jwt和前后端分离配好后，完整测一波】
jwt工程里面用的token不一样，注意对比一下，并分析源代码
registry.addResourceHandler("/static/**").addResourceLocations("classpath:/static/");：https://my.oschina.net/silenceyawen/blog/1609603

EasyUI可以用起来了
spring和Java Enterprise标签可以看了
activiti从6.0上面的版本开始搞
【观察】配置了数据源和activiti后，启动项目，activiti 的各个服务组件就已经被加入到spring容器中了
run菜单里的Endpoints

controller方法的执行：把抛出异常、HttpServletRequest/HttpServletResponse两个问题解决掉。看一下HttpMessageConverter在流程中的哪个位置起作用
HttpServletResponseWrapper
@RequestBody、@RequestParam、MultipartFile等是怎么封装的，还有@CookieValue、@ExceptionHandler等
ContentNegotiatingViewResolver，内容协商规图解析器，它迓是规图解析器，只是它支
持根据请求信息将同一模型数据以丌同的规图方式展示（如json、xml、html等），RESTful
架构风格中很重要的概念（同一资源，多种表现形式）
@RequestPart：提供对“multipart/form-data”请求的全面支持，支持Servlet 3.0文件
上传（javax.servlet.http.Part）、支持内容的HttpMessageConverter（即根据请求头的
Content-Type，来判断内容匙数据是什么类型，如 JSON、XML，能自劢转换为命令对象），
比@RequestParam更强大（只能对请求参数数据绊定，key-alue格式），而@RequestPart
支持如JSON、XML内容匙数据的绊定；详见本章的第×××节；

Flash 属性 和 RedirectAttribute：通过FlashMap存储一个请求的输出，当迕入另一个
请求时作为该请求的输入，典型场景如重定向（POST-REDIRECT-GET模式，1、POST时
将下一次需要的数据放在FlashMap；2、重定向；3、通过GET讵问重定向的地址，此时
FlashMap会把1放到 FlashMap的数据取出放到请求中，幵从FlashMap中删除；从而
支持在两次请求乊间保存数据幵防止了重复表单提交）。
Spring Web MVC提供FlashMapManager用亍管理FlashMap，默讣使用
SessionFlashMapManager，即数据默讣存储在session中

DispatcherServlet主要用作职责调度工作，本身主要用亍控制流程，主要职责如下：
1、文件上传解析，如果请求类型是multipart将通过MultipartResolver迕行文件上传解析；
2、通过HandlerMapping，将请求映射到处理器（迒回一个HandlerExecutionChain，
它包括一个处理器、多个HandlerInterceptor拦截器）；
3、通过HandlerAdapter支持多种类型的处理器(HandlerExecutionChain 中的处理器)；
4、通过ViewResolver解析逻辑规图名到具体规图实现；
5、本地化解析；
6、渲染具体的规图等；
7、如果执行过程中遇到异常将交给HandlerExceptionResolver 来解析。

eureka.instance.appname 与 spring.application.name 的区别：https://blog.csdn.net/ezreal_king/article/details/72930401/

框架搭好后，shiro需要学习第二遍。springmvc+shiro彻底搞清楚、知道怎么调试后，会是一个大的突破
不能够快速调试，在新工作中也会遇到困难
Spring源码解析——如何阅读源码：
https://www.cnblogs.com/xing901022/p/4178963.html
https://blog.csdn.net/qq_27409289/article/details/73696207
https://baijiahao.baidu.com/s?id=1609595005078804580&wfr=spider&for=pc
实现IoC容器：
https://www.cnblogs.com/dooor/p/5346333.html
https://chenguanwei2008.iteye.com/blog/361558
https://cloud.tencent.com/developer/article/1422428
https://www.jianshu.com/p/d6991030d84d?jdyscene=chat
https://www.jianshu.com/p/22863e6c1210
https://blog.csdn.net/u010994169/article/details/71169986

整个shiro里cache的使用？
Ehcache看到这里了：https://blog.csdn.net/qq_32786139/article/details/82658197
Ehcache【要能最接近生产环境测试】【先得搞清楚shiro自己的cache】:
https://www.jianshu.com/p/05f3ede0b389
https://blog.csdn.net/qq_28988969/article/details/78210873
https://blog.csdn.net/qq_28143647/article/details/79789368
开涛的例子中，为啥要使用单例的缓存？
【这个文章有注入缓存管理器的用法】https://blog.csdn.net/qq_32786139/article/details/82658197
使用@Cacheable把数据存进缓存：切换为redis后可以这样搞吗？了解这个注解的细节
Spring定义了CacheManager和Cache接口统一不同的缓存技术。其中CacheManager是Spring提供的各种缓存技术的抽象接口【要理解这种设计方式，再思考一下】
ehcache3、javax.cache API（JSR-107）需要搞清楚
ShiroFilterFactoryBean是怎么加载和替换默认的的？【如果可以看容器里面的对象，可以进去之前看看，之后再看看】
【原理是啥？】DefaultAdvisorAutoProxyCreator，Spring的一个bean，由Advisor决定对哪些类的方法进行AOP代理
Spring解析，加载及实例化Bean的顺序（零配置）：https://blog.csdn.net/qq_27529917/article/details/79329809
吐血整理 20 道 Spring Boot 面试题：https://www.jianshu.com/p/63ad69c480fe/
Spring解析，加载及实例化Bean的顺序（零配置）：https://blog.csdn.net/qq_27529917/article/details/79329809

要敏捷
有没有jwt的两套应该是可以快速切换的，做成通用的
全局异常处理做进来
富文本编辑器、activiti做进来

这种写法没有autowire，思考为什么可以成功：https://blog.csdn.net/pingweicheng/article/details/80593258

2.把resultMap写好（code、msg、data），能否用现在公司里面ResultUtils的写法？；
3.前端ajax写好；
3.把前后端分离配好（spring配置、jwt配置，或者用shiro-redis的方式），前后端数据传递格式定好【看一眼chime代码】；
4.再看RBAC 5个表怎么跟shiro对应起来？
5.把添加用户、角色等基本功能写好（Service、Controller）
2.密码加密：HashedCredentialsMatcher
2.写好添加用户、登陆的接口，权限相关的尽量往前写【把2017年写的几个controller整合掉，把现有功能都测一下】
4.把设置权限放到数据库，debug观察那段代码的执行顺序（要能debug bean的加载顺序，至关重要），然后通过代码看；4.继续调试剩下的springboot+shiro
【所有配置文件是怎么读取的】

必备功能：分享、OAuth2
看看阿里云

shiroFilterFactoryBean：
https://blog.csdn.net/u012345283/article/details/44199791
https://blog.csdn.net/lqzkcx3/article/details/78776555
Spring Boot Shiro权限管理--扩展FormAuthenticationFilter实现动态改变LoginUrl：
https://blog.csdn.net/u010361786/article/details/80138201

FactoryBean：通过使用FactoryBean，我们可以得到不同类型的对象实例。这也就是我们在AOP中通过设置calss为ProxyFactoryBean可以返回不同类型的业务对象的原理：https://www.cnblogs.com/quanyongan/p/4133724.html
mysql的geometry扩展：
https://www.linuxidc.com/Linux/2018-09/154191.htm
https://www.jianshu.com/p/d6bf587389f1
@Bean注解与applicationContext.getBean的联系区别

DataSource的configuration，包括DataSource和DataSourceTransactionManager两个Bean

EasyUI：
1.单独jQuery版的前端跑起来【访问index.html或者""、"/"能成功】；
2.前后端连起来（包括shiro）：springboot+EasyUI+Shiro；
3.用Angular或者vue版的前端；
https://www.cnblogs.com/jingmoxukong/p/10239821.html
http://www.jeasyui.cn/download.html

简单快速的用SpringBoot访问静态资源（图片、html）【用thymeleaf的方式】：https://blog.csdn.net/qq_36481052/article/details/79075214
Thymeleaf 模板引擎简介 与 Spring Boot 整合入门：https://blog.csdn.net/wangmx1993328/article/details/81054474
用yml、properties文件配置静态页面（这种方式更优雅）：https://blog.csdn.net/Mr_yangzc/article/details/80805035

@EnableAsync

最初配通springboot+shiro的文档：
https://blog.csdn.net/weixin_38132621/article/details/80216056
springboot+shiro+jwt：
https://blog.csdn.net/u013615903/article/details/78781166
https://blog.csdn.net/u012149181/article/details/79445758
https://www.jianshu.com/p/0b1131be7ace
session共享采用shiro-redis的方案（修改Session获取方式）：
https://cloud.tencent.com/developer/article/1342794
https://blog.csdn.net/haoyuyang/article/details/80036989
https://blog.csdn.net/u013615903/article/details/78781166
springboot+shiro实现登陆过滤、权限认证、shiro密码加密、ehcache缓存（附demo项目）：
https://blog.csdn.net/qq_32786139/article/details/82658197
shiro和springboot流程的完全理解是我现在生产力提升最大的障碍，相比之下多线程那些反而没那么难了，当然并发也还需要相当大的精力

mybatis配置（除了模板以外怎么知道还能加哪些标签？）【generator和plus功能有重复？】：
1.搞清楚mybatis加载时对application.properties（或者yml文件）和mybatis-config.xml的读取流程
2.mybatisPlus需要看吗
3.MyBatis 配置文件 用户密码加密存储：
https://blog.csdn.net/qq_24241631/article/details/80294144
http://www.imooc.com/article/285087
4.mybatis三剑客：

MyBatis Generator：
http://www.mybatis.org/generator/
https://www.jianshu.com/p/e09d2370b796
https://www.cnblogs.com/zcy_soft/p/3357980.html
5.flyway
6.druid

logback 配置详解（还需要继续搞）：
https://www.jianshu.com/p/1ded57f6c4e3?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
slf4j及使用@Slf4j注解写日志继续研究【怎么确定该打的都打出来了，逐个确认每个jar组件怎么打日志】：
https://projectlombok.org/api/lombok/extern/slf4j/Slf4j.html
http://www.importnew.com/28494.html
https://blog.csdn.net/duguxiaobiao/article/details/78988409
分析启动日志（能否从开涛的教程分析？），分析springboot启动过程
是否有必要把error单独打印到单独的文件？可能需要借助过滤器：https://blog.csdn.net/zzzgd_666/article/details/80458444
从控制台给logger传参数【部署】
logger和root：https://www.cnblogs.com/muhezi/p/4503934.html
日志：看看有哪些字段可以选（确保线程相关的一定不能掉，还有请求id等）
logback Filter 过滤器：
https://blog.csdn.net/ryo1060732496/article/details/84349835
https://blog.csdn.net/dyc87112/article/details/84349299
mySql---logback日志写入数据库(mysql)配置【appender原理】：https://www.cnblogs.com/chihirotan/p/6185547.html

swagger
1.自己造session测通，把单元测试完善【我现在不确认dao层有些参数是否能跑通】；
2.把swagger-ui.html从权限里面放开【尚未成功】

周四：
加mybatis配置（要确认加载了，跟踪加载流程）、logback配置、druid配置
整理一下utils出来，例如uuid。如果appache common有就更好
ObjectMapper也autowire，这样有没有问题？

跨域的配置加上【要测试】
用我的batis目录的代码来建立dao层测试【继续搞mybatis代码分析】；
2.DAO层100%单元测试覆盖【先把单元测试搭起来，用mvn命令跑起来，CI、DevOps一点点往前推进】：https://www.cnblogs.com/lxnlxn/p/5996707.html
5.看前后端合并、分离的部署（先搞合并的）
6.整合并删除我的financial项目
6.加@Configuration注解；
7.websocket继续学习，写几个demo（比较这个里面的session）：
https://www.cnblogs.com/strugglion/p/10021173.html
https://blog.csdn.net/moshowgame/article/details/80275084
要能快速验证我的哪些方法没有被权限覆盖到，必须要做到这一点【尝试用反射控制】
再加上缓存、ES、RabbitMQ，一个系统雏形不就有了嘛？
重新封装返回值【网上看别人的规范】前后端接口规范
maven跑test搞清楚（为啥放开2个注释会有报错）
yml和properties去掉一个：https://www.bejson.com/devtools/properties2yaml/

我现在的demo还有些问题：1.有些代码没有放入service里面，controller直接调用的dao；
timestamp的使用还要精进，例如比较大小
再思考一下上次、下载原理，springmvc需要精进
项目启动时数据库脚本自动执行，这个再思考一下
教程看到：http://wiki.jikexueyuan.com/project/shiro/authentication.html
写好数据库读取及登录模块【先写登录，再写权限控制，权限控制写通一个就先放开，最后再补】（包括QQ、微信登录）
0.比较并思考为啥有些文件最初没有传上github，被过滤了？；http://www.cnblogs.com/leesf456/p/4733958.html
2.进一步搞懂配置文件的作用，尤其是applicationcontext；
3.找到合适的模版（知乎上问，bootstrap的，最新的）；
4.完整学习一次springmvc教程（准备活动，找到兼职美工）；
2.mybatis：（再思考chime的数据库注解）；
5.把前后端连起来（写的时候练习一下前后端分离，前端用SublimeText3）；
6.完成监理的需求（先把PC端的做起来，再跟进手机的需求，要快）；
7.读spring源码，写demo；
10.学习老侯，一定要注意在做的过程中积累各种工程经验：前后端分离、单元测试、安全测试、code review、充分比较各种技术
11.玩玩github的开源代码和blog
12.mybatis和spring的测试必须要搞的非常熟
13.加测试例、加业务逻辑工程
注意代码规范
手机上传的时候怎么用消息队列？
github能完成DevOps中的多少工作量？
写数据库升级脚本要注意啥？怎么写？搜一下
要有把service独立出来，maven多module打包的能力
搭架子要把阿里那些最佳实践都包含进来
OAuth2要做好
DefaultFilter 枚举类原理值得仔细分析

项目的包划分：controller、service、manager、dao、pojo(model、vo等)、config、filter、utils、shiro、websocket，
还可以有event、handler、entity、exception、common、global等

Spring Boot Admin（与actuator关系？）
Spring boot 2.0 Actuator 的健康检查（默认有15项，都打开看一下：http://localhost:8080/actuator/beans）：
https://blog.csdn.net/voilet_bin/article/details/83028698
https://www.jianshu.com/p/1aadc4c85f51
mybatis pagehelper【需要搞清楚原理】：
https://blog.csdn.net/justry_deng/article/details/82933941
https://pagehelper.github.io/
https://www.cnblogs.com/kangoroo/p/7998433.html
【分析原理】swagger是一个流行的API开发框架，这个框架以“开放式API声明”（OpenAPI Specification，OAS）为基础，对整个API的开发周期都提供了相应的解决方案，是一个非常庞大的项目（包括设计、编码和测试，几乎支持所有语言）：https://blog.csdn.net/moshowgame/article/details/80265480

ConfigClusterResolver - Resolving eureka endpoints via configuration
HttpServletrequest 与HttpServletResponse总结：https://www.cnblogs.com/liuyandeng/p/5336649.html
SpringMVC是怎么封装HttpServletRequest的？数据是怎么封装的？controller是怎么被调用的？
@requestbody和httpServletRequest区别：https://www.oschina.net/question/2491333_2283678
public interface HttpServletRequest extends ServletRequest {
    String BASIC_AUTH = "BASIC";
    String FORM_AUTH = "FORM";
    String CLIENT_CERT_AUTH = "CLIENT_CERT";
    String DIGEST_AUTH = "DIGEST";
将我的项目中HttpServletRequest都过一遍，都干掉。另外：参数中既有request又有response的怎么理解？


关于RBAC权限控制：
1.我只实现了最简单的，后续需要加字段，例如用户会有头像、名字、手机号、住址等字段；
2.【重要】学习别人的permission表：https://blog.csdn.net/JesseCary/article/details/54023049。shiro里面的permission也要再好好学习一遍；
3.当年微软的那一套表好像很复杂？有空再找一下；
4.复杂应用可能不止这5个表，例如还需要分用户组和角色继承关系：https://blog.csdn.net/yangxuesong5555/article/details/79417210
这5个表怎么跟shiro对应起来？

SpringBoot中application参数中文详解：https://blog.csdn.net/qq_25667339/article/details/79155805
Maven的Import changes 和enable auto-import：https://my.oschina.net/u/3908739/blog/2218624

