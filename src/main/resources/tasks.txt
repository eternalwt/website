【下一步工作顺序】：
0.1.日志配好（现在webSocket部分用到）；
1.把ini的shiro调通；
3.把mybatis的shiro调通；
4.继续调试剩下的springboot+shiro
5.看前后端合并、分离的部署（先搞合并的），加easyUI
6.整合并删除我的financial项目
6.mybatis三剑客、flyway、druid、日志、加@Configuration注解；
7.websocket继续学习，写几个demo（比较这个里面的session）：
https://www.cnblogs.com/strugglion/p/10021173.html
https://blog.csdn.net/moshowgame/article/details/80275084

我现在的demo还有些问题：1.有些代码没有放入service里面，controller直接调用的dao；2.用的底层的HttpServletRequest、PlatformTransactionManager替换一下
1.数据库连接加密【mybatis配置】
项目启动时数据库脚本自动执行，这个再思考一下
教程看到：http://wiki.jikexueyuan.com/project/shiro/authentication.html
写好数据库读取及登录模块【先写登录，再写权限控制，权限控制写通一个就先放开，最后再补】（包括QQ、微信登录）
0.比较并思考为啥有些文件最初没有传上github，被过滤了？；http://www.cnblogs.com/leesf456/p/4733958.html
2.进一步搞懂配置文件的作用，尤其是applicationcontext；
3.找到合适的模版（知乎上问，bootstrap的，最新的）；
4.完整学习一次springmvc教程（准备活动，找到兼职美工）；
2.mybatis：（再思考chime的数据库注解）；
5.把前后端连起来（写的时候练习一下前后端分离，前端用SublimeText3）；
6.完成监理的需求（先把PC端的做起来，再跟进手机的需求，要快）；
7.读spring源码，写demo；
10.学习老侯，一定要注意在做的过程中积累各种工程经验：前后端分离、单元测试、安全测试、code review、充分比较各种技术
11.玩玩github的开源代码和blog，看看新技术和有没有赚钱的机会
12.maven构建打包
13.加测试例、加业务逻辑工程
搭建环境搞半天，启动MYSQL、判断、连接可用又搞半天，这里都是可以用DevOps解决的领域
注意代码规范
手机上传的时候怎么用消息队列？
github能完成DevOps中的多少工作量？
写数据库升级脚本要注意啥？怎么写？搜一下
