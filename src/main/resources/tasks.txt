【目标：做成一个完整的脚手架，中间件和存储层也要能快速配好】
【我的后端和脚手架没有突破，所以一直没办法接项目】

由索引进化到 ElasticSearch ，这也是我们的项目需要的

【周末】开涛的书和JWT不能停

买香皂、洗洁精？

后端框架搭好后，下一步工作方向：
1.前端框架及组件（依托工作）；
2.scheme及解释器、数值符号计算继续；
3.后端IoC、bloomfilter等练习，零散练习以及框架代码阅读

//todo runas写通（看一下代码实现）

token多久更新一次比较好？
shiro代码还在更新吗？
是否区分access_token和refresh_token？
后续验证应该只需要看一下缓存里面有没有就OK了

把前端提交到github，把scheme提交到github

jwt token验证的两种方式：
1.封装成UserPasswordToken（这种方式比较间接）：https://www.jianshu.com/p/0b1131be7ace；
2.直接使用JWTToken（已写通，还需要更深入的理解。matcher与realm的关系。下一步是重构代码了）；

// todo 用的是数据库里面取出来的password，应该是跟UsernamePasswordToken里面封装的password比较，继续跟代码
【把jwt的文档搞定】
【下一步重中之重：把代码比对搞清楚，然后就能把jwt里面封入密码，彻底把jwt搞定了】
2.token的刷新【写完和别人的代码对比（研究别人的代码）：1.前端框架接受到刷新的token后替换保存（interceptor）
确认【先跟一次代码】：jwt登录和后续请求都用到CustomJwtRealm里面的doGetAuthenticationInfo方法。并跟踪调试非jwt版本的代码
刷新我是照这个写的：https://www.jianshu.com/p/48b39f6b1f86
涉及到替换原有token、修改session状态的JWT方向才是对的：https://yq.aliyun.com/articles/646440
JWT搞懂（要彻底）后后端就可以告一段落了，有兴趣可以继续看lifecycleBeanPostProcessor
先看自定义sessionManager实现前后端分离，再看JWT（把token作为sessionId？）：
https://blog.csdn.net/ch18255112191/article/details/88710610（这个里面bean的配置是最全的，还有sessionValidationScheduler）
https://blog.csdn.net/u011456867/article/details/80484559
Jwt与sessionIdGenerator的关系？
验证：cookie设置为即时过期（和不过期2种情况）、session设置超时的测试【session和cookie关系还是没完全搞明白】
sessionIdCookieEnabled和sessionIdCookie是干嘛的？https://www.cnblogs.com/xyhero/p/86b01d0949feaac01459e654747b9bff.html
sessionValidationScheduler（会话验证调度器、QuartzSessionValidationScheduler、ExecutorServiceSessionValidationScheduler）：https://blog.csdn.net/yifansj/article/details/78007231
shiro自定义会话验证调度器：https://blog.csdn.net/jin5203344/article/details/53580242
Shiro 分布式架构下 Session 的共享实现：https://blog.csdn.net/zcyhappy1314/article/details/71270937

jwt的关键点：
1.（再看realm和config等的关系）
2.filter：后续每次验证？
3.config；
4.最基本的jwt写通后，把缓存、错误次数等其他基础设施都加上去（token放在缓存中是个很典型的场景）
0.jwt已有的代码没有完全读完：https://www.jianshu.com/p/504bfbbd5896
SubjectDAO那些代码还是要看

上传、下载、word、pdf，这些都是基础设施

从cookie来看我的session没有完全禁掉，我的hello world请求也有问题吧

jwt的RememberMe：
1.先从实现接口的角度来理解框架：RememberMeManager - AbstractRememberMeManager - CookieRememberMeManager【最好不要绕过subject.isRemembered()】；
2.我的理解：分刷新时间、过期时间、rememberMe过期时间（这样的话过期时间如何刷新？）
3.登出的逻辑也要改
如果每一次请求都更换token，实现rememberMe是可行也是很好实现的，不会有并发问题【这是真正正确的逻辑，但是还是要先搞懂issuedAt】
jwt验证subject.isAuthenticated()

源码怎么分析？1.要有源码；2.要懂通用的源码分析方法并结合起来分析。如何结合教程看？如何debug？
1.把IoC容器搞清楚；2.把@Autowired、@Bean注解原理搞清楚

Shiro之CredentialsMatcher详解：https://blog.csdn.net/dh554112075/article/details/90760318

【又想了一下，把记录的问题精进一下再继续】有jwt和没有jwt的版本还要再搭一到二次，把框架的有效使用再精进一步

jwt的修改：
1.securityManager.setRealms(Arrays.asList(customRealm));
2.response.setHeader("x-auth-token", JWTUtil.createToken(username));
3.关闭session【可以先不处理把？】；
4.Filter的注册，是否使用FilterRegistrationBean？
5.JWT的几个类怎么写整一点
学习框架彻底体会了组装的感觉

JWT，先把这个页面的实现一次【还有刷新的问题】：https://www.sundayfine.com/shiro-jwt/
设置多个realm认证策略，一个成功即跳过其它的：https://www.jianshu.com/p/0b1131be7ace
shiro 多realm 实现 后端 和 前端分离验证：
https://blog.csdn.net/qq_33842795/article/details/80895594
https://blog.csdn.net/liiuijkiuu/article/details/53945062
【上面这个应该是可以配置成功jwt的，配置试一下。理论上来说：应该先debug登录后每一次请求的cookie验证，然后再搞jwt的。这一步补上】
到了JWT感觉不得不做源码分析了

SecurityManager可以setRealms，也可以通过setAuthenticator来设置多realm，分析一下代码？

0.把我的CustomRealm里面的todo再搞一次
1.前端封装jwt【用interceptor接收刷新的token。怎么发请求时带token？】
2.还是要能直接调试spring的IoC容器，这样才能进一步分析shiro的加载（带着这些问题再精进一轮）
多调试，通过调试来提升自己的框架能力还有很长的路要走。这是个能拉开差距的非常关键的能力。
怎么能看出默认的策略，例如：this.authenticationStrategy = new AtLeastOneSuccessfulStrategy();
读代码的关注点：
1.类之间的继承各完成的任务；
2.类之间的组合关系

Shiro之用户名密码或手机号短信登录（多realm认证）：http://code520.net/archives/1153
Subject.login()的时序图：https://www.cnblogs.com/nuccch/p/7911423.html

DefaultWebSecurityManager

ModularRealmAuthenticator：
https://blog.csdn.net/iteye_10899/article/details/82675363

SubjectFactory，factory要看懂，同时把subject搞清楚

Shiro 中的 SessionStorageEvaluator：https://www.jianshu.com/p/3b48ea215990
Shiro关闭session管理：https://blog.csdn.net/wysnxzm/article/details/52230371
根据开涛的第20章“无状态Web应用集成”应该是可以自己写出来的：file:///D:/gao/%E7%94%B5%E5%AD%90%E4%B9%A6/%E8%B7%9F%E6%88%91%E5%AD%A6shiro.pdf

AuthenticationStrategy的继承关系图（注意三种策略返回值的不同）：https://www.lmlphp.com/user/255/article/item/23154/

refreshtoken

shiro中OAuth2 集成：https://www.cnblogs.com/yuluoxingkong/p/8268094.html

ResultBean搞成泛型的ResuleBean<T>，我们系统里面的返回值ResultBean<?>对应的success等方法根本没用到类型信息，用的object

通过面试题及调试技巧的资料学习webSocket

Webpack、Less、Sass、Gulp、Bower以及这些工具的插件都是Node上开发的---@知乎陈龙
前端现在有npm （包管理）。而npm是随同Node.js一起安装的。所以前端(vue/angular/react)在开发环境下都是离不开Node.js的(编译、打包等等)
有了npm，你怎么得到要用的包/模块信息呢？
初识npm：https://www.cnblogs.com/john-sr/p/6036652.html
谈一谈NPM：https://cloud.tencent.com/developer/news/216362
npm完整的教程：http://caibaojian.com/npm/getting-started/what-is-npm.html
Node.js + Express + Springboot实现前后端分离架构：https://my.oschina.net/u/1185936/blog/1523088
基于 Node.js 平台，快速、开放、极简的 Web 开发框架：http://www.expressjs.com.cn/
要能搞清楚前端框架对生产力的提升：1.可以避免写很多类似（重复）的代码，例如双向绑定就可以避免很多取值的代码。搞懂框架就可以少写好多代码

最近学到的前后端分离知识：https://www.cnblogs.com/Java3y/p/11320606.html
找一个合适的模板，把分配权限的demo彻底写好
【JWT：网上的文章都太复杂了，自己先看看鉴权过程自己思考一下，或者先写起来】
练习：找一个模板用angular的方式跑起来（只要解决了这个问题，就没啥难度了）
下一问题：下载angular版的easyUI界面如何跑起来？（ng serve）
把前端计划变更为前端技术选型【这是非常关键的战略步骤。少即是多，如何能找到正确的选型？】。模板与组件之间的关系搞清楚【看代码对比就OK了，先把我下载的那个看了】。
真的弄明白，才有可能性
https://www.imooc.com/article/37896
网上大部分选型的文章思考深度不够，没有解决快速灵活使用模板开发的问题
比较easyui各个版本的异同，可以提升理解
前端框架与bootstrap等模板的整合
ng-zorro也是前端可视化技术，跟EasyUI等对比一下
【一旦把这个问题想清楚，能够根据场景组合出最优化的方案，后端再精进几个月，就差不多了】一定要对自己干的事有非常清晰的认识
【一旦突破后，最重要的问题立马转换为：如何接项目、2个demo项目、深度学习。只要做5个高质量的项目，市场立马能永久打开】

@Primary 和 @Qualifier的实现值得一看，搞清楚从接口找类的过程

ShiroConfig前面已经一马平川【终于到动态权限和jwt了】：
1.JWT、JWT要能快速切换，要能复述步骤（在现在的基础上只需要不到1小时就能配好了）。搞定JWT需要对整个流程再来一次梳理，很有意义（禁用session后对cookie的影响？）
最终的替换目标要验证登录次数限制、权限等没有问题
挤掉其他用户或者能同时登陆（现在的逻辑应该是会挤掉把？用2个浏览器测一下）
2.增加了账号连续输错的限制后，逻辑有问题，在时间范围之内输入正确的账号也应该不让登陆【作为测试问题解决验证】
3.查看切换redis的难度。对比各cacheManager
4.看看还有没有todo，过掉
6.Spring shiro 初次使用小结【里面讲了如何设置cookie名称】：https://www.cnblogs.com/Weagle/p/7908592.html
7.mybatis再根据这个文章测一下：https://blog.csdn.net/qq_37598011/article/details/80669608
8.消灭5个shiro文档
9.动态权限做好，继续看permission【还差2步：1是bean的重写；2是放入数据库】
10.看源码（从spring、mybatis开始）及集成activiti
11.webSocket
12.继续看开涛的教程
13.继续流式计算和人工智能
可以搞session的缓存了

我现在的demo还有些问题：1.有些代码没有放入service里面，controller直接调用的dao；
timestamp的使用还要精进，例如比较大小
再思考一下上次、下载原理，springmvc需要精进
项目启动时数据库脚本自动执行，这个再思考一下
教程看到：http://wiki.jikexueyuan.com/project/shiro/authentication.html
写好数据库读取及登录模块【先写登录，再写权限控制，权限控制写通一个就先放开，最后再补】（包括QQ、微信登录）
0.比较并思考为啥有些文件最初没有传上github，被过滤了？；http://www.cnblogs.com/leesf456/p/4733958.html
2.进一步搞懂配置文件的作用，尤其是applicationcontext；
3.找到合适的模版（知乎上问，bootstrap的，最新的）；
4.完整学习一次springmvc教程（准备活动，找到兼职美工）；
2.mybatis：（再思考chime的数据库注解）；
5.把前后端连起来（写的时候练习一下前后端分离，前端用SublimeText3）；
6.完成监理的需求（先把PC端的做起来，再跟进手机的需求，要快）；
7.读spring源码，写demo；
10.学习老侯，一定要注意在做的过程中积累各种工程经验：前后端分离、单元测试、安全测试、code review、充分比较各种技术
11.玩玩github的开源代码和blog
12.mybatis和spring的测试必须要搞的非常熟
13.加测试例、加业务逻辑工程
注意代码规范
手机上传的时候怎么用消息队列？
github能完成DevOps中的多少工作量？
写数据库升级脚本要注意啥？怎么写？搜一下
要有把service独立出来，maven多module打包的能力
搭架子要把阿里那些最佳实践都包含进来
OAuth2要做好
DefaultFilter 枚举类原理值得仔细分析

密码前端传给后端之前就应该加密
基础设施：
文件上传下载、富文本，这些也是
按钮、图标、菜单管理
图标库【思考我还欠缺的是什么】：https://www.iconfont.cn/home/index
怎么使用好图标

对比一下easyui和ng-zorro

【本周】
1.单元测试；
2.ajax写好（先用jQuery的）
心得：realm里面的SimpleAuthenticationInfo代表的是数据库保存的数据的封装，包含加密后的密码。而用户输入的原始密码被封装成UsernamePasswordToken，
然后在login的过程中根据定义的RetryLimitHashedCredentialsMatcher进行加密（再看一下流程）。看一下SimpleAuthenticationInfo几个构造函数的区别
1.把ResultUtils用起来；5.把添加用户、角色等基本功能写好（Service、Controller）
2.前端form、ajax单独写好，再考虑整合的问题【前端ajax先配好】；
3.把前后端分离配好（ajax、前后端数据传递格式）【看一眼chime代码】；
6.【把2017年写的几个controller整合掉，把现有功能都测一下】
7.把设置权限放到数据库，debug观察那段代码的执行顺序（要能debug bean的加载顺序，至关重要），然后通过代码看；4.继续调试剩下的springboot+shiro
8.【所有配置文件是怎么读取的】
9.必备功能：分享、OAuth2、activiti

mybatis配置（除了模板以外怎么知道还能加哪些标签？）【generator和plus功能有重复？】：
1.搞清楚mybatis加载时对application.properties（或者yml文件）和mybatis-config.xml的读取流程
2.mybatisPlus需要看吗
3.MyBatis 配置文件 用户密码加密存储：
https://blog.csdn.net/qq_24241631/article/details/80294144
http://www.imooc.com/article/285087
4.mybatis三剑客：
mybatis一级缓存二级缓存：https://www.cnblogs.com/happyflyingpig/p/7739749.html

看源码的时候，要试着自己动手实现同样的功能。可以先尝试实现一下IoC容器、mybatis核心功能
自己实现spring核心功能：https://www.cnblogs.com/jingch/p/11368982.html

再思考cookie传过来后是怎么验证的。通过SessionManager设置session过期时间后，时间到了怎么办？https://www.cnblogs.com/yinfengjiujian/p/9083593.html

基于shiro框架实现自动登录(rememberMe)：https://www.jianshu.com/p/5b99c0ef6fb7
isRemembered()==true的时候怎么设计后端逻辑？【我对这个问题还是没有搞清水】https://www.cnblogs.com/bq-med/p/8603664.html
jwt环境下怎么做记住我？【因为token要隔时间更换，这个我在威盛都没做】

沉住气，精进是要一直进行的【光是这个文档里面的东西都至少要精进到年底】

Servlet Tutorial【当今servlet的场景？】：
https://www.javatpoint.com/servlet-tutorial
DispatcherType

lifecycleBeanPostProcessor：
LifecycleBeanPostProcessor用于在实现了Initializable接口的Shiro bean初始化时调用Initializable接口回调，在实现了Destroyable接口的Shiro bean销毁时调用 Destroyable接口回调
https://blog.csdn.net/hxm_code/article/details/78697305
https://blog.csdn.net/peterwanghao/article/details/8824981
shiro学习之LifecycleBeanPostProcessor的作用：https://blog.csdn.net/hxm_code/article/details/78697305
使用DefaultAdvisorAutoProxyCreator实现spring的自动代理
【原理是啥？】DefaultAdvisorAutoProxyCreator，Spring的一个bean，由Advisor决定对哪些类的方法进行AOP代理

springboot整合ehcache：彻底搞明白
https://www.jianshu.com/p/9e4eb5e5bc1b
https://blog.csdn.net/qq_28988969/article/details/78210873
springboot使用redis缓存【和ehcache比较，单独配置与放入spring配置】：https://www.jianshu.com/p/cde7a812743c
@EnableCaching背后的动作（“这样的话，启动类启动时会去启动缓存启动器”）。由于CacheConfig会被扫描，所以@EnableCaching放这里也是可以的
ehCache使用注解和不使用注解的2种使用方式【搜一下】
springboot使用cache缓存：https://www.jianshu.com/p/e9b40acb2993

CacheManager及EhcacheUtil；https://www.cnblogs.com/imsoft/p/5895905.html
搞Realm和CacheManager的关系【可以通过分析代码、观察数据库日志的方式，判断缓存是否起效】（authorizationCache、authenticationCache）：
https://blog.csdn.net/csujiangyu/article/details/49076531
https://blog.csdn.net/AlbertFly/article/details/52193813
再看Retry的cache能否整合使用CacheManager

跟媳妇聊天意识到的2个问题：
1.我的熟练程度还不够，还要更多building blocks，还要多写；
2.要看钉钉等有什么创新功能

springboot-plus：
https://gitee.com/xiandafu/springboot-plus
https://www.cnblogs.com/xinweiyun/p/9943784.html

分页到底是用mybatis分页插件PageHelper，还是用mybatisplus的IPage/Page？

下一步搞懂3个问题：
3.Mybatis与Spring集成时都做了什么？https://www.cnblogs.com/xwy6/p/11279518.html
mybatis-spring这种包是桥梁
为啥不需要写MybatisConfig这种类？
springboot的包扫描顺序再研究一下
shiro官方文档再看一遍，开涛的书视情况而定是否需要继续看。shiro源码分析的几个方面：1.跟别人的文档；2.建立主题意识，按主题分析；3.建立问题意识

如果用户、权限单独做一个服务，应该怎么做和给多个项目使用？

shiro实现APP、web统一登录认证和权限管理：https://www.cnblogs.com/sunshine-2015/p/5515429.html
Apache Shiro（七篇文章）：https://blog.csdn.net/vae1314chuanchen/article/category/8231465
跟着大宇学Shiro：https://blog.csdn.net/yanluandai1985/column/info/31708
shiro可以再来一次了：https://shiro.apache.org/【真正的文档在reference这个链接：http://shiro.apache.org/reference.html】
细说shiro之七：缓存【要完全看懂并学习这个人的思维方式】：https://www.cnblogs.com/nuccch/p/8044226.html
细说Shiro系列文章
我的shiro之旅：https://blog.csdn.net/lhacker/article/details/19341735
Springboot集成Shiro：里面有权限缓存、RememberMe等多个功能（可以先搞通一次再搞jwt）：https://www.cnblogs.com/kibana/p/8953566.html

@Bean的加载时机，@Autowired的加载时机

该清这个文档里面的内容了【花一个周末清理】

SessionDAO【默认是怎么保存的？思考session共享】与Session共享：
https://blog.csdn.net/changudeng1992/article/details/81914628（为什么EnterpriseCacheSessionDAO里面的4个方法要声明为protected？为啥够用？）
https://blog.csdn.net/acmman/article/details/78955730
https://www.jianshu.com/p/f7d5a9ecfd3a
https://www.jianshu.com/p/f85e50f41100
https://baijiahao.baidu.com/s?id=1618275433856874538&wfr=spider&for=pc
https://www.cnblogs.com/youzhibing/archive/2018/10/30/9749427.html

@Bean注解修饰带参数方法时的参数取值：
https://blog.csdn.net/ncuzengxiebo/article/details/80805786
https://www.cnblogs.com/eoooxy/p/6438109.html

ImportBeanDefinitionRegistrar：
https://www.jianshu.com/p/caef887b78b5
https://www.cnblogs.com/zhangjianbing/p/10114196.html

FactoryBean如果实在看不懂就看源码分析（shiro、cache、mybatis、activiti）：https://www.cnblogs.com/xwy6/p/11279518.html
为什么要用FactoryBean，非用不可吗？
Mybatis与Spring集成时都做了什么？https://www.cnblogs.com/xwy6/p/11279518.html
我的加密为啥没用PasswordService？

doGetAuthenticationInfo与doGetAuthorizationInfo 什么时候执行【调试一下】：https://www.cnblogs.com/tusheng/articles/7453587.html
注意思考一类问题：当类有多级继承时，每一层分别加什么内容，怎么合理组织？（找token或者SessionManager等分析一下）：https://blog.csdn.net/weixin_34289744/article/details/88164013
https://www.cnblogs.com/BINGJJFLY/p/9139348.html
https://www.cnblogs.com/BINGJJFLY/p/9267352.html
https://www.cnblogs.com/BINGJJFLY/p/9071235.html
https://www.cnblogs.com/BINGJJFLY/p/9301352.html
https://www.cnblogs.com/BINGJJFLY/p/9078020.html
springboot + shiro之登录人数限制、登录判断重定向、session时间设置：https://blog.51cto.com/wyait/2107423

前端路由非常重要，是一个枢纽，并且涉及到权限控制，需要好好研究组件的实现及使用

【周末剩余事项】
2.JWT（postman也是可以测试的）
3.继续看shiro文档，反复看和整理（一个专题一个专题彻底灭掉）
4.easyui继续
得看spring-shiro的源码 得再打断点调试一下，现在的熟悉程度和收获远远不够
禁止账号多点登录或者重复登录：
https://blog.csdn.net/sunsgne_ac/article/details/79289770
https://blog.csdn.net/qq_35113996/article/details/84256271
踢出用户：
https://www.xuebuyuan.com/2116235.html
禁用：
https://www.jianshu.com/p/44ee5b1c1e77

shiro的权限控制应用，集成spring项目，密码错误次数过多短时间锁定：http://www.mamicode.com/info-detail-1449798.html

@Controller注解的类也是被IoC容器管理的，从这个角度思考一下

Shiro整合JWT+Token过期刷新，全都帮你整好了：
https://www.sundayfine.com/shiro-jwt/
https://www.sundayfine.com/jwt-refresh-token/
使用更多debug

cacheManager专题分析一下
RetryLimitHashedCredentialsMatcher(CacheManager cacheManager) 为啥这个有参构造函数能走进来？搞懂这一点至关重要
把CacheManager搞成static的：https://www.cnblogs.com/imsoft/p/5895905.html

jQuery EasyUI 教程：https://www.runoob.com/jeasyui/jqueryeasyui-tutorial.html
前端UI框架选择区别对比推荐
前端路径：http://localhost:8080/static/index.html
jQuery发送请求：http://www.w3school.com.cn/jquery/ajax_post.asp
POSTMAN之如何获取COOKIE：https://www.cnblogs.com/yecaiye/p/10251747.html
如何在Postman中使用cookie：https://blog.csdn.net/niedewang/article/details/80481652
Postman是可以测试文件参数的，在Body form-data里面

十一之前把项目搞好，然后开始学习脚本语言和机器学习
战略要正确，用一年的时间紧锣密鼓的完成。我的目标就是把CRM技术搞的非常熟，能够快速搭

从我们代码里面spring整合activiti我对bean又有了更多理解，再次确认我在shiro里面的用法有没有问题：
1.保持返回值和@Bean注解的函数名一致（函数名第一字母小写）；
2.参数是怎么加载的？
3.搞懂这个签名：@Bean public ProcessEngineFactoryBean processEngine
https://www.cnblogs.com/demodashi/p/8509895.html
@Bean用于已经定义好的类，配置选项，@Component用于定义类，并搞成bean
用@Bean的方式才能动态设置选项
如果没有声明bean，默认的对象是怎么加载的？找到并看看初始化代码，把config相关的初始化代码都看一下
【非常重要】在EhCache、Shiro、Activiti的配置里面都有一个FactoryBean，得继续看

【再把菜单、权限这事儿自己思考一下】
1.通过注解来完成权限控制（5个权限注解）【新问题：我配了后启动失败了】；
https://www.cnblogs.com/limingxian537423/p/7928234.html
https://blog.csdn.net/u014203449/article/details/79415755
https://www.jianshu.com/p/c6b9a557d18d

2.动态权限：
https://www.jianshu.com/p/5de287239061
https://blog.csdn.net/haoyuyang/article/details/80036989
https://wenku.baidu.com/view/5a8f9e15974bcf84b9d528ea81c758f5f61f299e.html
https://www.cnblogs.com/007sx/p/7381475.html
http://how2j.cn/k/shiro/shiro-url/1729.html
https://www.xttblog.com/?p=1270
https://blog.csdn.net/jinnianshilongnian/article/details/84545363
shiro实现动态权限管理：https://blog.csdn.net/hxm_code/article/details/50083843
动态菜单/权限管理的实现：https://blog.csdn.net/qq_25652949/article/details/81067004
Spring Boot Shiro权限管理--扩展FormAuthenticationFilter实现动态改变LoginUrl：
https://blog.csdn.net/u010361786/article/details/80138201

Shiro四种权限控制方式：
https://blog.csdn.net/qq_39659876/article/details/81838651
https://blog.csdn.net/it_boy_elite/article/details/78555356
https://blog.csdn.net/qq_29524437/article/details/84620877
用一个表保存role和有权限的页面之间的对应关系，既用于加载页面，又用于鉴权。但是这样好像没用到permission表？再考虑一下
是不是permission表就可以保存页面地址信息？permission相关的再看一下：
https://www.cnblogs.com/strinkbug/p/6834927.html
https://www.ibm.com/developerworks/cn/opensource/os-cn-shiro/
https://blog.51cto.com/zero01/2171397?source=dra
（从数据库读取目录和权限对应关系【需要结合自己有多少个filter】。那么问题就变成：如何把功能和url对应起来（一个完善的路由机制））
【再考虑一下菜单策略】
基于 RBAC 简单实现动态菜单及权限管理：https://blog.csdn.net/zhou6343178/article/details/79498093
https://blog.csdn.net/qq_39187822/article/details/83374049
https://blog.csdn.net/lz527657138/article/details/85689234
https://blog.csdn.net/niki_yeun/article/details/81335833
https://blog.csdn.net/zhuyu19911016520/article/details/52573072
https://blog.csdn.net/dabai_cai/article/details/78154993
https://blog.csdn.net/lpy1239064101/article/details/79185170
2.RBAC新解：基于资源的权限管理(Resource-Based Access Control)：
https://my.oschina.net/zjllovecode/blog/1601157【看看什么情况下适合绕过role】
https://blog.csdn.net/youni808/article/details/25612271
4.再看RBAC 5个表怎么跟shiro对应起来？
关于RBAC权限控制：
1.我只实现了最简单的，后续需要加字段，例如用户会有头像、名字、手机号、住址等字段；
2.【重要】学习别人的permission表：https://blog.csdn.net/JesseCary/article/details/54023049。shiro里面的permission也要再好好学习一遍；
3.当年微软的那一套表好像很复杂？有空再找一下；
4.复杂应用可能不止这5个表，例如还需要分用户组和角色继承关系：https://blog.csdn.net/yangxuesong5555/article/details/79417210
这5个表怎么跟shiro对应起来？

思考各种前端技术及ng-zorro等各能提升多大生产力

mybatis 理解 1、2级缓存，，懒加载【如何测试？】：https://blog.csdn.net/lu1171901273/article/details/82695993
Mybatis #和$区别以及原理：
https://blog.csdn.net/zhangyong01245/article/details/90768156
https://www.jianshu.com/p/0a70f957c750
https://www.cnblogs.com/skyislimit/articles/10469873.html

// todo runAs、releaseRunAs、isRunAs

【可以看filter对cookie的解析以及JWT了】
2.把cookie那个文章里面的request和response的调用链搞清楚
3.读代码的时候，先自己读一下，然后跟别人读的做对比和校正（防止读别人的没感觉，并验证自己读的对不对）
后续练习：写下现有功能，再快速重新配一次
shiro-spring怎么加载的shiro还是没整明白。shiro-spring 及 spring-context【从源码分析】
CustomRealm：再学一遍。1.如何单元测试？（好多文章里面直接main测试，学一下）
model里面字段注释/含义及自动生成

数据可视化库 D3.js、echarts这些也是基础设施

spring 配置 shiro rememberMe：
https://www.cnblogs.com/blogxiao/p/8759053.html
https://blog.csdn.net/vae1314chuanchen/article/details/83475717
Cookie是怎么写到浏览器的：https://www.cnblogs.com/blogxiao/p/8759053.html
cookie的过期时间？【cookie是每次都会发给服务器吗？】
rememberMe与单点登录的关系？
 点击登陆之后，当登陆成功之后会调用DefaultSecurityManager的rememberMeSuccessfulLogin方法将记住我写入到cookie中：https://www.cnblogs.com/blogxiao/p/8759053.html
在 Servlet 容器中，默认使用 JSESSIONID Cookie 维护会话。JSESSIONID是当前登录后没有关闭浏览器之前维持会话的，rememberMe是关闭浏览器后再次登录维持会话的
“如果只想监听某一个事件，可以继承 SessionListenerAdapter 实现”，看看是怎么玩的。
Shiro中Session和Cookie的一些思考：https://www.jianshu.com/p/4972c4d70853
https://bbs.csdn.net/topics/392084645
Session失效问题：https://www.cnblogs.com/OnlyCT/p/9151010.html
Shiro session和Spring session一样吗？https://www.cnblogs.com/onlymate/p/8391274.html
如果没有logout，session的过期策略是什么？【和cookie的过期问题对比考虑】
修改成jwt后，锁定会出问题吗？

JWT登录的几个要点：
    1.将登录成功的信息包括Token信息返回给前端，前端在请求后台时，将Token信息存入请求头中。
    2.配置自定义拦截器，拦截所有URL请求，取出请求头信息中的Token信息，对Token信息进行验证
    3.关闭原有的session功能
https://blog.csdn.net/qq_36838191/article/details/82893149
看看shiro默认是怎么拦截的

cookie和session的关系：
https://www.cnblogs.com/joean/p/4609253.html【这个文章说：“以后此客户端再发送请求给服务器的时候，就会在请求request中携带cookie”。
如果不携带呢？cookie机制的根基就被动摇了？携带后，shiro的filter是怎么解析和检查cookie的？】
https://www.jianshu.com/p/2bb0f368f631
https://www.cnblogs.com/jing99/p/7826550.html

Shiro 内置了很多默认的拦截器，比如身份验证、授权等相关的。默认拦截器可以参考 org.apache.shiro.web.filter.mgt.DefaultFilter 中的枚举拦截器
看看默认拦截器列表，拦截器的包名：org.apache.shiro.web.filter
表单拦截器FormAuthenticationFilter：
https://blog.csdn.net/u014203449/article/details/80689268
https://blog.csdn.net/u014695188/article/details/52357379
DefaultFilter：package org.apache.shiro.web.filter.mgt.DefaultFilter
Shiro几大拦截器：https://blog.csdn.net/fenglixiong123/article/details/77119857

shirFilter，注意这个filter与SpringMVC Filter的关联和区别

【单独击破1】
realm继承关系彻底搞清楚（看看用不同的realm会怎么用）
0.复习一下现有代码【同时，再回过头来看，添加的权限相关的代码确实没多少，很简单，验证一下】
2.把EasyUI看掉；
3.再决定怎么整合
【单独击破2】
1.spring框架源码分析；【究竟应该直接读代码，还是先看熟教程，还是两者结合？】
2.logback源码（官网那个教程）
3.mybatis源码
4.shiro源码
5.ehcache 源码
6.activiti的源码好学吗？
7.消息队列源码

参数为啥还是不能灵活运用：
public String loginjudge(HttpServletRequest request)


特别想把ribbon和feign搞清楚

把redis版的缓存也写好，并且能随时切换备用。
把redisson配好，把事务和分布式锁用起来

Mybatis-config.xml 详细配置：https://blog.csdn.net/weixin_41910059/article/details/82659238

BlockJUnit4ClassRunner源码分析：https://blog.csdn.net/hello_worldee/article/details/76110828
SpringJUnit4ClassRunner
看懂springboot的启动流程，再对比下面的说明：
    @RunWith(SpringRunner.class) //底层用junit SpringJUnit4ClassRunner
    @SpringBootTest(classes={DemoApplication.class})// 指定启动类，启动整个springboot工程
有的文章说有@ExtendWith就可以运行了：https://blog.csdn.net/qq_19671173/article/details/79423951
Junit 5: https://junit.org/junit5/
Mockito 2 : https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2

测试搭起来，然后停一下，把现有功能充分测试：
    0.测一下这句的语法是不是对的：log.error("download failed, filename: [{}]", fileName, ex);
    1.所有配置文件相关功能测试：【mybatis都还没配好】、ehcache的测试等；
    2.所有controller及shiro相关功能
    4.把下方Spring和Java Enterprise菜单用起来
    5.再次分析这种写法能跳转页面的原理：return "auth/login";，还有HttpServletRequest作为参数的原理

shiro需要搞懂的2点：
1.权限注解；2.与web集成及拦截器；
easyui发ajax写通（再看RxJS的优势）
Shiro过滤器：https://www.cnblogs.com/xk920/p/10827025.html
Shiro通过注解配置授权：https://www.cnblogs.com/xk920/p/10825706.html
通常自定义Realm需要继承AuthorizingRealm，这样既可以提供身份认证的自定义方法，也可以实现授权的自定义方法。

Shiro 登录后跳转到最后一个访问的页面：https://www.sojson.com/shiro

spring源码之Aware：https://www.cnblogs.com/lucas2/p/9432934.html
Shiro 还提供了 CacheManagerAware 用于注入 CacheManager：
Shiro 内部相应的组件（DefaultSecurityManager）会自动检测相应的对象（如 Realm）是否 实现了 CacheManagerAware 并自动注入相应的 CacheManager。
Shiro 提供了 CachingRealm，其实现了 CacheManagerAware 接口，提供了缓存的一些基础 实现；另外 AuthenticatingRealm 及 AuthorizingRealm 分别提供了对 AuthenticationInfo 和 AuthorizationInfo 信息的缓存。

后端拆成2个模块，最简单的分布式无论如何要搭起来
注册中心和网关这2样可以独立搭建起来

passwordservice的写法写通
【结合这个处理空指针】service层抛异常，异常会被直接透传给前端，格式是（看看用浏览器是什么样的表现，测一下）：
{"timestamp":"XXX", "status":XXX, "error":"XXX", "message":"XXX", "trace":"XXX", "path":"XXX"}
注解式shiro的原理以及配置
把登录那几个页面的跳转配置好

mybatis开启日志：
https://blog.csdn.net/leocolee/article/details/80398406
https://blog.csdn.net/lpw_cn/article/details/84779387
druid开启日志

3.在一个项目中，怎么观察容器中和容器外的bean(结合JVM 调试器学习)？是尽可能多的把对象放入容器还是尽可能少？还是无所谓？
4.测试

周末：1.EasyUI；2.angular（工作上用到）；3.EasyUI使用angular版本；3.activiti工程配好
Layui elementUI iView
https://adminlte.io/

其实前后端已经连的差不多了，jwt只是可选。下一步：把jwt、把EasyUI与静态模板的关系搞清楚
https://blog.csdn.net/qq_22771739/article/details/83687175
http://www.17sucai.com/pins/tag/14624.html
https://www.cnblogs.com/wyguo/p/3556049.html
在@Configuration里面打断点观察执行情况

ShiroFilterFactoryBean源码及拦截原理深入分析：
https://blog.csdn.net/u012345283/article/details/44199791
https://blog.csdn.net/lqzkcx3/article/details/78776555

如果对shiro不能完全理解的话，自己写权限控制的代码似乎比用shiro更简单。无论是ASP时代还是mvc时代

再对比阿里巴巴手册看AddUserVo定义是否有问题
升级springboot 2.1.5后启动报错

搜shiro与SSO

把有道笔记里面shiro的东西整理一下
JAVA安全框架Apache Shiro浅析：https://www.jianshu.com/p/dc5c49f5101e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
shiro的登陆应该是用到了session相关的东西【要搞懂这个必须进一步分析源码了】：http://localhost:8080/notLogin;jsessionid=14E3EDE787BBAF48DE108DE1BC501F19
看一下shiro里面SecureRandomNumberGenerator的实现
把shiro包、类结构看一下，能写出这样的框架真是牛逼
1.教你 Shiro 整合 SpringBoot，避开各种坑：https://www.jianshu.com/p/ef0a82d471d2【搞懂后把我的github上多的东西去掉】
https://www.jianshu.com/p/c9e65e014db9?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
https://blog.csdn.net/u013615903/article/details/78781166/
Shiro用starter方式优雅整合到SpringBoot中
2.jwt：https://www.jianshu.com/p/3c51832f1051
你在用 JWT 代替 Session? https://blog.csdn.net/weixin_41153791/article/details/82291144
把JdbcRealm、JndiLdapRealm、ActiveDirectoryRealm写通
为增加可靠性，sessionId的管理使用了shiro-redis开源插件，避免sessionId断电丢失【前后端分离，sessionId放在header里面】：https://blog.csdn.net/u013615903/article/details/78781166
SpringBoot中使用Shiro和JWT做认证和鉴权：https://www.jianshu.com/p/0b1131be7ace

VS code中的Node.js教程：https://blog.csdn.net/qq_40420795/article/details/81909392

需要2轮测试用例：
    1.随着理解的深入和逐渐使用的功能的复杂，需要保证原有的用例可以用，并且能测试复杂功能。
    shiro代码首先还是按照调试流程来学习
    我的互联网项目每周要上线一个小功能

目标1：在springboot里面配的可用（ini）；2.把jdbcRealm的配置抽出来，写通
shiro的todo：
1.把logging再搞清楚；

shiro里面的permission是怎么跟表、API关联起来的？（其实资源就是我理解的功能点，再多一个关联）
资源的分类：菜单、URL、页面按钮、Java 方法等
IniSecurityManagerFactory过时了，怎么找到没过时的替代类？
JndiLdapRealm、AbstractLdapRealm、ActiveDirectoryRealm
JdbcRealm、AuthorizingRealm源码阅读：1.搞清楚用的那个类实现；
JdbcRealm里面最终连接数据库读取数据是在JdbcRealm的getPasswordForUser方法里面。看如果Reaml在读配置那一步是怎么被插入进去的
Token的接口及实现类族、Subject的接口及实现类族
3.Subject.login方法的全流程需要好好看几遍，里面对RememberMe、Cache、Session等都有涉及
继续写代码、跟代码：第5章（加密怎么无缝集成的？用ini文件尝试）、第6章、第10章、第11章。直接看开涛的代码。然后再翻译成Springboot的
基于url配置权限【另一个教程】：http://how2j.cn/k/shiro/shiro-plan/1732.html?tid=129

mybatis打印debug日志【原理得继续熟悉，并且让生产环境不打。能否不同的环境加载不同的配置文件？】：https://www.cnblogs.com/blacksonny/p/6956949.html
logback 配置详解：https://www.cnblogs.com/cb0327/p/5759441.html

Spring Boot Junit单元测试【把@WebAppConfiguration注解和注解原理搞懂，尽量多理解一点】：
https://www.cnblogs.com/jpfss/p/8422770.html
https://www.jianshu.com/p/afb04b925db3
Junit测试controller：
https://blog.csdn.net/xiaolyuh123/article/details/73281522/
https://blog.csdn.net/sinat_32481295/article/details/79764749

IDEA diagram里面有一项叫Spring beans Dependencies，这正是我需要的。eclipse里面有没有spring的框架专用插件？

shiro源码分析（二）Subject和Session：https://yq.aliyun.com/articles/38553


功能写好后，再搭建eureka server和spring cloud gateway
搭建Eureka注册中心：
https://www.jianshu.com/p/bde8e442ba0b
https://baijiahao.baidu.com/s?id=1630885642520150785&wfr=spider&for=pc

前后端分离的深入研究：
https://blog.csdn.net/qq_41849709/article/details/83411137【Ajax写法】
https://www.cnblogs.com/lvdabao/p/4204858.html
https://www.jianshu.com/p/b76de38fbb4a
https://www.jianshu.com/p/9e71429edbf6
https://blog.csdn.net/li_gameover/article/details/79917473
https://blog.csdn.net/u014445339/article/details/74301489

shiro超时相关的问题：
https://www.cnblogs.com/shihaiming/p/6042788.html
https://www.cnblogs.com/cocoat/articles/5226733.html
https://blog.csdn.net/ahou2468/article/details/78126607
https://www.jianshu.com/p/2c4a27874624
https://blog.csdn.net/zsg88/article/details/69488728
https://blog.csdn.net/jrn1012/article/details/70396502

【确认这个过程】在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，
框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。
mybati事务管理：
https://www.cnblogs.com/geningchao/p/6628452.html
https://www.jianshu.com/p/f3017479bd30
https://www.jianshu.com/p/f0662c10ce4f?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
https://blog.csdn.net/qq_36688143/article/details/82769423
Spring中的@Transactional(rollbackFor = Exception.class)属性详解：https://www.cnblogs.com/clwydjgs/p/9317849.html
我没加的时候阿里巴巴给了提示：需要在Transactional注解指定rollbackFor或者在方法中显示的rollback：
https://blog.csdn.net/ostar_liang/article/details/80770837
https://blog.csdn.net/qq_16605855/article/details/79653282
@Transactional注解的实现

//@RequiresRoles("role1")
//@RequiresPermissions("+user1+100")
再看ModelAndView的用法，和return "anth/login";这种比较一下

shiro源码分析，搞透

再看一下shiro相关的包一共有多少个：shiro-quartz、shiro-cas、shiro-guice、shiro-spring、shiro-web、shiro-core
密码加密、授予身份、单点登陆、DelegatingFilterProxy

细说shiro系列：https://www.cnblogs.com/nuccch/p/6775855.html【调试代码观察认证、授权的缓存状态】
Spring中的Aware【shiro里面也有CacheManagerAware，再分析一下】：
https://www.cnblogs.com/Jarris/p/10125980.html
https://blog.csdn.net/bailinbbc/article/details/76446594
https://blog.csdn.net/jinhaijing/article/details/83933573
EnvironmentCapable：
https://blog.csdn.net/weixin_39165515/article/details/76976685

FactoryBean：通过使用FactoryBean，我们可以得到不同类型的对象实例。这也就是我们在AOP中通过设置calss为ProxyFactoryBean可以返回不同类型的业务对象的原理：https://www.cnblogs.com/quanyongan/p/4133724.html
ShiroFilterFactoryBean implements FactoryBean, BeanPostProcessor
如果大家有看过Mybatis的SessionFactoryBean和Activiti初始化引擎的ProcessEngineFactoryBean两个类就应该了解FactoryBean的具体使用：
https://www.cnblogs.com/quanyongan/p/4133724.html
ShiroFilterFactoryBean是怎么加载和替换默认的的？【看一下这个bean怎么被使用的】【如果可以看容器里面的对象，可以进去之前看看，之后再看看】
shiroFilterFactoryBean：
https://blog.csdn.net/u012345283/article/details/44199791
https://blog.csdn.net/lqzkcx3/article/details/78776555
FactoryBean：
https://blog.51cto.com/4247649/2118353（这个需要反复看）
http://www.cnblogs.com/aspirant/p/9082858.html
https://blog.csdn.net/baidu_19473529/article/details/80558996

https://www.jianshu.com/p/6f0a59623090
Spring的后置处理器BeanPostProcessor：
https://www.cnblogs.com/libra0920/p/6118157.html
https://www.cnblogs.com/sishang/p/6576665.html
https://segmentfault.com/a/1190000015830477
https://uule.iteye.com/blog/2094549

spring-framework-reference/pdf(5.1.2.RELEASE)：https://docs.spring.io/spring/docs/5.1.2.RELEASE/spring-framework-reference/pdf/

把gitk显示乱码的问题解决
activiti生产的图片如何做缓存？

把开涛后面有几章看一下，把有道里面的内容排查一下
shiro认证信息和授权信息的缓存【authenticationCachingEnabled，据说认证默认关闭，授权默认打开】【写入是在哪里进行的？】：https://blog.csdn.net/csujiangyu/article/details/49076531
不懂的地方可以多借助调试来观察，把spring的调试配起来

加密：哪怕用md5实现，后面再优化：https://blog.csdn.net/hxm_Code/article/details/50136173
CreadentialsMatcher和subject结合学习【有意识训练自己，才会有提升】
自定义Matcher：CredentialsMatcher只有doCredentialsMatch一个方法，因此自定义主要是重载这个方法
Shiro自定义Realm时用注解的方式注入父类的credentialsMatcher：https://www.cnblogs.com/foxting/p/6790331.html

流程的理解：：当我们调用subject.login(token)的时候，首先这次身份认证会委托给Security Manager，而Security Manager又会委托给Authenticator，
接着Authenticator会把传过来的token再交给我们自己注入的Realm进行数据匹配从而完成整个认证。如果不太了解这个流程建议再仔细读一下官方提供的
Authentication说明文档：http://shiro.apache.org/authentication.html

Spring @ControllerAdvice与@RestControllerAdvice注解：
https://blog.csdn.net/fang_qiming/article/details/79907979
https://baijiahao.baidu.com/s?id=1613899474131869768&wfr=spider&for=pc

Spring mvc 之 AbstractHttpMessageConverter 自定义Http消息转化器：https://blog.csdn.net/fang_qiming/article/details/79927708

各种token，分别用于什么场景？
jwt工程里面用的token不一样，注意对比一下，并分析源代码。jwt token过期重发机制搞清楚
看一下UsernamePasswordToken实现的2个接口里面都有什么方法

看一下ByteSource这个接口。心得：分析源码的时候多注意观察接口

为什么有的Bean带参数有的又直接在函数内部里面弄对象？
SimpleAuthenticationInfo实现了MergableAuthenticationInfo, SaltedAuthenticationInfo

spring获取加载的所有bean及bean的加载过程：
https://blog.csdn.net/long243416336/article/details/80590032
https://blog.csdn.net/dc282614966/article/details/81480002
https://www.cnblogs.com/leftthen/p/5440107.html
https://www.jianshu.com/p/210115d5a4aa
在Spring容器中，我们手工注解@Bean 将被优先加载，框架不会重新实例化其他的 PlatformTransactionManager 实现类

Subject的方法好好看一下。包括login方法【直接调试跟踪代码】
shiro与缓存再看一下，开涛的书要看透（虽然有些章节写的并不好）
KickoutSessionControlFilter extends AccessControlFilter
如：当前类路径下有 Mybatis 这个 JAR 包，MybatisAutoConfiguration 注解就能根据相关参数来配置 Mybatis 的各个 Spring Bean

ApplicationContext也能autowire？https://www.cnblogs.com/trekxu/p/9094860.html
@bean和@component：
https://blog.csdn.net/u011263417/article/details/79781686
https://blog.csdn.net/ztx114/article/details/82665544
http://www.cnblogs.com/shamo89/p/8051350.html

shiro的重复登录问题：
https://blog.csdn.net/sunsgne_ac/article/details/79289770
https://blog.csdn.net/wdsafmy468619/article/details/47041467
https://www.cnblogs.com/zhanying999666/p/8392592.html



如何知道引入的一个组件要加载哪些bean？怎样看定义了哪些bean？例如mybatis。当然idea下面的spring标签有了名字可以查询。
@Bean的参数bean都已经生成了，再用我的demo工程再确认一下
result：先写通，再优

.DelegatingFilterProxy是怎么初始化的？

mybatis-spring：
sqlsessionfactory 注入datasource
为啥有了@Mapper注解后就不需要@Repository了
以前只知道双向绑定这个名字，现在可以思考原理了
Spring与Mybatis三种整合方法：https://www.cnblogs.com/onlymate/p/7865463.html

spring AOP再搞一遍
尝试使用rest接口，可以更简洁同时也能暴露更少信息

sessionListener：https://www.cnblogs.com/qsymg/p/9836122.html
boolean isServletContainerSessions();//是否使用 Servlet 容器的会话。如果使用，是怎么样的？
ServletContainerSessionManager：DefaultWebSecurityManager 使用的默认实现，用于 Web 环境，其直接使用 Servlet 容器的会话
在 Servlet 容器中，默认使用 JSESSIONID Cookie 维护会话

用配置文件配DataSource【还有参数问题，怎么传入】，这一块还是没有搞明白（@Configuration、properties文件、xml三种配置方式的代码分析）
能看到logback启动打的日志吗？我看公司项目有

lucene相关的再看一下

把我的activiti工程上传。我的activiti demo为啥没启动起来？先检查一下
Error creating bean with name 'requestMappingHandlerMapping'：这种错误可能是少了包

Postman mockserver详细教程：https://blog.csdn.net/testdeveloper/article/details/80559538

CommandLineRunner（源码）：
https://blog.csdn.net/qq_26323323/article/details/80856973
https://www.jianshu.com/p/5d4ffe267596
https://www.cnblogs.com/chenpi/p/9696310.html

看mybatis实现PlatformTransactionManager这个接口的代码在哪个包里面
mybatis的 useGeneratedKeys 是怎样实现的？ https://blog.csdn.net/tt50335971/article/details/53487260

spring-boot-starter-web
要有一种引领的意识，赚钱在其后，否则永远无法成事

@Service("activityService")注解参数有帮助吗？

百度云20元每年弄一个（RabbitMQ用windows完，用于redis、zookeeper、zuul）：https://cloud.baidu.com/campaign/CreateFuture-2019/index.html?track=cp:dsp|pf:pc|pp:chui-bokeyuan-huodong-19kuanghuanji-rumenjianzhanyunxuji-C1-190515|pu:C1-tupian|ci:2019khj|kw:2121019#4
29元的服务器：https://www.yisu.com/hk/huodong.html?gclid=EAIaIQobChMI_OyGjcmc4gIV1m6LCh1NxgdsEAEYASAAEgLCHfD_BwE

周日：
静态页面的目录放开：http://localhost:8080/static/index.html
@RequestBody用起来
1.加jwt支持（ShiroJwtConfig、CustomJwtRealm，把里面的代码逐行看懂），密码过期及“记住我”的策略，密码输错次数限制；
https://blog.csdn.net/qq_32786139/article/details/82658197
https://blog.csdn.net/qq_32786139/article/details/82658197
【把jwt和前后端分离配好后，完整测一波】
registry.addResourceHandler("/static/**").addResourceLocations("classpath:/static/");：https://my.oschina.net/silenceyawen/blog/1609603

spring和Java Enterprise标签可以看了
activiti从6.0上面的版本开始搞
【观察】配置了数据源和activiti后，启动项目，activiti 的各个服务组件就已经被加入到spring容器中了
run菜单里的Endpoints

jwt是否放到common里面并且便于后面抽包？
观察日志里面对中间件的日志打的是不是全，把这一块彻底搞明白

泛型的问号适合放在返回值里面吗？Response<?>

ts里面的Observable<T> implements Subscribable<T>。涉及到RxJS的概念

网上的captcha库：
Spring Boot Starter SimpleCaptcha。Patchca、Kaptcha，jcaptcha太老了
直接注入一个passwordService来加密密码

前端开发了解：
1.VSCode、node、angular、typescript：
https://www.cnblogs.com/clwydjgs/p/10078065.html
https://www.cnblogs.com/parry/p/vscode_top_ten_plugins.html
下载：https://code.visualstudio.com/docs/?dv=win64user
python也可以用VSCode、sublimeText来搞
2.sublimeText、node、angular、typescript；
对比VSCode和sublimeText

shiro的下面两大功能：
Concurrency：shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；
<V> V execute(Callable<V> callable) throws ExecutionException;
void execute(Runnable runnable);
<V> Callable<V> associateWith(Callable<V> callable);
Runnable associateWith(Runnable runnable);
Testing：提供测试支持；

把shiro官方教程也看一遍，思考：开涛到底是根据那个写的还是自己读代码理解后写的教程
spring transaction源码分析--事务架构：https://www.cnblogs.com/davidwang456/p/4309038.html
Spring事务配置的五种方式：https://www.cnblogs.com/onlymate/p/7805369.html

controller方法的执行：把抛出异常、HttpServletRequest/HttpServletResponse两个问题解决掉。看一下HttpMessageConverter在流程中的哪个位置起作用
HttpServletResponseWrapper
@RequestBody、@RequestParam、MultipartFile等是怎么封装的，还有@CookieValue、@ExceptionHandler等
一网打尽 @ExceptionHandler、HandlerExceptionResolver、@controlleradvice 三兄弟：https://www.xttblog.com/?p=3586
@ControllerAdvice的实现：https://blog.csdn.net/wangpeng322/article/details/81912353
ContentNegotiatingViewResolver，内容协商规图解析器，它迓是规图解析器，只是它支
持根据请求信息将同一模型数据以丌同的规图方式展示（如json、xml、html等），RESTful
架构风格中很重要的概念（同一资源，多种表现形式）
@RequestPart：提供对“multipart/form-data”请求的全面支持，支持Servlet 3.0文件
上传（javax.servlet.http.Part）、支持内容的HttpMessageConverter（即根据请求头的
Content-Type，来判断内容匙数据是什么类型，如 JSON、XML，能自劢转换为命令对象），
比@RequestParam更强大（只能对请求参数数据绊定，key-alue格式），而@RequestPart
支持如JSON、XML内容匙数据的绊定；详见本章的第×××节；

Flash 属性 和 RedirectAttribute：通过FlashMap存储一个请求的输出，当迕入另一个
请求时作为该请求的输入，典型场景如重定向（POST-REDIRECT-GET模式，1、POST时
将下一次需要的数据放在FlashMap；2、重定向；3、通过GET讵问重定向的地址，此时
FlashMap会把1放到 FlashMap的数据取出放到请求中，幵从FlashMap中删除；从而
支持在两次请求乊间保存数据幵防止了重复表单提交）。
Spring Web MVC提供FlashMapManager用亍管理FlashMap，默讣使用
SessionFlashMapManager，即数据默讣存储在session中

DispatcherServlet主要用作职责调度工作，本身主要用亍控制流程，主要职责如下：
1、文件上传解析，如果请求类型是multipart将通过MultipartResolver迕行文件上传解析；
2、通过HandlerMapping，将请求映射到处理器（迒回一个HandlerExecutionChain，
它包括一个处理器、多个HandlerInterceptor拦截器）；
3、通过HandlerAdapter支持多种类型的处理器(HandlerExecutionChain 中的处理器)；
4、通过ViewResolver解析逻辑规图名到具体规图实现；
5、本地化解析；
6、渲染具体的规图等；
7、如果执行过程中遇到异常将交给HandlerExceptionResolver 来解析

springboot使用shiro和pac4j-cas 实现cas单点登录：https://blog.csdn.net/hsp1990/article/details/83621817

eureka.instance.appname 与 spring.application.name 的区别：https://blog.csdn.net/ezreal_king/article/details/72930401/
springboot新特性

动态修改日志级别
通过org.springframework.boot.logging.LoggingSystem提供的api即可
针对某一个包修改日志级别

不同注解的扫描顺序？是否先扫@configuration？
loggingSystem.setLogLevel(null, LogLevel.DEBUG);

如，默认时是info模式，未修改时，debug模式是不会输出的。

RxJava、RxJS

框架搭好后，shiro需要学习第二遍。springmvc+shiro彻底搞清楚、知道怎么调试后，会是一个大的突破
不能够快速调试，在新工作中也会遇到困难
Spring源码解析——如何阅读源码：
https://www.cnblogs.com/xing901022/p/4178963.html
https://blog.csdn.net/qq_27409289/article/details/73696207
https://baijiahao.baidu.com/s?id=1609595005078804580&wfr=spider&for=pc
实现IoC容器：
https://www.cnblogs.com/dooor/p/5346333.html
https://chenguanwei2008.iteye.com/blog/361558
https://cloud.tencent.com/developer/article/1422428
https://www.jianshu.com/p/d6991030d84d?jdyscene=chat
https://www.jianshu.com/p/22863e6c1210
https://blog.csdn.net/u010994169/article/details/71169986

关于缓存：
【学习别人分析源码的方式。这个里面提到的本地缓存，能否结合弱引用那些东西看看】https://www.cnblogs.com/nuccch/p/8044226.html
1.缓存的使用、更新等细节问题；2.如果不使用shiro提供的Cache接口呢？换句话说，shiro的Cache接口在集成方面有什么优势？
Spring boot shiro session cache ecache redis 共存配置：https://www.jianshu.com/p/f304f77875ed
SpringBoot+Shiro+ehcache实现登录失败超次数锁定帐号：https://blog.csdn.net/qq_33229669/article/details/87945020
spring boot 使用spring cache 整合多级缓存(EhCache,Redis)：https://blog.csdn.net/zhaoyachao123/article/details/79657358
shiro-ehcache要求ehcache的版本是2.6.11，升版本怎么搞？
关于ehcache缓存中eternal及timeToLiveSeconds和timeToIdleSeconds的说明：https://blog.csdn.net/xiongzirui/article/details/50820181
CacheConfiguration类实现看一下，然后看看怎么切换redis
1.ehcache并且要能快速降级成没有cache的版本，或者升级成redis；
假如要用ehcache又没人实现CacheManager接口的话，正确的方式就是自己实现了
shiro-ehcache的代码是可以读完的，从这个入手
EhCacheManager已经配好，整个shiro里cache的使用？
Ehcache看到这里了：https://blog.csdn.net/qq_32786139/article/details/82658197
Ehcache【要能最接近生产环境测试】【先得搞清楚shiro自己的cache】:
https://www.jianshu.com/p/05f3ede0b389
https://blog.csdn.net/qq_28988969/article/details/78210873
https://blog.csdn.net/qq_28143647/article/details/79789368
开涛的例子中，为啥要使用单例的缓存？
【这个文章有注入缓存管理器的用法】
https://blog.csdn.net/qq_32786139/article/details/82658197
含清楚缓存的写法：https://www.cnblogs.com/yinfengjiujian/p/9083361.html
使用@Cacheable把数据存进缓存：切换为redis后可以这样搞吗？了解这个注解的细节
Spring定义了CacheManager和Cache接口统一不同的缓存技术。其中CacheManager是Spring提供的各种缓存技术的抽象接口【要理解这种设计方式，再思考一下】
ehcache3、javax.cache API（JSR-107）需要搞清楚
Shiro缓存使用Redis、Ehcache、自带的MpCache实现的三种方式实例：https://www.cnblogs.com/zfding/p/8536480.html
对shiro-ehcache包的理解：这个包实现了shiro里面缓存相关的接口，同时带有ehcache的功能。类似的实现还有shiro-redis。
shiro 刷新认证以及权限缓存（略坑）：https://blog.csdn.net/qq_37959142/article/details/80020899
解决shiro-redis集成序列化的问题：https://blog.csdn.net/Nightliar/article/details/81282164
springboot+shiro实现登陆过滤、权限认证、shiro密码加密、ehcache缓存（附demo项目）：
https://blog.csdn.net/qq_32786139/article/details/82658197

Spring解析，加载及实例化Bean的顺序（零配置）：https://blog.csdn.net/qq_27529917/article/details/79329809
吐血整理 20 道 Spring Boot 面试题：https://www.jianshu.com/p/63ad69c480fe/
看代码：sessionValidationScheduler ： 会话验证调度器，sessionManager 默认就是使用 ExecutorServiceSessionValidationScheduler，其使用 JDK 的 ScheduledExecutorService 进行定 期调度并验证会话是否过期

要敏捷
有没有jwt的两套应该是可以快速切换的，做成通用的
全局异常处理做进来
富文本编辑器、activiti做进来
websocket用起来

activiti demo网站试用：
http://www.jq22.com/yanshi4014
http://www.jq22.com/jquery-info4014
这种比较专业的，可以在下面评论，把别人引到自己的网站，很容易来流量和转换成下载赚钱。还可以通过咨询服务赚钱

Spring：利用ApplicationContextAware装配Bean：
https://www.cnblogs.com/tflowingcloud/p/8443010.html
https://www.jianshu.com/p/22e7fba07ce7
https://blog.csdn.net/mdq11111/article/details/79050280
https://blog.csdn.net/bailinbbc/article/details/76446594

这种写法没有autowire，思考为什么可以成功：https://blog.csdn.net/pingweicheng/article/details/80593258

看看阿里云
搞点日本的文具过来卖

mysql的geometry扩展：
https://www.linuxidc.com/Linux/2018-09/154191.htm
https://www.jianshu.com/p/d6bf587389f1
@Bean注解与applicationContext.getBean的联系区别

DataSource的configuration，包括DataSource和DataSourceTransactionManager两个Bean
mybatis plus里面 A extends DataEntity<A>的写法

通过HttpServletResponseWrapper修改response输出流：
https://www.cnblogs.com/linma/p/7845124.html
https://www.cnblogs.com/gexiaoshan/p/6429888.html

EasyUI【比较EasyUI和bootstrap等不同的技术】：
2.前后端连起来（包括shiro）：springboot+EasyUI+Shiro；
3.用Angular或者vue版的前端；
https://www.cnblogs.com/jingmoxukong/p/10239821.html
http://www.jeasyui.cn/download.html
美的让人窒息的后台模板：http://www.jq22.com/jquery-info1583
整理了八个开源的 Spring Boot 学习资源：https://zhuanlan.zhihu.com/p/66125910
给大家推荐8个SpringBoot精选项目：https://cloud.tencent.com/developer/article/1197203
最值得拥有的免费Bootstrap后台管理模板：https://zhuanlan.zhihu.com/p/39945434
web-flash: https://github.com/enilu/web-flash
10个你值得收藏的牛逼开源后台控制面板：https://mp.weixin.qq.com/s?__biz=MzAxODcyNjEzNQ==&mid=2247487067&idx=1&sn=83241fa91f95b54c59468c9fecc4ed72&chksm=9bd0a3c3aca72ad56d7c39708d4b068d900bd7b3a64d066dad54b39c65e2db9ad7b4cfab6b22&scene=21#wechat_redirect
有springboot+vue+shiro的，那angular的呢？自己实现一下

简单快速的用SpringBoot访问静态资源（图片、html）【用thymeleaf的方式】：https://blog.csdn.net/qq_36481052/article/details/79075214
Thymeleaf 模板引擎简介 与 Spring Boot 整合入门：https://blog.csdn.net/wangmx1993328/article/details/81054474
用yml、properties文件配置静态页面（这种方式更优雅）：https://blog.csdn.net/Mr_yangzc/article/details/80805035

@EnableAsync

shiro需要搞清楚的流程：
2.CredentialsMatcher使用流程
RunAs理解：如果涉及到工作流之类的，runAs在具体代码方面会不会有啥问题？代码的通用性能否保证？

redirectAttributes.addFlashAttribute("msg", "操作成功");

最初配通springboot+shiro的文档：
https://blog.csdn.net/weixin_38132621/article/details/80216056
springboot+shiro+jwt：
https://blog.csdn.net/u013615903/article/details/78781166
https://blog.csdn.net/u012149181/article/details/79445758
https://www.jianshu.com/p/0b1131be7ace【这个里面还用到了FilterRegistrationBean、Authenticator、SessionStorageEvaluator】
SessionStorageEvaluator【代码其实很简单，看代码】：
https://www.jianshu.com/p/3b48ea215990
https://blog.csdn.net/iteye_10899/article/details/82675611
session共享采用shiro-redis的方案（修改Session获取方式）：
https://cloud.tencent.com/developer/article/1342794
https://blog.csdn.net/haoyuyang/article/details/80036989
https://blog.csdn.net/u013615903/article/details/78781166
shiro和springboot流程的完全理解是我现在生产力提升最大的障碍，相比之下多线程那些反而没那么难了，当然并发也还需要相当大的精力

MyBatis Generator：
http://www.mybatis.org/generator/
https://www.jianshu.com/p/e09d2370b796
https://www.cnblogs.com/zcy_soft/p/3357980.html
5.flyway
6.druid

logback 配置详解（还需要继续搞）：
https://www.jianshu.com/p/1ded57f6c4e3?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
slf4j及使用@Slf4j注解写日志继续研究【怎么确定该打的都打出来了，逐个确认每个jar组件怎么打日志】：
https://projectlombok.org/api/lombok/extern/slf4j/Slf4j.html
http://www.importnew.com/28494.html
https://blog.csdn.net/duguxiaobiao/article/details/78988409
分析启动日志（能否从开涛的教程分析？），分析springboot启动过程
是否有必要把error单独打印到单独的文件？可能需要借助过滤器：https://blog.csdn.net/zzzgd_666/article/details/80458444
从控制台给logger传参数【部署】
logger和root：https://www.cnblogs.com/muhezi/p/4503934.html
日志：看看有哪些字段可以选（确保线程相关的一定不能掉，还有请求id等）
logback Filter 过滤器：
https://blog.csdn.net/ryo1060732496/article/details/84349835
https://blog.csdn.net/dyc87112/article/details/84349299
mySql---logback日志写入数据库(mysql)配置【appender原理】：https://www.cnblogs.com/chihirotan/p/6185547.html

在activiti这种抽象程度比较高的中间件里面，调试分析代码逻辑的时候数据库日志的作用就体现出来了。控制台调试最好配置打印出来

swagger2.把swagger-ui.html从权限里面放开【尚未成功】

周四：
加mybatis配置（要确认加载了，跟踪加载流程）、logback配置、druid配置
整理一下utils出来，例如uuid。如果appache common有就更好
ObjectMapper也autowire，这样有没有问题？

跨域的配置加上【要测试】
用我的batis目录的代码来建立dao层测试【继续搞mybatis代码分析】；
2.DAO层100%单元测试覆盖【先把单元测试搭起来，用mvn命令跑起来，CI、DevOps一点点往前推进】：https://www.cnblogs.com/lxnlxn/p/5996707.html
5.看前后端合并、分离的部署（先搞合并的）
6.整合并删除我的financial项目
6.加@Configuration注解；
7.websocket继续学习，写几个demo（比较这个里面的session）：
https://www.cnblogs.com/strugglion/p/10021173.html
https://blog.csdn.net/moshowgame/article/details/80275084
要能快速验证我的哪些方法没有被权限覆盖到，必须要做到这一点【尝试用反射控制】
再加上缓存、ES、RabbitMQ，一个系统雏形不就有了嘛？
重新封装返回值【网上看别人的规范】前后端接口规范
yml和properties去掉一个：https://www.bejson.com/devtools/properties2yaml/

maven跑test搞清楚（为啥放开2个注释会有报错）
@RunWith(SpringRunner.class)
@SpringBootTest

@RunWith(SpringJUnit4ClassRunner.class) // SpringJUnit支持，由此引入Spring-Test框架支持！
@SpringApplicationConfiguration(classes = SpringBootSampleApplication.class) // 指定我们SpringBoot工程的Application启动类
@WebAppConfiguration // 由于是Web项目，Junit需要模拟ServletContext，因此我们需要给我们的测试类加上@WebAppConfiguration
SpringRunner is an alias for the SpringJUnit4ClassRunner.

对比shiro的SecureRandomNumberGenerator与JDK的

关于TransactionAwareDataSourceProxy：https://summerhome.iteye.com/blog/2383585

SpringBoot源码研究之Actuator：https://blog.csdn.net/lqzkcx3/article/details/89737579

前后端分离后续：spring跨域配置、jwt配置、启动多个服务，或者用shiro-redis的方式
以前的架构水平还是不行，现在深入搭框架后，对业务逻辑的兴趣没有以前那么大了

UUID 和 GUID是有区别的：
https://blog.csdn.net/xf_zhen/article/details/82260567
https://www.cnblogs.com/powerwu/articles/4433450.html

项目的包划分：controller、service、manager、dao、pojo(model、vo等)、config、filter、utils、shiro、websocket，
还可以有event、handler、entity、exception、common、global等

Spring Boot Admin（与actuator关系？）
Spring boot 2.0 Actuator 的健康检查（默认有15项，都打开看一下：http://localhost:8080/actuator/beans）：
https://blog.csdn.net/voilet_bin/article/details/83028698
https://www.jianshu.com/p/1aadc4c85f51
mybatis pagehelper【需要搞清楚原理】：
https://blog.csdn.net/justry_deng/article/details/82933941
https://pagehelper.github.io/
https://www.cnblogs.com/kangoroo/p/7998433.html
【分析原理】swagger是一个流行的API开发框架，这个框架以“开放式API声明”（OpenAPI Specification，OAS）为基础，对整个API的开发周期都提供了相应的解决方案，是一个非常庞大的项目（包括设计、编码和测试，几乎支持所有语言）：https://blog.csdn.net/moshowgame/article/details/80265480

【mybatis：数据库驱动的预编译，这是个非常重要的概念】
https://segmentfault.com/a/1190000004617028
https://blog.csdn.net/weixin_34452850/article/details/88991943（这个里面的概念不准确，但是给了源码）
https://blog.csdn.net/hanchao_h/article/details/53640720
https://www.cnblogs.com/haojun/p/10682407.html
https://www.jianshu.com/p/59155963d790
https://blog.csdn.net/LoveInWar/article/details/89646085
Mybatis解析动态sql原理分析：https://www.cnblogs.com/fangjian0423/p/mybaits-dynamic-sql-analysis.html

ConfigClusterResolver - Resolving eureka endpoints via configuration
HttpServletrequest 与HttpServletResponse总结：https://www.cnblogs.com/liuyandeng/p/5336649.html
SpringMVC是怎么封装HttpServletRequest的？数据是怎么封装的？controller是怎么被调用的？
@requestbody和httpServletRequest区别：https://www.oschina.net/question/2491333_2283678
public interface HttpServletRequest extends ServletRequest {
    String BASIC_AUTH = "BASIC";
    String FORM_AUTH = "FORM";
    String CLIENT_CERT_AUTH = "CLIENT_CERT";
    String DIGEST_AUTH = "DIGEST";
将我的项目中HttpServletRequest都过一遍，都干掉。另外：参数中既有request又有response的怎么理解？

UsernamePasswordToken实现了RememberMeAuthenticationToken接口

SpringBoot中application参数中文详解：https://blog.csdn.net/qq_25667339/article/details/79155805

postman：form-data、x-www-form-urlencoded、raw、binary分别对应的前端传递方式？【协议层面的东西】
https://blog.csdn.net/xybelieve1990/article/details/81111786

如果不想装mysql可以用SQLite：https://www.runoob.com/sqlite/sqlite-tutorial.html

idea创建含有多个module的project：
https://blog.csdn.net/ssllkkyyaa/article/details/80855133
https://blog.csdn.net/wnf2018/article/details/80655153

springboot项目解决 No beans of 'UserDao' type found 问题：
https://blog.csdn.net/baichilele/article/details/82115918
https://blog.csdn.net/u012453843/article/details/54906905

ComponentScan注解用法介绍和注意事项：https://blog.csdn.net/neulily2005/article/details/83750027

@Import 注解：
https://www.jianshu.com/p/afd2c49394c2
https://blog.csdn.net/pange1991/article/details/81356594
https://mp.weixin.qq.com/s?__biz=MzAxMjY1NTIxNA==&mid=2454441963&idx=1&sn=6a59fe88c1107765c77820c0e9b8b4ef&chksm=8c11e0eabb6669fcb28553237b8b841a981cb0ce3cb0e4e9d0f752ce1a0b49cd4071f69cd1a6&scene=21#wechat_redirect
Import 注解与 ImportSelector 和 ImportBeanDefinitionRegistrar：https://www.jianshu.com/p/f74bc90b918e
深入理解Spring的ImportSelector接口：https://www.cnblogs.com/niechen/p/9262452.html

RetryLimitHashedCredentialsMatcher与cache已成功解耦


